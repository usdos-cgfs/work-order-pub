{
  "version": 3,
  "sources": ["../lib/webcomponents/searchselect/SearchSelectTemplate.js", "../lib/webcomponents/searchselect/searchselect.js", "../src/app.txt", "../src/components/index.js", "../src/primitives/ValidationError.js", "../src/entities/People.js", "../src/entities/RequestOrg.js", "../src/primitives/Entity.js", "../src/entities/Assignment.js", "../src/infrastructure/SAL.js", "../src/infrastructure/Authorization.js", "../src/components/BaseComponent.js", "../src/components/AssignmentActions/ApprovalTemplate.js", "../src/components/AssignmentActions/ApprovalModule.js", "../src/components/AssignmentActions/AssignTemplate.js", "../src/components/AssignmentActions/AssignModule.js", "../src/components/AssignmentActions/ResolverTemplate.js", "../src/components/AssignmentActions/ResolverModule.js", "../src/primitives/ConstrainedEntity.js", "../src/components/ConstrainedEntity/DefaultEdit.js", "../src/components/ConstrainedEntity/DefaultView.js", "../src/components/ConstrainedEntity/ConstrainedEntityModules.js", "../src/entities/PipelineStage.js", "../src/entities/Action.js", "../src/entities/Attachment.js", "../src/entities/Comment.js", "../src/entities/Holiday.js", "../src/fields/BaseField.js", "../src/constants/RequestStates.js", "../src/components/ActivityLogComponent.js", "../src/common/EntityUtilities.js", "../src/common/DateUtilities.js", "../src/common/Router.js", "../src/primitives/Task.js", "../src/stores/Tasks.js", "../src/env.js", "../src/infrastructure/Notifications.js", "../src/components/Fields/BaseFieldModule.js", "../src/components/Fields/BlobModule.js", "../src/components/Fields/CheckboxModule.js", "../src/components/Fields/DateModule.js", "../src/components/Fields/LookupModule.js", "../src/components/Fields/PeopleModule.js", "../src/components/Fields/SearchSelectModule.js", "../src/components/Fields/SelectModule.js", "../src/components/Fields/TextAreaModule.js", "../src/components/Fields/TextModule.js", "../src/fields/TextAreaField.js", "../src/infrastructure/RequestsByStatusSet.js", "../src/stores/Requests.js", "../src/views/RequestDetailView.js", "../src/entities/Request.js", "../src/servicetypes/index.js", "../src/servicetypes/BaseServiceDetail.js", "../src/servicetypes/AccessDetail.js", "../src/servicetypes/CHAccessDetail.js", "../src/servicetypes/ch_access_fletc/components/GenerateAccessControlEmailAction.js", "../src/servicetypes/ch_access_fletc/CHAccessFLETCDetail.js", "../src/servicetypes/CHConferenceDetail.js", "../src/servicetypes/CHEquipRepairDetail.js", "../src/servicetypes/CHFurnitureDetail.js", "../src/servicetypes/CHHRTrainingDetail.js", "../src/servicetypes/CHMobileDetail.js", "../src/servicetypes/CHNoticeDetail.js", "../src/servicetypes/CHReconfigDetail.js", "../src/servicetypes/CHSuppliesDetail.js", "../src/servicetypes/CHTeleworkDetail.js", "../src/servicetypes/CHTransportDetail.js", "../src/servicetypes/CHVoicemailDetail.js", "../src/servicetypes/ContractorSupplementDetail.js", "../src/servicetypes/DVCSetupDetail.js", "../src/servicetypes/FPCashMgmtDetail.js", "../src/servicetypes/FPCashierOperationsDetail.js", "../src/servicetypes/FPCodesDetail.js", "../src/servicetypes/FPCollectionsDetail.js", "../src/servicetypes/FPTravelDetail.js", "../src/servicetypes/ITHardwareDetail.js", "../src/servicetypes/IronKeyDetail.js", "../src/servicetypes/LocksmithDetail.js", "../src/servicetypes/MobileDetail.js", "../src/servicetypes/MotorPoolDetail.js", "../src/servicetypes/OvertimeDetail.js", "../src/servicetypes/PresentationDetail.js", "../src/servicetypes/RequisitionDetail.js", "../src/servicetypes/SDMAdminRequestDetail.js", "../src/servicetypes/SDMTierIDetail.js", "../src/servicetypes/TeleworkDetail.js", "../src/servicetypes/ch_overtime/views/View.js", "../src/servicetypes/ch_overtime/views/Edit.js", "../src/servicetypes/ch_overtime/components/APMActionsTemplate.js", "../src/servicetypes/ch_overtime/components/APMActions.js", "../src/servicetypes/ch_overtime/components/GovManagerActionsTemplate.js", "../src/servicetypes/ch_overtime/components/GovManagerActions.js", "../src/servicetypes/ch_overtime/CHOvertimeDetail.js", "../src/servicetypes/diplomatic_passport/views/Edit.js", "../src/servicetypes/diplomatic_passport/views/View.js", "../src/servicetypes/diplomatic_passport/DiplomaticPassportDetail.js", "../src/servicetypes/fp_fiscal_irreg/views/Edit.js", "../src/servicetypes/fp_fiscal_irreg/FPFiscalIrregDetail.js", "../src/servicetypes/it_software/views/View.js", "../src/servicetypes/it_software/components/CreateProcurementAction.js", "../src/servicetypes/it_software/ITSoftware.js", "../src/servicetypes/property_space/views/Edit.js", "../src/servicetypes/property_space/views/View.js", "../src/servicetypes/property_space/PropertySpaceDetail.js", "../src/servicetypes/template/views/View.js", "../src/servicetypes/template/views/Edit.js", "../src/servicetypes/template/TemplateDetail.js", "../src/entities/ServiceType.js", "../src/entities/RequestIngest.js", "../src/infrastructure/ApplicationDbContext.js", "../src/fields/BlobField.js", "../src/fields/CheckboxField.js", "../src/fields/DateField.js", "../src/fields/LookupField.js", "../src/fields/PeopleField.js", "../src/fields/SelectField.js", "../src/fields/TextField.js", "../src/entities/Notification.js", "../src/components/PendingRequestIngests/PendingRequestIngestsTemplate.js", "../src/components/PendingRequestIngests/PendingRequestIngestsModule.js", "../src/common/DataTableExtensions.js", "../src/stores/Assignments.js", "../src/components/RequestsByStatus/ClosedRequestsTableTemplate.js", "../src/components/RequestsByStatus/OpenOfficeRequestsTableTemplate.js", "../src/components/RequestsByStatus/OpenRequestsTableTemplate.js", "../src/components/RequestsByStatus/RequestsByStatusTableModules.js", "../src/components/RequestsByServiceType/RequestsServiceTypeTemplate.js", "../src/components/RequestsByServiceType/RequestsByServiceTypeModule.js", "../src/components/RequestsByServiceType/RequestsServiceTypeTableTemplate.js", "../src/components/RequestsByServiceType/RequestsByServiceTypeTableModule.js", "../src/components/MyAssignments/MyAssignmentsTemplate.js", "../src/components/MyAssignments/MyAssignmentsModule.js", "../src/components/RequestHeader/RequestHeaderEditTemplate.js", "../src/components/RequestHeader/RequestHeaderViewTemplate.js", "../src/components/RequestHeader/RequestHeaderModules.js", "../src/components/Pipeline/PipelineTemplate.js", "../src/components/Pipeline/PipelineModule.js", "../src/components/QuickInfo/QuickInfoTemplate.js", "../src/components/QuickInfo/QuickInfoModule.js", "../src/components/NewAssignment/NewAssignmentTemplate.js", "../src/components/NewAssignment/NewAssignmentModule.js", "../src/components/Toasts/TaskToastTemplate.js", "../src/components/Toasts/TaskToastModule.js", "../src/components/EmailRequest/EmailRequestTemplate.js", "../src/components/EmailRequest/EmailRequestModule.js", "../src/infrastructure/RegisterComponents.js", "../src/views/NewRequestView.js", "../src/views/OfficeRequestsView.js", "../src/views/MyRequestsView.js", "../src/common/KnockoutExtensions.js", "../src/views/MyAssignmentsView.js", "../src/app.js", "../src/app_bundle.js"],
  "sourcesContent": ["const html = String.raw;\r\n\r\nexport const searchSelectTemplate = html`\r\n<div>\r\n  <style>\r\n    .search-group {\r\n      display: none;\r\n    }\r\n    /* Testing Style HTML Elements */\r\n    .elements-container {\r\n      display: flex;\r\n      column-gap: 20px;\r\n    }\r\n    .select-container {\r\n      width: 150px;\r\n    }\r\n\r\n    /* Actual Elements */\r\n\r\n    div.search-group {\r\n      display: revert;\r\n      position: relative;\r\n      min-height: 1rem;\r\n    }\r\n\r\n    .search-input-group {\r\n      display: flex;\r\n      align-items: center;\r\n      background-color: white;\r\n      border: 1px solid lightgray;\r\n      box-sizing: content-box;\r\n      height: 1rem;\r\n      padding: 1px 0px;\r\n    }\r\n\r\n    .search-input-group input {\r\n      border: none;\r\n      width: 100%;\r\n      height: 1rem;\r\n    }\r\n\r\n    /* .caret {\r\n      content: \"\";\r\n      display: inline-block;\r\n      border: 4px solid transparent;\r\n      border-top-color: transparent;\r\n      border-top-color: black;\r\n      margin-left: 12px;\r\n      margin-top: 4px;\r\n    } */\r\n\r\n    .caret-bg {\r\n      background-image: url(\"#svg-caret-down\");\r\n      background-repeat: no-repeat;\r\n      min-width: 1rem;\r\n    }\r\n\r\n    .search-input-group::after {\r\n      aspect-ratio: 1 / 1;\r\n      height: 1rem;\r\n      content: \"\\276F\";\r\n      color: darkgray;\r\n      font-size: 0.7rem;\r\n      font-weight: bold;\r\n      text-align: center;\r\n      display: flex;\r\n      justify-content: center;\r\n      transition: transform 0.4s ease-in-out;\r\n    }\r\n\r\n    .search-group.active .search-input-group::after {\r\n      transform: rotate(90deg);\r\n    }\r\n\r\n    .search-input-group .vertical-spacer {\r\n      height: 85%;\r\n      min-height: 0.8rem;\r\n      border-left: 1px solid lightGray;\r\n    }\r\n    .search-input-group svg {\r\n      color: lightGray;\r\n      height: 85%;\r\n      transition-duration: 0.5s;\r\n    }\r\n\r\n    .search-group.active .search-input-group svg {\r\n      border: none;\r\n      transform: rotate(180deg);\r\n    }\r\n\r\n    .hidden {\r\n      display: none;\r\n    }\r\n\r\n    .secondary {\r\n      font-style: italic;\r\n    }\r\n\r\n    .test-toggle {\r\n      background-color: green;\r\n    }\r\n\r\n    .selected.item {\r\n      display: flex;\r\n      align-items: center;\r\n      width: fit-content;\r\n      color: #212529;\r\n      font-weight: normal;\r\n      font-size: 0.875rem;\r\n      background-color: #f8f9fa;\r\n      border-radius: 0.25rem;\r\n      border: 1px solid #dee2e6;\r\n      /* height: 1.5rem; */\r\n      /* top right bottom left */\r\n      /* padding: 0.1rem 0rem 0.1rem 0.5rem; */\r\n      padding-left: 0.75rem;\r\n      margin-bottom: 1px;\r\n    }\r\n\r\n    .selected.item div.remove {\r\n      /* border-style: none;\r\n  border-radius: 50%; */\r\n      border-top-right-radius: 0.25rem;\r\n      border-bottom-right-radius: 0.25rem;\r\n      margin-left: 0.4rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      height: 100%;\r\n      width: 1.5rem;\r\n      color: rgb(108, 117, 125);\r\n      aspect-ratio: 1/1;\r\n    }\r\n\r\n    .selected.item div.remove:hover {\r\n      background-color: darkgrey;\r\n      color: white;\r\n    }\r\n\r\n    .selected.item div.remove svg {\r\n      height: 1.25rem;\r\n      width: 1.25rem;\r\n    }\r\n\r\n    .filtered.item {\r\n      background-color: white;\r\n      padding: 0.1rem 1rem;\r\n      font-weight: normal;\r\n    }\r\n\r\n    .filtered.item.even {\r\n      background-color: rgb(233, 233, 233);\r\n    }\r\n\r\n    .filtered.item:hover {\r\n      background-color: lightgray;\r\n    }\r\n\r\n    .filtered.item.active {\r\n      background-color: lightblue;\r\n    }\r\n\r\n    #selected-items-text {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    .filtered-items {\r\n      list-style: none;\r\n      padding-left: 0;\r\n      margin-top: 3px;\r\n      /* display: none; */\r\n      position: absolute;\r\n      min-width: 100%;\r\n      max-height: 0px;\r\n      overflow-y: auto;\r\n      z-index: 1;\r\n      border: 0px solid lightgray;\r\n      box-sizing: border-box;\r\n      transition: all 0.4s ease-in-out;\r\n    }\r\n\r\n    .filtered-items.active {\r\n      /* display: block; */\r\n      max-height: 200px;\r\n      border: 1px solid lightgray;\r\n    }\r\n  </style>\r\n  <div id=\"search-group\" class=\"search-group\" tabindex=\"-1\">\r\n    <div id=\"selected-items-text\"></div>\r\n    <div class=\"search-input-group\" tabindex=\"-1\">\r\n      <input\r\n        id=\"search-input\"\r\n        class=\"search-input\"\r\n        type=\"text\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <div class=\"vertical-spacer\"></div>\r\n    </div>\r\n    <ul id=\"filtered-items-text\" class=\"filtered-items\"></ul>\r\n  </div>\r\n  <div id=\"icons\" class=\"hidden\" style=\"display: none\">\r\n    <div id=\"icon-close\" style=\"display: none\">\r\n      <svg\r\n        class=\"position-absolute top-50 start-50 translate-middle\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-width=\"2\"\r\n          d=\"M6 18L18 6M6 6l12 12\"\r\n        ></path>\r\n      </svg>\r\n    </div>\r\n    <div id=\"icon-caret-down\">\r\n      <svg\r\n        id=\"svg-caret-down\"\r\n        width=\"24px\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M6.1018 8C5.02785 8 4.45387 9.2649 5.16108 10.0731L10.6829 16.3838C11.3801 17.1806 12.6197 17.1806 13.3169 16.3838L18.8388 10.0731C19.5459 9.2649 18.972 8 17.898 8H6.1018Z\"\r\n          fill=\"#212121\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  </div>\r\n</div>\r\n`;\r\n", "import { searchSelectTemplate } from \"./SearchSelectTemplate.js\";\r\n\r\ncustomElements.define(\r\n  \"search-select\",\r\n  class extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      const templateText = searchSelectTemplate;\r\n\r\n      this.selectableItems = [];\r\n\r\n      this.attachShadow({ mode: \"open\" });\r\n\r\n      this.shadowRoot.innerHTML = templateText;\r\n\r\n      this.searchGroupElement = this.shadowRoot.getElementById(\"search-group\");\r\n      this.searchInputGroupElement = this.shadowRoot.querySelector(\r\n        \".search-input-group\"\r\n      );\r\n      this.searchInputElement = this.shadowRoot.getElementById(\"search-input\");\r\n      this.filteredItemsElement = this.shadowRoot.getElementById(\r\n        \"filtered-items-text\"\r\n      );\r\n\r\n      this.selectedItemsElement = this.shadowRoot.getElementById(\r\n        \"selected-items-text\"\r\n      );\r\n\r\n      this.options = this.querySelectorAll(\"option\");\r\n    }\r\n\r\n    initializeFilteredItems = () => {\r\n      this.options = this.querySelectorAll(\"option\");\r\n      this.filteredItemDivs = [...this.options].map((opt, index) => {\r\n        let li = document.createElement(\"li\");\r\n        li.classList.add(\"filtered\", \"item\");\r\n        li.classList.toggle(\"even\", index % 2);\r\n        //li.type = \"button\";\r\n        li.innerHTML = opt.innerHTML;\r\n        li.dataset.value = opt.value;\r\n        return li;\r\n      });\r\n\r\n      this.filteredItemsElement.replaceChildren(...this.filteredItemDivs);\r\n      this.updateFilteredItems();\r\n      this.updateSelectedItems(true);\r\n    };\r\n\r\n    updateFilteredItems = () => {\r\n      // Filter based off the search input\r\n      const searchText = this.searchInputElement.value;\r\n      this.filteredItemDivs.forEach((opt) => {\r\n        const optContainsText =\r\n          opt.innerText.toLowerCase().search(searchText.toLowerCase()) >= 0;\r\n\r\n        const shouldBeShown = !searchText || optContainsText;\r\n        opt.classList.toggle(\"hidden\", !shouldBeShown);\r\n      });\r\n\r\n      // Filter based off already selected items\r\n      [...this.options]\r\n        .filter((opt) => opt.hasAttribute(\"selected\"))\r\n        .map((opt) => {\r\n          this.filteredItemDivs\r\n            .find((div) => div.dataset.value === opt.value)\r\n            .classList.add(\"hidden\");\r\n        });\r\n\r\n      var count = [\r\n        ...this.filteredItemsElement.querySelectorAll(\"li:not(.hidden)\"),\r\n      ].map((li, index) => li.classList.toggle(\"even\", index % 2));\r\n\r\n      // Finally, if all items are selected, deactivate dropdown\r\n      //this.filteredItemsElement.classList.toggle(\"active\", count.length);\r\n      //console.log(\"updated filtered items\");\r\n    };\r\n\r\n    updateActiveFilteredItem = (keyDirection) => {\r\n      // We have used our arrow keys to navigate to an item\r\n      // Check that all our items are still visible\r\n      const visibleItems = this.filteredItemDivs.find(\r\n        (opt) => !opt.classList.contains(\"hidden\")\r\n      );\r\n      if (!visibleItems) {\r\n        return;\r\n      }\r\n\r\n      // find the currently active item\r\n      const activeItemIndex = this.filteredItemDivs.findIndex((opt) =>\r\n        opt.classList.contains(\"active\")\r\n      );\r\n\r\n      let index = activeItemIndex + keyDirection;\r\n      let item;\r\n\r\n      do {\r\n        if (index >= this.filteredItemDivs.length) {\r\n          index = 0;\r\n        }\r\n        // Iterate through the items until we find the next one that isn't hidden\r\n        item = this.filteredItemDivs.at(index);\r\n        index += keyDirection;\r\n      } while (item.classList.contains(\"hidden\"));\r\n\r\n      item.classList.add(\"active\");\r\n      if (activeItemIndex >= 0) {\r\n        this.filteredItemDivs[activeItemIndex].classList.remove(\"active\");\r\n      }\r\n    };\r\n\r\n    selectActiveFilteredItem = () => {\r\n      // We have hit enter after navigating to an item in our list\r\n      // find the currently active item\r\n      const activeItem = this.filteredItemDivs.find((opt) =>\r\n        opt.classList.contains(\"active\")\r\n      );\r\n\r\n      if (activeItem) {\r\n        this.selectFilteredItem(activeItem);\r\n        this.updateActiveFilteredItem(1);\r\n      }\r\n    };\r\n\r\n    updateSelectedItems = (initial = false) => {\r\n      this.selectedOptions = [...this.options].filter((opt) =>\r\n        opt.hasAttribute(\"selected\")\r\n      );\r\n\r\n      const closeCopy = this.shadowRoot.getElementById(\"icon-close\").innerHTML;\r\n      // const closeCopy = document.createElement(\"img\");\r\n      // closeCopy.setAttribute(\"src\", \"./icon/close.svg\");\r\n\r\n      const selectedItemDivs = this.selectedOptions.map((opt) => {\r\n        // const itemGroup = document.createElement(\"div\");\r\n        // itemGroup.classList.add(\"input-group\", \"input-group-sm\");\r\n        // itemGroup.dataset.value = opt.value;\r\n\r\n        // let itemText = document.createElement(\"div\");\r\n        // itemText.classList.add(\"input-group-text\");\r\n        // itemText.innerText = opt.innerHTML;\r\n\r\n        // const itemClose = document.createElement(\"button\");\r\n        // itemClose.classList.add(\"btn\", \"btn-sm\", \"btn-outline-secondary\");\r\n        // itemClose.style.width = \"1.5rem\";\r\n        // itemClose.innerHTML = closeCopy;\r\n\r\n        // itemGroup.appendChild(itemText);\r\n        // // itemGroup.append(itemText, itemClose);\r\n        // itemGroup.appendChild(itemClose);\r\n        // return itemGroup;\r\n        const itemGroup = document.createElement(\"div\");\r\n        itemGroup.classList.add(\"selected\", \"item\");\r\n        itemGroup.dataset.value = opt.value;\r\n\r\n        const itemText = document.createElement(\"div\");\r\n        // itemText.classList.add(\"input-group-text\");\r\n        itemText.innerText = opt.innerHTML;\r\n\r\n        // Append our close button\r\n        const close = document.createElement(\"div\");\r\n        close.classList.add(\"remove\");\r\n\r\n        //Add our svg close button\r\n        close.innerHTML = closeCopy;\r\n\r\n        itemGroup.appendChild(itemText);\r\n        itemGroup.appendChild(close);\r\n        return itemGroup;\r\n      });\r\n      this.selectedItemsElement.replaceChildren(...selectedItemDivs);\r\n      if (!initial) {\r\n        this.dispatchEvent(new Event(\"change\"));\r\n      }\r\n    };\r\n\r\n    selectFilteredItem = (item) => {\r\n      // We have clicked or otherwise selected an item.\r\n      [...this.options]\r\n        .find((opt) => opt.value === item.dataset.value)\r\n        .setAttribute(\"selected\", \"\");\r\n      this.updateSelectedItems();\r\n      this.updateFilteredItems();\r\n    };\r\n\r\n    removeSelectedItem = (item) => {\r\n      // We are removing an item from our selected items\r\n      [...this.options]\r\n        .find((opt) => opt.value === item.dataset.value)\r\n        .removeAttribute(\"selected\");\r\n      this.updateSelectedItems();\r\n      this.updateFilteredItems();\r\n    };\r\n\r\n    connectedCallback() {\r\n      this.filteredItemsElement.classList.toggle(\"active\", false);\r\n      this.initializeFilteredItems();\r\n\r\n      this.searchGroupElement.addEventListener(\"focusin\", (e) => {\r\n        //console.log(this.getAttribute(\"name\") + \" Adding active\");\r\n        this.filteredItemsElement.classList.toggle(\"active\", true);\r\n        this.searchGroupElement.classList.toggle(\"active\", true);\r\n        clearTimeout(this.focusOutTimeout);\r\n      });\r\n\r\n      this.searchGroupElement.addEventListener(\"focusout\", (e) => {\r\n        //console.log(this.getAttribute(\"name\") + \" focused out by \", e.target);\r\n\r\n        this.focusOutTimeout = setTimeout(() => {\r\n          //console.log(this.getAttribute(\"name\") + \" Removing active\");\r\n          this.filteredItemsElement.classList.remove(\"active\");\r\n          this.searchGroupElement.classList.remove(\"active\");\r\n        }, 0);\r\n      });\r\n\r\n      this.searchInputElement.addEventListener(\"input\", (e) => {\r\n        this.updateFilteredItems();\r\n      });\r\n\r\n      this.searchInputElement.addEventListener(\"focusout\", (e) => {\r\n        //console.log(\r\n        //this.getAttribute(\"name\") + \" input focused out by \", e.target;\r\n        //);\r\n      });\r\n\r\n      this.searchGroupElement.addEventListener(\"keydown\", (e) => {\r\n        // get the key\r\n        switch (e.code) {\r\n          case \"Tab\":\r\n            // tab\r\n            //this.filteredItemsElement.style.display = \"none\";\r\n            this.filteredItemsElement.classList.remove(\"active\");\r\n            break;\r\n          case \"ArrowDown\":\r\n            // down arrow\r\n            this.updateActiveFilteredItem(1);\r\n            break;\r\n          case \"ArrowUp\":\r\n            // up arrow\r\n            this.updateActiveFilteredItem(-1);\r\n            break;\r\n          case \"Enter\":\r\n            // Enter\r\n            this.handlingClick = true;\r\n            this.selectActiveFilteredItem();\r\n            break;\r\n          default:\r\n          // console.log(e.keyCode);\r\n        }\r\n      });\r\n\r\n      this.filteredItemsElement.addEventListener(\"click\", (e) => {\r\n        // console.log(\"clicked \" + e.target.innerHTML);\r\n        this.selectFilteredItem(e.target);\r\n      });\r\n      this.selectedItemsElement.addEventListener(\"click\", (e) => {\r\n        this.removeSelectedItem(e.target.closest(\"div.item\"));\r\n      });\r\n\r\n      // Child node added mutation listener\r\n      const mutationCallback = (mutationList, observer) => {\r\n        for (const mutation of mutationList) {\r\n          if (mutation.type === \"childList\") {\r\n            this.initializeFilteredItems();\r\n          }\r\n        }\r\n      };\r\n\r\n      this.mutationObserver = new MutationObserver(mutationCallback);\r\n      this.mutationObserver.observe(this, { childList: true });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n      try {\r\n        // this.searchGroupElement.removeEventListener();\r\n        // this.filteredItemsElement.removeEventListener();\r\n        // this.searchInputElement.removeEventListener();\r\n        // this.removeEventListener();\r\n        this.mutationObserver.disconnect();\r\n      } catch (e) {\r\n        console.warn(\"cannot remove event listeners\");\r\n      }\r\n    }\r\n  }\r\n);\r\n", "<div\r\n  style=\"display: none\"\r\n  data-bind=\"visible: BlockingTasks().length\"\r\n  class=\"position-fixed w-100 vh-100 top-0 start-0 active dimmer\"\r\n>\r\n  <div\r\n    class=\"d-flex flex-column justify-content-center w-100 h-100 align-items-center text-light\"\r\n  >\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n    <ul class=\"list-unstyled\" data-bind=\"foreach: BlockingTasks\">\r\n      <li data-bind=\"text: msg + '... ' + Status()\"></li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  style=\"display: none; z-index: 1201\"\r\n  data-bind=\"visible: RunningTasks().length\"\r\n  class=\"position-fixed w-100 vh-100 top-0 start-0 pe-none\"\r\n>\r\n  <div class=\"toast-container p-3 bottom-0 end-0\">\r\n    <div\r\n      class=\"toast show align-items-center\"\r\n      role=\"alert\"\r\n      aria-live=\"assertive\"\r\n      aria-atomic=\"true\"\r\n    >\r\n      <div class=\"d-flex\">\r\n        <div class=\"toast-body\">\r\n          <!-- ko foreach: RunningTasks -->\r\n          <div data-bind=\"text: `${msg}... ${Status()}`\"></div>\r\n          <!-- /ko -->\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close me-1 m-auto\"\r\n          data-bs-dismiss=\"toast\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\" data-bind=\"hidden: HasLoaded\">\r\n  <div class=\"d-flex flex-column align-items-center\">\r\n    <progress class=\"w-75 mb-3\"></progress>\r\n    <div class=\"w-75 alert alert-warning text-center\">\r\n      If the url you are viewing begins with\r\n      <span class=\"fw-semibold text-body-secondary\"\r\n        >https://usdos.sharepoint.com<b>.mcas.ms</b></span\r\n      >\r\n      please copy and paste the following link into your browser:\r\n      <div id=\"ms-mcas-bypass\" class=\"input-group w-100\">\r\n        <input id=\"ms-mcas-bypass-link\" class=\"form-control\" disabled />\r\n        <button\r\n          id=\"ms-mcas-bypass-copy\"\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n        >\r\n          copy\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n  {\r\n    let loc = window.location;\r\n\r\n    const link = loc.href.replace(\".mcas.ms\", \"\");\r\n\r\n    let cpyLink = document.getElementById(\"ms-mcas-bypass-link\");\r\n    cpyLink.value = link;\r\n\r\n    let cpybtn = document.getElementById(\"ms-mcas-bypass-copy\");\r\n    cpybtn.addEventListener(\"click\", (e, element) => {\r\n      debugger;\r\n      try {\r\n        navigator.clipboard.writeText(link);\r\n        e.target.innerText = \"copied\";\r\n        e.target.classList.remove(\"btn-secondary\");\r\n        e.target.classList.add(\"btn-success\");\r\n      } catch (e) {\r\n        alert(\"Copy failed, please select text and copy using CTRL+V\");\r\n      }\r\n    });\r\n\r\n    // a.click();\r\n  }\r\n</script>\r\n\r\n<div id=\"app\" class=\"wo\" style=\"display: none\" data-bind=\"visible: HasLoaded\">\r\n  <div\r\n    data-bind=\"component: {name: 'quick-info', \r\n    params: { ShowActionOfficeFeatures, ToggleActionOfficeFeatures }}\"\r\n  ></div>\r\n  <div class=\"d-flex justify-content-between\">\r\n    <div>\r\n      <ul class=\"nav flex-column me-4\" id=\"section-tabs\" role=\"tablist\">\r\n        <!-- ko if: ShowActionOfficeFeatures -->\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link\"\r\n            id=\"office-requests-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#office-requests\"\r\n            data-bind=\"click: TabClicked\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"office-requests\"\r\n            aria-selected=\"true\"\r\n          >\r\n            Team Requests\r\n          </button>\r\n        </li>\r\n        <!-- /ko -->\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link\"\r\n            id=\"my-requests-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#my-requests\"\r\n            data-bind=\"click: TabClicked\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"my-requests\"\r\n            aria-selected=\"true\"\r\n          >\r\n            My Requests\r\n          </button>\r\n        </li>\r\n        <!-- ko if: false -->\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link position-relative\"\r\n            id=\"my-assignments-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#my-assignments\"\r\n            data-bind=\"click: TabClicked\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"my-assignments\"\r\n            aria-selected=\"true\"\r\n          >\r\n            My Assignments\r\n            <span\r\n              class=\"badge text-bg-danger\"\r\n              data-bind=\"visible: MyActiveAssignments().length, text: MyActiveAssignments().length\"\r\n            ></span>\r\n          </button>\r\n        </li>\r\n        <!-- /ko -->\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link\"\r\n            id=\"new-request-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#new-request\"\r\n            data-bind=\"click: TabClicked\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"new-request\"\r\n            aria-selected=\"true\"\r\n          >\r\n            New Request\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link\"\r\n            id=\"request-detail-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#request-detail\"\r\n            data-bind=\"click: TabClicked\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"request-detail\"\r\n            aria-selected=\"false\"\r\n          >\r\n            Detail View\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"tab-content flex-grow-1\">\r\n      <!-- ko if: ShowActionOfficeFeatures -->\r\n      <div\r\n        class=\"tab-pane\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"office-requests-tab\"\r\n        id=\"office-requests\"\r\n      >\r\n        <div\r\n          data-bind=\"template: {name: 'tmpl-office-requests-view', data: OfficeRequestsView}\"\r\n        ></div>\r\n      </div>\r\n      <!-- /ko -->\r\n      <div\r\n        class=\"tab-pane\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"my-requests-tab\"\r\n        id=\"my-requests\"\r\n      >\r\n        <div\r\n          data-bind=\"template: {name: 'tmpl-my-requests-view', data: MyRequestsView}\"\r\n        ></div>\r\n      </div>\r\n      <!-- ko if: false -->\r\n      <div\r\n        class=\"tab-pane\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"my-assignments-tab\"\r\n        id=\"my-assignments\"\r\n      >\r\n        <div\r\n          data-bind=\"template: {name: 'tmpl-my-assignments-view', data: MyAssignmentsView}\"\r\n        ></div>\r\n      </div>\r\n      <!-- /ko -->\r\n      <div\r\n        class=\"tab-pane\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"new-request\"\r\n        id=\"new-request\"\r\n      >\r\n        <div\r\n          data-bind=\"template: {name: 'tmpl-new-request-view', data: NewRequestView}\"\r\n        ></div>\r\n      </div>\r\n      <div\r\n        id=\"request-detail\"\r\n        class=\"tab-pane\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"request-detail-tab\"\r\n        data-bind=\"\"\r\n      >\r\n        <!-- ko ifnot: RequestDetailView.Request -->\r\n        <div class=\"\">\r\n          <h2>Service Request Detail</h2>\r\n          <div>Please create a new request, or open an existing request.</div>\r\n        </div>\r\n        <!-- /ko -->\r\n        <!-- ko if: RequestDetailView.Request -->\r\n        <div\r\n          data-bind=\"template: {name: 'tmpl-request-detail', data: RequestDetailView}\"\r\n        ></div>\r\n        <!-- /ko -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"service-type-templates\"></div>\r\n\r\n  <div id=\"tmpl-views\">\r\n    <script type=\"text/html\" id=\"tmpl-office-requests-view\">\r\n      <h2>Team Requests</h2>\r\n      <div class=\"card bg-white\">\r\n        <div class=\"card-body\">\r\n          <div class=\"mb-3 d-flex\">\r\n            <div\r\n              class=\"request-status-options me-3\"\r\n              id=\"section-office-requests-tabs\"\r\n              data-bind=\"foreach: StatusOptions\"\r\n            >\r\n              <button\r\n                class=\"text-nowrap\"\r\n                type=\"button\"\r\n                data-bind=\"text: $data,\r\n              css: {'active': $parent.ActiveKey() == $data },\r\n              click: ()=> $parent.ActiveKey($data)\"\r\n              ></button>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-outline-primary\"\r\n              data-bind=\"css: {'active': ActiveKey() == byServiceTypeKey },\r\n            click: ()=> ActiveKey(byServiceTypeKey)\"\r\n            >\r\n              By Service Type\r\n            </button>\r\n          </div>\r\n          <div class=\"flex-grow-1\">\r\n            <div\r\n              data-bind=\"component: {name: ActiveTableComponentName, params: ActiveTableParams}\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </script>\r\n\r\n    <script type=\"text/html\" id=\"tmpl-my-requests-view\">\r\n      <h2>My Requests</h2>\r\n      <div class=\"card bg-white\">\r\n        <div class=\"card-body\">\r\n          <div class=\"mb-3 d-flex\">\r\n            <div\r\n              class=\"request-status-options me-3\"\r\n              id=\"section-my-requests-tabs\"\r\n              data-bind=\"foreach: StatusOptions\"\r\n            >\r\n              <button\r\n                class=\"text-nowrap\"\r\n                type=\"button\"\r\n                data-bind=\"text: $data,\r\n              css: {'active': $parent.ActiveKey() == $data },\r\n              click: ()=> $parent.ActiveKey($data)\"\r\n              ></button>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-outline-primary\"\r\n              data-bind=\"css: {'active': ActiveKey() == 'By Service Type' },\r\n              click: ()=> ActiveKey('By Service Type')\"\r\n            >\r\n              By Service Type\r\n            </button>\r\n          </div>\r\n          <div class=\"flex-grow-1\">\r\n            <div\r\n              data-bind=\"component: {name: ActiveTableComponentName, params: ActiveTableParams}\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </script>\r\n\r\n    <script type=\"text/html\" id=\"tmpl-my-assignments-view\">\r\n      <h2>My Open Assignments</h2>\r\n      <!-- ko if: IsLoading -->\r\n      <progress class=\"w-100\"></progress>\r\n      <!-- /ko -->\r\n      <!-- ko ifnot: IsLoading -->\r\n      <my-assignments-table></my-assignments-table>\r\n      <!-- /ko -->\r\n    </script>\r\n\r\n    <script type=\"text/html\" id=\"tmpl-new-request-view\">\r\n      <h2>Select the type of request you would like to open:</h2>\r\n      <div id=\"new-request-container\">\r\n        <div\r\n          class=\"card new-request-ops-container\"\r\n          data-bind=\"css: {'service-selected': SelectedServiceType}\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <div\r\n              class=\"new-request-opts\"\r\n              data-bind=\"foreach: ActiveServiceTypes\"\r\n            >\r\n              <div\r\n                class=\"card new-request-opt\"\r\n                data-bind=\"click: $parent.selectServiceTypeHandler, \r\n                css: {'active': $parent.SelectedServiceType()?.ID == ID}, \r\n                attr: {title: 'New ' + Title + ' Request'}\"\r\n              >\r\n                <div class=\"card-body\">\r\n                  <i class=\"fa fa-3x\" data-bind=\"class: Icon\"></i>\r\n                  <h5 class=\"card-title\" data-bind=\"text: Title\"></h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"new-request-detail\"\r\n          class=\"card\"\r\n          style=\"height: fit-content\"\r\n          data-bind=\"visible: SelectedServiceType\"\r\n        >\r\n          <div class=\"card-body\" data-bind=\"\">\r\n            <!-- ko if: SelectedServiceType -->\r\n            <h5\r\n              class=\"card-title\"\r\n              data-bind=\"text: SelectedServiceType().Title\"\r\n            ></h5>\r\n            <hr />\r\n            <b>Description:</b>\r\n            <div\r\n              data-bind=\"html: SelectedServiceType().Description\"\r\n              class=\"mb-2\"\r\n            ></div>\r\n            <b>Attachments:</b>\r\n            <div\r\n              data-bind=\"html: formatAttachmentDescription()\"\r\n              class=\"mb-2\"\r\n            ></div>\r\n            <div class=\"card-text\" class=\"mb-2\">\r\n              <p>\r\n                Once submitted, this request will be routed to the appropriate\r\n                action office.\r\n              </p>\r\n            </div>\r\n            <!-- /ko -->\r\n            <div class=\"d-flex justify-content-end\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary me-2\"\r\n                data-bind=\"click: cancelCreateServiceType\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-success\"\r\n                data-bind=\"click: confirmCreateServiceType, enable: SelectedServiceType\"\r\n              >\r\n                Create\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </script>\r\n\r\n    <script type=\"text/html\" id=\"tmpl-request-detail\">\r\n      <!-- Report.RequestDetailView -->\r\n      <!-- ko if: request.IsLoading -->\r\n      <progress class=\"w-100\"></progress>\r\n      <!-- /ko -->\r\n      <!-- ko ifnot: request.IsLoading -->\r\n      <div class=\"\">\r\n        <h2>\r\n          Service Request Detail:\r\n          <span data-bind=\"text: request.RequestType.Title\"></span>\r\n        </h2>\r\n        <div>\r\n          <!-- ko if: request.Validation.WasValidated -->\r\n          <!-- ko foreach: request.Validation.Errors.All -->\r\n          <div\r\n            class=\"alert alert-danger mb-2\"\r\n            data-bind=\"text: description\"\r\n          ></div>\r\n          <!-- /ko -->\r\n          <!-- /ko -->\r\n          <div class=\"quick-actions-container\">\r\n            <div\r\n              class=\"\"\r\n              data-bind=\"template: {name: 'tmpl-quick-actions-bar'}\"\r\n            ></div>\r\n          </div>\r\n          <div class=\"request-detail-components\">\r\n            <div class=\"\">\r\n              <div\r\n                data-bind=\"component: {name: 'pipeline-component',\r\n              params: {request: request}}\"\r\n              ></div>\r\n            </div>\r\n            <!-- ko if: DisplayMode() != DisplayModes.New && $root.Authorization.currentUserIsAdmin()-->\r\n\r\n            <div\r\n              class=\"my-3\"\r\n              data-bind=\"template: {name: 'tmpl-assignments-component', data: request.Assignments}\"\r\n            ></div>\r\n            <!-- /ko -->\r\n            <div class=\"\">\r\n              <div class=\"card w-100\" data-bind=\"\">\r\n                <div class=\"card-body\">\r\n                  <h3 class=\"card-title\">Requestor Information</h3>\r\n                  <div\r\n                    data-bind=\"component: {name: HeaderComponentName, params: request }\"\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card w-100 request-body\" data-bind=\"using: Request\">\r\n              <div class=\"card-body\">\r\n                <div class=\"card-title d-flex justify-content-between\">\r\n                  <h3 class=\"mx-0\" data-bind=\"text: RequestType.Title\"></h3>\r\n                  <!-- <i class=\"fa fa-sync pointer\" data-bind=\"click: refreshEntity\"></i> -->\r\n                </div>\r\n                <div class=\"detail-container\">\r\n                  <div class=\"detail\">\r\n                    <!-- ko if: RequestBodyBlob -->\r\n                    <div\r\n                      data-bind=\"component: {\r\n                        name: RequestBodyBlob.components[DisplayMode().toLowerCase()],\r\n                        params: RequestBodyBlob},\r\n                        class: RequestBodyBlob.width\"\r\n                    ></div>\r\n                    <!-- /ko -->\r\n                    <div\r\n                      class=\"col-12 pb-6\"\r\n                      data-bind=\"component: {name: RequestDescription.components[DisplayMode().toLowerCase()],\r\n                        params: RequestDescription}\"\r\n                    ></div>\r\n                  </div>\r\n                  <div class=\"card attachments\">\r\n                    <div class=\"card-body d-flex flex-column\">\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <div>\r\n                          <h5 class=\"\">Attachments</h5>\r\n                        </div>\r\n                        <i\r\n                          class=\"fa fa-sync pointer\"\r\n                          data-bind=\"click: Attachments.refresh\"\r\n                        ></i>\r\n                      </div>\r\n                      <!-- ko foreach: Attachments.Validation.Errors -->\r\n                      <div\r\n                        class=\"alert\"\r\n                        data-bind=\"text: description,\r\n                        class: $parent.Validation.WasValidated() ? 'alert-danger' : 'alert-warning'\"\r\n                      ></div>\r\n                      <!-- /ko -->\r\n                      <!-- ko if: RequestType.AttachmentDescription -->\r\n                      <div\r\n                        data-bind=\"html: RequestType.AttachmentDescription\"\r\n                      ></div>\r\n                      <!-- /ko -->\r\n                      <!-- ko ifnot: RequestType.AttachmentDescription -->\r\n                      <p class=\"fst-italic\">\r\n                        No attachment instructions provided.\r\n                      </p>\r\n                      <!-- /ko -->\r\n                      <!-- ko if: Attachments.list.Active().length -->\r\n                      <div>\r\n                        <table class=\"table\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Title</th>\r\n                              <th>FileName</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody data-bind=\"\">\r\n                            <!-- ko if: Attachments.AreLoading -->\r\n                            <tr class=\"\">\r\n                              <td colspan=\"4\" class=\"p-0\">\r\n                                <progress class=\"w-100\"></progress>\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /ko -->\r\n                            <!-- ko foreach: Attachments.list.Active -->\r\n                            <tr>\r\n                              <td>\r\n                                <div data-bind=\"text: Title\"></div>\r\n                              </td>\r\n                              <td>\r\n                                <a\r\n                                  target=\"_blank\"\r\n                                  data-bind=\"attr: { href: FileRef }, text: FileLeafRef\"\r\n                                ></a>\r\n                              </td>\r\n                              <td>\r\n                                <i\r\n                                  class=\"fas fa-search pointer\"\r\n                                  data-bind=\"click: $parent.Attachments.view\"\r\n                                ></i>\r\n                                <!-- ko if: $parent.Attachments.userCanRemove($data) -->\r\n                                <i\r\n                                  class=\"fas fa-trash pointer\"\r\n                                  data-bind=\"click: $parent.Attachments.remove\"\r\n                                ></i>\r\n                                <!-- /ko -->\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /ko -->\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      <!-- /ko -->\r\n                      <div\r\n                        data-bind=\"if: Attachments.userCanAttach\"\r\n                        class=\"new-attachments\"\r\n                      >\r\n                        <div>\r\n                          <label class=\"file-upload-field\">\r\n                            <div class=\"dropzone\" data-bind=\"\">\r\n                              Drop Files or Click Here\r\n                            </div>\r\n                            <input\r\n                              type=\"file\"\r\n                              multiple=\"true\"\r\n                              style=\"display: none\"\r\n                              data-bind=\"files: Attachments.newAttachmentFiles\"\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <div\r\n                          data-bind=\"if: Attachments.newAttachmentFiles().length\"\r\n                        >\r\n                          <!-- Pending:\r\n                          <ul\r\n                            data-bind=\"foreach: Attachments.newAttachmentFiles\"\r\n                          >\r\n                            <li>\r\n                              <span data-bind=\"text: name\"></span>\r\n                              <i\r\n                                title=\"Remove File\"\r\n                                data-bind=\"click: $parent.Attachments.removeFile\"\r\n                                class=\"fa-solid fa-xmark pointer\"\r\n                              ></i>\r\n                            </li>\r\n                          </ul> -->\r\n                          <table class=\"table table-sm\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>Pending Upload</th>\r\n                                <th>Action</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody\r\n                              data-bind=\"foreach: Attachments.newAttachmentFiles\"\r\n                            >\r\n                              <tr>\r\n                                <td data-bind=\"text: name\"></td>\r\n                                <td>\r\n                                  <i\r\n                                    title=\"Remove File\"\r\n                                    data-bind=\"click: $parent.Attachments.removeFile\"\r\n                                    class=\"fa-solid fa-xmark pointer\"\r\n                                  ></i>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                        <div class=\"form-actions\">\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-primary\"\r\n                            data-bind=\"click: Attachments.addNew, enable: Attachments.newAttachmentFiles().length\"\r\n                          >\r\n                            Upload\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <!-- ko if: false -->\r\n              <div class=\"col-4\" data-bind=\"using: request\">\r\n                <div\r\n                  class=\"card\"\r\n                  data-bind=\"css: {'border-danger': Validation.WasValidated() && Attachments.Validation.Errors().length}\"\r\n                >\r\n                  <div class=\"card-body\">\r\n                    <div class=\"card-title\">\r\n                      <h3 class=\"mx-0\">Attachments</h3>\r\n                    </div>\r\n                    <!-- ko foreach: Attachments.Validation.Errors -->\r\n                    <div\r\n                      class=\"alert\"\r\n                      data-bind=\"text: description,\r\n                      class: $parent.Validation.WasValidated() ? 'alert-danger' : 'alert-warning'\"\r\n                    ></div>\r\n                    <!-- /ko -->\r\n                    <div\r\n                      data-bind=\"html: RequestType.AttachmentDescription\"\r\n                    ></div>\r\n                    <div>\r\n                      <div class=\"d-flex justify-content-end\">\r\n                        <i\r\n                          class=\"fa fa-sync pointer\"\r\n                          data-bind=\"click: Attachments.refresh\"\r\n                        ></i>\r\n                      </div>\r\n                      <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Title</th>\r\n                            <th>FileName</th>\r\n                            <th>Actions</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody data-bind=\"\">\r\n                          <!-- ko if: Attachments.AreLoading -->\r\n                          <tr class=\"\">\r\n                            <td colspan=\"4\" class=\"p-0\">\r\n                              <progress class=\"w-100\"></progress>\r\n                            </td>\r\n                          </tr>\r\n                          <!-- /ko -->\r\n                          <!-- ko foreach: Attachments.list.Active -->\r\n                          <tr>\r\n                            <td>\r\n                              <div data-bind=\"text: Title\"></div>\r\n                            </td>\r\n                            <td>\r\n                              <a\r\n                                target=\"_blank\"\r\n                                data-bind=\"attr: { href: FileRef }, text: FileLeafRef\"\r\n                              ></a>\r\n                            </td>\r\n                            <td>\r\n                              <i\r\n                                class=\"fas fa-search pointer\"\r\n                                data-bind=\"click: $parent.Attachments.view\"\r\n                              ></i>\r\n                              <!-- ko if: $parent.Attachments.userCanRemove($data) -->\r\n                              <i\r\n                                class=\"fas fa-trash pointer\"\r\n                                data-bind=\"click: $parent.Attachments.remove\"\r\n                              ></i>\r\n                              <!-- /ko -->\r\n                            </td>\r\n                          </tr>\r\n                          <!-- /ko -->\r\n                        </tbody>\r\n                      </table>\r\n                      <!-- ko if: Attachments.userCanAttach -->\r\n                      <button\r\n                        class=\"btn btn-primary\"\r\n                        data-bind=\"click: Attachments.addNew\"\r\n                      >\r\n                        Upload\r\n                      </button>\r\n                      <!-- /ko -->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- /ko -->\r\n              <!-- ko if: DisplayMode() != DisplayModes.New -->\r\n              <div class=\"\">\r\n                <div class=\"card w-100\" data-bind=\"using: request\">\r\n                  <div class=\"card-body\">\r\n                    <h3 class=\"card-title\">Comments</h3>\r\n                    <div class=\"alert alert-warning\">\r\n                      <strong>Note:</strong> Anyone with access to this record\r\n                      is able to view all comments.\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-end\">\r\n                      <i\r\n                        class=\"fa fa-sync pointer\"\r\n                        data-bind=\"click: Comments.refresh\"\r\n                      ></i>\r\n                    </div>\r\n                    <table class=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Created</th>\r\n                          <th>Author</th>\r\n                          <th>Notification Sent</th>\r\n                          <th>Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody data-bind=\"\">\r\n                        <!-- ko if: Comments.AreLoading -->\r\n                        <tr class=\"\">\r\n                          <td colspan=\"4\" class=\"p-0\">\r\n                            <progress class=\"w-100\"></progress>\r\n                          </td>\r\n                        </tr>\r\n                        <!-- /ko -->\r\n                        <!-- ko foreach: Comments.list.Active -->\r\n                        <tr class=\"table-group-divider\">\r\n                          <td data-bind=\"text: Created.toLocaleString()\"></td>\r\n                          <td data-bind=\"text: Author.Title\"></td>\r\n                          <td data-bind=\"text: NotificationSent\"></td>\r\n                          <td>\r\n                            <!-- ko if: $parent.Comments.userCanComment -->\r\n                            <i\r\n                              class=\"fa fa-envelope pointer\"\r\n                              data-bind=\"click: $parent.Comments.sendNotification,\r\n                          attr: {title: NotificationSent ? 'Re-Send Email Notification' : 'Send Email Notification'}\"\r\n                            ></i>\r\n                            <i\r\n                              class=\"fa fa-trash pointer ms-1\"\r\n                              title=\"Remove Comment\"\r\n                              data-bind=\"click: $parent.Comments.remove\"\r\n                            ></i>\r\n                            <!-- /ko -->\r\n                          </td>\r\n                        </tr>\r\n                        <tr class=\"\">\r\n                          <td\r\n                            colspan=\"4\"\r\n                            data-bind=\"html: Comment\"\r\n                            class=\"pb-4\"\r\n                          ></td>\r\n                        </tr>\r\n                        <!-- /ko -->\r\n                      </tbody>\r\n                    </table>\r\n                    <!-- ko if: Comments.userCanComment -->\r\n                    <div data-bind=\"using: $parent.newComment\">\r\n                      <div\r\n                        class=\"mb-2\"\r\n                        data-bind=\"component: {name: input.components.edit, params: input}\"\r\n                      ></div>\r\n                      <button class=\"btn btn-primary\" data-bind=\"click: submit\">\r\n                        Submit Comment\r\n                      </button>\r\n                    </div>\r\n                    <!-- /ko -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- /ko -->\r\n            </div>\r\n            <!-- ko if: DisplayMode() != DisplayModes.New -->\r\n            <div\r\n              class=\"\"\r\n              data-bind=\"template: {name: 'tmpl-activity-log-component', data: request.Actions}\"\r\n            ></div>\r\n            <!-- /ko -->\r\n            <div>\r\n              <!-- ko if: DisplayMode() == DisplayModes.New -->\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-success\"\r\n                data-bind=\"click: submitNewRequest, enable: !request.Validation.WasValidated() || request.Validation.IsValid()\"\r\n              >\r\n                Submit Request\r\n              </button>\r\n              <!-- /ko -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- /ko -->\r\n      <div\r\n        class=\"modal fade\"\r\n        id=\"modal-advance-request\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n      >\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h1 class=\"mx-0 modal-title fs-5\" id=\"staticBackdropLabel\">\r\n                Confirm Advance\r\n              </h1>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <!-- ko ifnot: request.Assignments.CurrentStage.list.InProgress().length -->\r\n              This request is ready to advance.\r\n              <!-- /ko -->\r\n              <!-- ko if: request.Assignments.CurrentStage.list.InProgress().length -->\r\n              This request still has\r\n              <span\r\n                data-bind=\"text: request.Assignments.CurrentStage.list.InProgress().length\"\r\n              ></span>\r\n              open assignments.\r\n              <table class=\"table table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Assignee</th>\r\n                    <th>Role</th>\r\n                    <th>Stage</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody\r\n                  data-bind=\"foreach: request.Assignments.CurrentStage.list.InProgress\"\r\n                >\r\n                  <tr>\r\n                    <td data-bind=\"text: Assignee?.Title\"></td>\r\n                    <td data-bind=\"text: Role\"></td>\r\n                    <td data-bind=\"text: PipelineStage?.Title\"></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <!-- /ko -->\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                data-bind=\"click: confirmAdvanceHandler\"\r\n              >\r\n                Advance\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </script>\r\n\r\n    <script type=\"text/html\" id=\"tmpl-quick-actions-bar\">\r\n      <div class=\"quick-actions-bar card\">\r\n        <div\r\n          class=\"btn-group actions dropdown status-container rounded-start\"\r\n          role=\"group\"\r\n        >\r\n          <button type=\"button\" class=\"btn btn-secondary\">\r\n            <div\r\n              class=\"badge\"\r\n              data-bind=\"text: request.State.InternalStatus, \r\n              class: request.State.InternalStatusClass, \r\n              attr: {title: request.State.InternalStatus}\"\r\n            ></div>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            class=\"btn btn-secondary toggle-status dropdown-toggle dropdown-toggle-split\"\r\n            title=\"Change status\"\r\n            data-bind=\"enable: EnableChangeStatusArea\"\r\n          ></button>\r\n          <div class=\"dropdown-menu p-1 status-dropdown\">\r\n            <div data-bind=\"if: showPause\" class=\"status-section-pause\">\r\n              <div class=\"dropdown-header\">Change Status</div>\r\n              <div class=\"mx-2\">\r\n                <div class=\"d-flex\">\r\n                  <label class=\"me-1\">\r\n                    <input\r\n                      placeholder=\"New Status...\"\r\n                      class=\"form-select\"\r\n                      list=\"pause-reason-options\"\r\n                      data-bind=\"textInput: pauseReason, \r\n                        attr: {placeholder: request.State.InternalStatus}\"\r\n                    />\r\n                    <datalist\r\n                      id=\"pause-reason-options\"\r\n                      data-bind=\"foreach: pauseOptions\"\r\n                    >\r\n                      <option\r\n                        data-bind=\"text: value, attr: {value: value}\"\r\n                      ></option>\r\n                    </datalist>\r\n                  </label>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-success\"\r\n                    data-bind=\"click: clickPause, enable: pauseReason\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n                <div class=\"form-text mx-2\">\r\n                  *Changing status will pause request.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div data-bind=\"if: showResume\" class=\"status-section-resume\">\r\n              <div class=\"dropdown-header\">Resume Request</div>\r\n              <div class=\"mx-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  title=\"Resume Request\"\r\n                  class=\"btn btn-success\"\r\n                  data-bind=\"click: clickResume\"\r\n                >\r\n                  Resume Request\r\n                  <i class=\"fa-solid fa-play fa-xl\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <div\r\n              class=\"text-nowrap\"\r\n              data-bind=\"if: ShowCloseArea\"\r\n              class=\"status-section-close\"\r\n            >\r\n              <div class=\"dropdown-diver\"></div>\r\n              <div class=\"dropdown-header\">Close Request</div>\r\n              <div class=\"mx-2\">\r\n                <button\r\n                  title=\"Cancel Request\"\r\n                  class=\"btn btn-link text-danger action\"\r\n                  data-bind=\"click: promptCancel\"\r\n                >\r\n                  <i class=\"fa-solid fa-ban fa-xl\"></i>\r\n                  Cancel Request\r\n                </button>\r\n                <button\r\n                  title=\"Close Request as Fulfilled\"\r\n                  class=\"btn btn-link text-success action\"\r\n                  data-bind=\"click: promptFulfill\"\r\n                >\r\n                  Close Request as Fulfilled\r\n                  <i class=\"fa-solid fa-angles-right fa-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h6 class=\"\">\r\n          Request ID <br />\r\n          <span data-bind=\"text: request.ObservableTitle\"></span>\r\n        </h6>\r\n\r\n        <h6 class=\"\">\r\n          Loaded Date and Time <br />\r\n          <span data-bind=\"text: request.LoadedAt()?.toLocaleString()\"></span>\r\n        </h6>\r\n        <!-- ko if: $root.Authorization.currentUserIsAdmin -->\r\n        <a\r\n          class=\"\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          data-bind=\"attr: {href: request.getFolderUrl()}\"\r\n        >\r\n          <i class=\"fa fa-folder\" data-bind=\"\"></i\r\n        ></a>\r\n        <!-- /ko -->\r\n        <i\r\n          class=\"fa fa-sync pointer me-3\"\r\n          title=\"Refresh this request\"\r\n          data-bind=\"click: refreshAll\"\r\n        ></i>\r\n\r\n        <div class=\"actions\" role=\"group\">\r\n          <!-- ko if: DisplayMode() == DisplayModes.New -->\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-success ms-3\"\r\n            data-bind=\"click: submitNewRequest, enable: !request.Validation.WasValidated() || request.Validation.IsValid()\"\r\n          >\r\n            Submit <span class=\"fa fa-chevron-right\"></span>\r\n          </button>\r\n          <!-- /ko -->\r\n          <!-- ko if: request.Authorization.currentUserCanAdvance -->\r\n          <div\r\n            class=\"action\"\r\n            data-bind=\"component: {name: 'send-request-as-email', params: {request} }\"\r\n          ></div>\r\n          <!-- ko if: request.Pipeline.getNextStage -->\r\n          <button\r\n            title=\"Advance to next stage\"\r\n            type=\"button\"\r\n            class=\"btn btn-success action\"\r\n            data-bind=\"click: nextStageHandler, enable: request.Assignments.CurrentStage.Validation.IsValid\"\r\n          >\r\n            Next Stage <span class=\"fa fa-chevron-right\"></span>\r\n          </button>\r\n          <!-- /ko -->\r\n          <!-- ko ifnot: request.Pipeline.getNextStage -->\r\n          <button\r\n            title=\"Close and finalize\"\r\n            type=\"button\"\r\n            class=\"btn btn-success action\"\r\n            data-bind=\"click: promptClose, enable: request.Assignments.CurrentStage.Validation.IsValid\"\r\n          >\r\n            Close and Finalize\r\n          </button>\r\n          <!-- /ko -->\r\n          <!-- /ko -->\r\n        </div>\r\n      </div>\r\n    </script>\r\n\r\n    <script type=\"text/html\" id=\"tmpl-request-pipeline-actions\">\r\n      <!-- ko using: CurrentStage -->\r\n      <!-- ko if: AssignmentComponents().length -->\r\n      <div class=\"border border-top-0 rounded-bottom\">\r\n        <div class=\"p-3\">\r\n          <div data-bind=\"foreach: Validation.Errors\">\r\n            <div\r\n              class=\"alert alert-warning\"\r\n              role=\"alert\"\r\n              data-bind=\"text: description\"\r\n            ></div>\r\n          </div>\r\n          <div class=\"\">\r\n            <!-- ko foreach: AssignmentComponents -->\r\n            <div\r\n              data-bind=\"component: {name: actionComponentName, params: $data }\"\r\n            ></div>\r\n            <!-- /ko -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- /ko -->\r\n      <!-- /ko -->\r\n    </script>\r\n\r\n    <script type=\"text/html\" id=\"tmpl-assignments-component\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body accordion-item\">\r\n          <div\r\n            class=\"card-title d-flex justify-content-between align-items-center accordion-header\"\r\n          >\r\n            <h3\r\n              class=\"mx-0 px-2 flex-grow-1 pointer accordion-title collapsed d-flex align-items-center justify-content-between\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#routing-body\"\r\n            >\r\n              Routing and Assignment\r\n              <i class=\"indicator fa fa-caret-down\"></i>\r\n            </h3>\r\n          </div>\r\n          <div id=\"routing-body\" class=\"accordion-collapse collapse\">\r\n            <div class=\"d-flex justify-content-end align-items-center\">\r\n              <!-- ko if: $root.Authorization.currentUserIsAdmin -->\r\n              <a target=\"_blank\" data-bind=\"attr: {href: getFolderUrl() }\">\r\n                <i class=\"fa fa-folder\" data-bind=\"\"></i\r\n              ></a>\r\n              <button\r\n                type=\"button\"\r\n                style=\"min-width: 0;\"\r\n                class=\"btn btn-link ms-2 px-0\"\r\n                data-bind=\"click: () => createStageAssignments()\"\r\n              >\r\n                <i class=\"fa-solid fa-arrow-down-up-lock\"></i>\r\n              </button>\r\n              <!-- /ko -->\r\n              <i class=\"fa fa-sync pointer ms-2\" data-bind=\"click: refresh\"></i>\r\n            </div>\r\n            <div class=\"position-relative\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Stage</th>\r\n                    <th>Assignee</th>\r\n                    <th>Request Org</th>\r\n                    <th>Role</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!-- ko if: AreLoading -->\r\n                  <tr class=\"\">\r\n                    <td colspan=\"5\" class=\"p-0\">\r\n                      <progress class=\"w-100\"></progress>\r\n                    </td>\r\n                  </tr>\r\n                  <!-- /ko -->\r\n                  <!-- ko foreach: list.All -->\r\n                  <tr>\r\n                    <td data-bind=\"text: PipelineStage?.Title\"></td>\r\n                    <td data-bind=\"text: Assignee?.Title\"></td>\r\n                    <td data-bind=\"text: RequestOrg?.Title\"></td>\r\n                    <td data-bind=\"text: Role\"></td>\r\n                    <td data-bind=\"text: Status\"></td>\r\n                    <td>\r\n                      <!-- ko if: $parent.userCanAssign -->\r\n                      <i\r\n                        title=\"View Assignment\"\r\n                        class=\"fas fa-search pointer\"\r\n                        data-bind=\"click: $parent.view\"\r\n                      ></i>\r\n                      <i\r\n                        title=\"Cancel Assignment\"\r\n                        class=\"fa fa-trash pointer\"\r\n                        data-bind=\"click: $parent.remove\"\r\n                      ></i>\r\n                      <i\r\n                        title=\"Send Reminder Email\"\r\n                        class=\"fa-solid fa-envelope pointer\"\r\n                        data-bind=\"click: $parent.notify\"\r\n                      ></i>\r\n                      <!-- /ko -->\r\n                    </td>\r\n                  </tr>\r\n                  <!-- /ko -->\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <!-- ko if: userCanAssign -->\r\n            <div\r\n              data-bind=\"component: { name: 'new-assignment', params: {addAssignment: addNew } }\"\r\n            ></div>\r\n            <!-- /ko -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </script>\r\n\r\n    <script type=\"text/html\" id=\"tmpl-activity-log-component\">\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-link\"\r\n          data-bind=\"click: showDialog\"\r\n        >\r\n          Approvals and Actions Log\r\n        </button>\r\n      </div>\r\n      <dialog id=\"dialog-action-log\" class=\"card\">\r\n        <div class=\"card-body \">\r\n          <div\r\n            class=\"card-title d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div>\r\n              <h3>Approvals and Actions Log</h3>\r\n            </div>\r\n            <div class=\"d-flex justify-content-end\">\r\n              <i class=\"fa fa-sync pointer me-2\" data-bind=\"click: refresh\"></i>\r\n              <i\r\n                class=\"fa-solid fa-xmark pointer\"\r\n                data-bind=\"click: closeDialog\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n          <div id=\"actions-body\" class=\"\">\r\n            <div>\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Stage</th>\r\n                    <th>Action Taker</th>\r\n                    <th>Action Type</th>\r\n                    <th>Description</th>\r\n                    <th>Date</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!-- ko if: AreLoading -->\r\n                  <tr class=\"\">\r\n                    <td colspan=\"5\" class=\"p-0\">\r\n                      <progress class=\"w-100\"></progress>\r\n                    </td>\r\n                  </tr>\r\n                  <!-- /ko -->\r\n                  <!-- ko foreach: list.All -->\r\n                  <tr>\r\n                    <td data-bind=\"if: PipelineStage\">\r\n                      <span\r\n                        class=\"\"\r\n                        data-bind=\"text: 'Step ' + PipelineStage?.Step + ': ' + PipelineStage?.Title\"\r\n                      >\r\n                      </span>\r\n                    </td>\r\n                    <td data-bind=\"text: Author?.Title\"></td>\r\n                    <td data-bind=\"text: ActionType\"></td>\r\n                    <td data-bind=\"html: Description\"></td>\r\n                    <td data-bind=\"text: Created.toLocaleString()\"></td>\r\n                  </tr>\r\n                  <!-- /ko -->\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex justify-content-end\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger\"\r\n              data-bind=\"click: closeDialog\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </dialog>\r\n    </script>\r\n  </div>\r\n\r\n  <div id=\"tmpl-other\">\r\n    <!-- <script type=\"text/html\" id=\"tmpl-activity-toast\">\r\n      <div\r\n        class=\"toast show\"\r\n        role=\"alert\"\r\n        aria-live=\"assertive\"\r\n        aria-atomic=\"true\"\r\n      >\r\n        <div class=\"toast-header\">\r\n          <strong class=\"me-auto\">Bootstrap</strong>\r\n          <small class=\"text-body-secondary\">just now</small>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"toast\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n        <div class=\"toast-body\" data-bind=\"text: activity\">\r\n          See? Just like this.\r\n        </div>\r\n      </div>\r\n    </script> -->\r\n  </div>\r\n</div>\r\n", "export * from \"./AssignmentActions/index.js\";\r\nexport * from \"./BaseComponent.js\";\r\nexport * from \"./ConstrainedEntity/ConstrainedEntityModules.js\";\r\nexport * from \"./PendingRequestIngests/PendingRequestIngestsModule.js\";\r\nexport * from \"./RequestsByStatus/RequestsByStatusTableModules.js\";\r\nexport * from \"./RequestsByServiceType/RequestsByServiceTypeModule.js\";\r\nexport * from \"./RequestsByServiceType/RequestsByServiceTypeTableModule.js\";\r\nexport * from \"./MyAssignments/MyAssignmentsModule.js\";\r\nexport * from \"./RequestHeader/RequestHeaderModules.js\";\r\nexport * from \"./Pipeline/PipelineModule.js\";\r\nexport * from \"./QuickInfo/QuickInfoModule.js\";\r\nexport * from \"./NewAssignment/NewAssignmentModule.js\";\r\nexport * from \"./Toasts/TaskToastModule.js\";\r\nexport * from \"./EmailRequest/EmailRequestModule.js\";\r\n", "export class ValidationError {\r\n  constructor(source, type, description) {\r\n    this.source = source;\r\n    this.type = type;\r\n    this.description = description;\r\n  }\r\n}\r\n", "export class People {\r\n  constructor({\r\n    Id,\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    Email = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n  }) {\r\n    this.ID = ID ?? Id;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n    this.LoginName = LoginName != \"\" ? LoginName : null;\r\n    this.Email = Email;\r\n    this.IsGroup = IsGroup;\r\n    // Has the user data been fetched? Used for binding handlers.\r\n    this.IsEnsured = IsEnsured;\r\n  }\r\n\r\n  ID = null;\r\n  Title = null;\r\n  LoginName = null;\r\n  LookupValue = null;\r\n  Email;\r\n\r\n  getKey = () => this.LoginName ?? this.Title;\r\n\r\n  static Create = function (props) {\r\n    if (!props || (!props.ID && !(props.Title || props.LookupValue)))\r\n      return null;\r\n    return new People({\r\n      ...props,\r\n      Title: props.Title ?? props.LookupValue,\r\n    });\r\n  };\r\n}\r\n", "import { People } from \"./People.js\";\r\n\r\nexport const OrgTypes = {\r\n  ActionOffice: \"Action Office\",\r\n  RequestingOffice: \"Requesting Office\",\r\n  Department: \"Department\",\r\n  Budget: \"Budget PMO\",\r\n};\r\n\r\nexport class RequestOrg {\r\n  constructor({ ID: ID, Title: Title }) {\r\n    this.ID = ID;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n  }\r\n\r\n  UserGroup;\r\n  Everyone;\r\n\r\n  FieldMap = {\r\n    UserGroup: {\r\n      get: () => this.UserGroup,\r\n      set: (val) => (this.UserGroup = People.Create(val)),\r\n    },\r\n  };\r\n\r\n  static Create = function (props) {\r\n    if (!props?.ID) return null;\r\n    // const newRequestOrg = new RequestOrg({\r\n    //   ID: props.ID,\r\n    //   Title: props.LookupValue,\r\n    // });\r\n    return requestOrgStore().find((entity) => entity.ID == props.ID);\r\n    //return Object.assign(newRequestOrg, requestOrg);\r\n  };\r\n\r\n  static FindInStore = function (entity) {\r\n    if (!entity?.ID) return null;\r\n    return requestOrgStore().find((reqOrg) => reqOrg.ID == entity.ID);\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"UserGroup\",\r\n      \"ContactInfo\",\r\n      \"OrgType\",\r\n      \"BreakAccess\",\r\n      \"PreferredEmail\",\r\n      \"Everyone\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"ConfigRequestOrgs\",\r\n    title: \"ConfigRequestOrgs\",\r\n    fields: RequestOrg.Views.All,\r\n  };\r\n}\r\n\r\nexport const requestOrgStore = ko.observableArray([]);\r\n", "export default class Entity {\r\n  constructor(params) {\r\n    if (params?.ID) this.ID = params.ID;\r\n    if (params?.Title) this.Title = params.Title;\r\n  }\r\n\r\n  ObservableID = ko.observable();\r\n  ObservableTitle = ko.observable();\r\n\r\n  get ID() {\r\n    return this.ObservableID();\r\n  }\r\n\r\n  set ID(val) {\r\n    this.ObservableID(val);\r\n  }\r\n\r\n  get Title() {\r\n    return this.ObservableTitle();\r\n  }\r\n\r\n  set Title(val) {\r\n    this.ObservableTitle(val);\r\n  }\r\n}\r\n", "import { ValidationError } from \"../primitives/ValidationError.js\";\r\nimport { RequestOrg } from \"./RequestOrg.js\";\r\nimport Entity from \"../primitives/Entity.js\";\r\n\r\nexport const assignmentStates = {\r\n  InProgress: \"In Progress\",\r\n  Completed: \"Completed\",\r\n  Approved: \"Approved\",\r\n  Rejected: \"Rejected\",\r\n  Cancelled: \"Cancelled\",\r\n};\r\n\r\nexport const assignmentRoles = {\r\n  ActionResolver: \"Action Resolver\",\r\n  Approver: \"Approver\",\r\n  Assigner: \"Assigner\",\r\n  Viewer: \"Viewer\",\r\n  Subscriber: \"Subscriber\",\r\n};\r\n\r\nexport const assignmentRoleComponentMap = {\r\n  \"Action Resolver\": \"resolver-actions\",\r\n  Approver: \"approver-actions\",\r\n  Assigner: \"assigner-actions\",\r\n};\r\n\r\nexport const activeAssignmentsError = {\r\n  source: \"current-stage-active-assignments\",\r\n  type: \"current-stage\",\r\n  description: \"Please complete all assignments\",\r\n};\r\n\r\nexport class Assignment extends Entity {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    Assignee,\r\n    RequestOrg,\r\n    PipelineStage,\r\n    IsActive = true,\r\n    Role,\r\n    CustomComponent = null,\r\n  }) {\r\n    super({ ID, Title });\r\n\r\n    this.Assignee = Assignee;\r\n    this.RequestOrg = RequestOrg;\r\n    this.PipelineStage = PipelineStage;\r\n    this.IsActive = IsActive;\r\n    this.Role = Role;\r\n    this.CustomComponent = CustomComponent;\r\n  }\r\n\r\n  Role;\r\n\r\n  Errors = ko.observableArray();\r\n\r\n  getComponentName = () => {\r\n    return this.CustomComponent ?? assignmentRoleComponentMap[this.Role];\r\n  };\r\n\r\n  getComponent = ({ request }) => {\r\n    return {\r\n      request: request,\r\n      assignment: this,\r\n      addAssignment: request.Assignments.addNew,\r\n      completeAssignment: request.Assignments.complete,\r\n      errors: this.Errors,\r\n      actionComponentName: this.getComponentName(),\r\n    };\r\n  };\r\n\r\n  userIsDirectlyAssigned = (user) => {\r\n    return this.Assignee?.ID == user.ID || user.isInGroup(this.Assignee);\r\n  };\r\n\r\n  userIsInRequestOrg = (user) => {\r\n    return user.isInRequestOrg(this.RequestOrg);\r\n  };\r\n\r\n  isActionable = () => {\r\n    return [\r\n      assignmentRoles.ActionResolver,\r\n      assignmentRoles.Approver,\r\n      assignmentRoles.Assigner,\r\n    ].includes(this.Role);\r\n  };\r\n\r\n  isUserActionable = (user) => {\r\n    if (!user) user = window.WorkOrder.App.CurrentUser();\r\n    if (!this.isActionable()) return false;\r\n    return this.userIsDirectlyAssigned(user) || this.userIsInRequestOrg(user);\r\n  };\r\n\r\n  // Should we really be storing observables here?\r\n  isExpanded = ko.observable(true);\r\n\r\n  toggleExpanded = () => this.isExpanded(!this.isExpanded());\r\n\r\n  static CreateFromObject = function (assignment) {\r\n    assignment.RequestOrg = RequestOrg.FindInStore(assignment.RequestOrg);\r\n    const newAssignment = new Assignment();\r\n    Object.assign(newAssignment, assignment);\r\n    return newAssignment;\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"Assignee\",\r\n      \"Role\",\r\n      \"Status\",\r\n      \"RequestOrg\",\r\n      \"IsActive\",\r\n      \"Comment\",\r\n      \"CompletionDate\",\r\n      \"ActionTaker\",\r\n      \"PipelineStage\",\r\n      \"CustomComponent\",\r\n      \"Request\",\r\n    ],\r\n    Dashboard: [\"Role\", \"Assignee\", \"Status\", \"Request\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Assignments\",\r\n    title: \"Assignments\",\r\n    fields: Assignment.Views.All,\r\n  };\r\n}\r\n", "/*\r\n    SharePoint Acces Layer - SAL.js\r\n\r\n    Abstract any functions that rely on reading or setting SP items to here.\r\n\r\n    Create a new \"Connection\" object type that will store information for \r\n    interfacing with a specific list.\r\n\r\n    Author: Peter Backlund \r\n    Contact: backlundpf <@> state.gov\r\n    Created: 2019-02-12\r\n*/\r\n\r\n/*\r\n  TODO:\r\n  - migrate to rest api\r\n  - remove new from \"new SP.ClientContext.get_current()\"\r\n  - standardize currctx\r\n  - remove unused functions\r\n  - Combine functions \r\n*/\r\n\r\nwindow.console = window.console || { log: function () {} };\r\n\r\nvar sal = window.sal || {};\r\nsal.globalConfig = sal.globalConfig || {};\r\nsal.site = sal.site || {};\r\n\r\nwindow.DEBUG = true;\r\n\r\nfunction groupItemToObj(oListItem) {\r\n  return {\r\n    ID: oListItem.get_id(),\r\n    Title: oListItem.get_title(),\r\n    LoginName: oListItem.get_loginName(),\r\n    IsEnsured: true,\r\n    IsGroup: true,\r\n    oGroup: oListItem,\r\n  };\r\n}\r\n\r\n// Used in authorization\r\nexport function getDefaultGroups() {\r\n  const defaultGroups = sal.globalConfig.defaultGroups;\r\n  const result = {};\r\n  Object.keys(defaultGroups).forEach((key) => {\r\n    result[key] = groupItemToObj(defaultGroups[key]);\r\n  });\r\n  return result;\r\n}\r\n\r\nconst siteGroups = {};\r\n\r\nexport async function getGroupUsers(groupName) {\r\n  if (siteGroups[groupName]?.Users?.constructor == Array) {\r\n    return siteGroups[groupName].Users;\r\n  }\r\n  const url = `/web/sitegroups/GetByName('${groupName}')?$expand=Users`;\r\n\r\n  const groupResult = await spFetch(url);\r\n\r\n  const group = groupResult.d;\r\n  group.Users = group.Users?.results;\r\n\r\n  siteGroups[groupName] = group;\r\n  return group.Users;\r\n}\r\n\r\n// Used in router\r\nexport const webRoot =\r\n  _spPageContextInfo.webAbsoluteUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webAbsoluteUrl;\r\n\r\nexport async function InitSal() {\r\n  sal.globalConfig.siteGroups = [];\r\n\r\n  console.log(\"we are initing sal\");\r\n  // Initialize the sitewide settings here.\r\n  sal.globalConfig.siteUrl =\r\n    _spPageContextInfo.webServerRelativeUrl == \"/\"\r\n      ? \"\"\r\n      : _spPageContextInfo.webServerRelativeUrl;\r\n\r\n  //sal.globalConfig.user =\r\n  sal.globalConfig.listServices =\r\n    sal.globalConfig.siteUrl + \"/_vti_bin/ListData.svc/\";\r\n\r\n  var currCtx = SP.ClientContext.get_current();\r\n  var web = currCtx.get_web();\r\n  //sal.site = sal.siteConnection;\r\n\r\n  // Get default groups\r\n  sal.globalConfig.defaultGroups = {\r\n    owners: web.get_associatedOwnerGroup(),\r\n    members: web.get_associatedMemberGroup(),\r\n    visitors: web.get_associatedVisitorGroup(),\r\n  };\r\n  currCtx.load(sal.globalConfig.defaultGroups.owners);\r\n  currCtx.load(sal.globalConfig.defaultGroups.members);\r\n  currCtx.load(sal.globalConfig.defaultGroups.visitors);\r\n\r\n  // Get Current User information\r\n  var user = web.get_currentUser(); //must load this to access info.\r\n  currCtx.load(user);\r\n\r\n  // Get the site groups\r\n  var siteGroupCollection = web.get_siteGroups();\r\n  currCtx.load(siteGroupCollection);\r\n\r\n  // Get the roles upfront so we can validate they're present on the site.\r\n  sal.globalConfig.roles = [];\r\n  var oRoleDefinitions = currCtx.get_web().get_roleDefinitions();\r\n  currCtx.load(oRoleDefinitions);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    currCtx.executeQueryAsync(\r\n      function () {\r\n        sal.globalConfig.currentUser = user;\r\n\r\n        sal.globalConfig.siteGroups = m_fnLoadSiteGroups(siteGroupCollection);\r\n\r\n        // Role Definitions\r\n        var oEnumerator = oRoleDefinitions.getEnumerator();\r\n        while (oEnumerator.moveNext()) {\r\n          var oRoleDefinition = oEnumerator.get_current();\r\n          sal.globalConfig.roles.push(oRoleDefinition.get_name());\r\n        }\r\n\r\n        sal.config = new sal.NewAppConfig();\r\n        sal.utilities = new sal.NewUtilities();\r\n        resolve();\r\n      },\r\n      function (sender, args) {\r\n        alert(\"Error initializing SAL: \" + args.get_message());\r\n        console.error(\"Error initializing SAL: \" + args.get_message(), args);\r\n        reject();\r\n      }\r\n    );\r\n  });\r\n  // console.log()\r\n}\r\n\r\nsal.NewAppConfig = function () {\r\n  // TODO: We should take in configuration from our current application, roles/groups etc.\r\n  var siteRoles = {};\r\n  siteRoles.roles = {\r\n    FullControl: \"Full Control\",\r\n    Design: \"Design\",\r\n    Edit: \"Edit\",\r\n    Contribute: \"Contribute\",\r\n    RestrictedContribute: \"Restricted Contribute\",\r\n    InitialCreate: \"Initial Create\",\r\n    Read: \"Read\",\r\n    RestrictedRead: \"Restricted Read\",\r\n    LimitedAccess: \"Limited Access\",\r\n  };\r\n  siteRoles.fulfillsRole = function (inputRole, targetRole) {\r\n    // the site roles are already in authoritative order\r\n    const roles = Object.values(siteRoles.roles);\r\n    if (!roles.includes(inputRole) || !roles.includes(targetRole)) return false;\r\n\r\n    return roles.indexOf(inputRole) <= roles.indexOf(targetRole);\r\n  };\r\n\r\n  siteRoles.validate = function () {\r\n    Object.keys(siteRoles.roles).forEach(function (role) {\r\n      var roleName = siteRoles.roles[role];\r\n      if (!sal.globalConfig.roles.includes(roleName)) {\r\n        console.error(roleName + \" is not in the global roles list\");\r\n      } else {\r\n        console.log(roleName);\r\n      }\r\n    });\r\n  };\r\n\r\n  var siteGroups = {\r\n    groups: {\r\n      Owners: \"workorder Owners\",\r\n      Members: \"workorder Members\",\r\n      Visitors: \"workorder Visitors\",\r\n      RestrictedReaders: \"Restricted Readers\",\r\n    },\r\n  };\r\n\r\n  var publicMembers = {\r\n    siteRoles,\r\n    siteGroups,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// Used in Authorization\r\nexport async function getUserPropsAsync(userId = _spPageContextInfo.userId) {\r\n  // We need to make two api calls, one to user info list, and one to web\r\n  // const userInfoUrl = `/Web/lists/getbytitle('User%20Information%20List')/Items(${userId})`;\r\n  const userPropsUrl = `/sp.userprofiles.peoplemanager/getmyproperties`;\r\n  // const userGroupUrl = `/Web/GetUserById(${userId})/Groups`;\r\n\r\n  // Get more user info:\r\n  // const userInfoUrl = `/Web/GetUserById(${userId})/?$expand=Groups/users`;\r\n  const userInfoUrl = `/Web/GetUserById(${userId})/?$expand=Groups`;\r\n\r\n  const userInfo = (await spFetch(userInfoUrl)).d;\r\n\r\n  // TODO: See if we can just select the properties we need\r\n  // const userPropsUrl = `/sp.userprofiles.peoplemanager/getpropertiesfor(@v)?@v='${encodeURIComponent(\r\n  //   userInfo.LoginName\r\n  // )}'`;\r\n\r\n  const userProps = (await spFetch(userPropsUrl))?.d.UserProfileProperties\r\n    .results;\r\n\r\n  function findPropValue(props, key) {\r\n    return props.find((prop) => prop.Key == key)?.Value;\r\n  }\r\n\r\n  return {\r\n    ID: userId,\r\n    Title: userInfo.Title,\r\n    LoginName: userInfo.LoginName,\r\n    WorkPhone: findPropValue(userProps, \"WorkPhone\"),\r\n    EMail: findPropValue(userProps, \"WorkEmail\"), // TODO: Do we still need this spelling?\r\n    IsEnsured: true,\r\n    IsGroup: false,\r\n    Groups: userInfo.Groups?.results?.map((group) => {\r\n      return {\r\n        ...group,\r\n        ID: group.Id,\r\n        IsGroup: true,\r\n        IsEnsured: true,\r\n        // Users: group.Users?.results.map((user) => {\r\n        //   return {\r\n        //     ID: user.Id,\r\n        //     LoginName: user.LoginName,\r\n        //     Title: user.Title,\r\n        //     EMail: user.Email,\r\n        //   };\r\n        // }),\r\n      };\r\n    }),\r\n    Department: findPropValue(userProps, \"Department\"),\r\n  };\r\n}\r\n\r\n// TODO: DEPRECATED remove after verification\r\nasync function getUserPropsAsyncDeprecated() {\r\n  // TODO: We aren't getting the phone number, need to query userprofile service\r\n  return new Promise((resolve, reject) => {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oUser = web.get_currentUser();\r\n    var oGroups = oUser.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      const user = {\r\n        ID: oUser.get_id(),\r\n        Title: oUser.get_title(),\r\n        LoginName: oUser.get_loginName(),\r\n        IsEnsured: true,\r\n        IsGroup: false,\r\n        Groups: [],\r\n      };\r\n\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        user.Groups.push(groupItemToObj(oGroup));\r\n      }\r\n      resolve(user);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    currCtx.load(oUser);\r\n    currCtx.load(oGroups);\r\n    const data = { oUser, oGroups, resolve, reject };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  });\r\n}\r\n\r\nsal.NewUtilities = function () {\r\n  // TODO: Split this up into UserManager, GroupManager, etc\r\n  function createSiteGroup(groupName, permissions, callback) {\r\n    /* groupName: the name of the new SP Group\r\n     *  permissions: an array of permissions to assign to the group\r\n     * groupOwner: the name of the owner group\r\n     */\r\n    callback = callback === undefined ? null : callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var groupCreationInfo = new SP.GroupCreationInformation();\r\n    groupCreationInfo.set_title(groupName);\r\n    this.oGroup = oWebsite.get_siteGroups().add(groupCreationInfo);\r\n    oGroup.set_owner(oWebsite.get_associatedOwnerGroup());\r\n\r\n    oGroup.update();\r\n    var collRoleDefinitionBinding =\r\n      SP.RoleDefinitionBindingCollection.newObject(clientContext);\r\n\r\n    this.oRoleDefinitions = [];\r\n\r\n    permissions.forEach(function (perm) {\r\n      var oRoleDefinition = oWebsite.get_roleDefinitions().getByName(perm);\r\n      this.oRoleDefinitions.push(oRoleDefinition);\r\n      collRoleDefinitionBinding.add(oRoleDefinition);\r\n    });\r\n\r\n    var collRollAssignment = oWebsite.get_roleAssignments();\r\n    collRollAssignment.add(oGroup, collRoleDefinitionBinding);\r\n\r\n    function onCreateGroupSucceeded() {\r\n      var roleInfo =\r\n        oGroup.get_title() +\r\n        \" created and assigned to \" +\r\n        oRoleDefinitions.forEach(function (rd) {\r\n          rd + \", \";\r\n        });\r\n      if (callback) {\r\n        callback(oGroup.get_id());\r\n      }\r\n      console.log(roleInfo);\r\n    }\r\n\r\n    function onCreateGroupFailed(sender, args) {\r\n      alert(\r\n        groupnName +\r\n          \" - Create group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    clientContext.load(oGroup, \"Title\");\r\n\r\n    var data = {\r\n      groupName: groupName,\r\n      oGroup: oGroup,\r\n      oRoleDefinition: oRoleDefinition,\r\n      callback: callback,\r\n    };\r\n\r\n    clientContext.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateGroupSucceeded),\r\n      Function.createDelegate(data, onCreateGroupFailed)\r\n    );\r\n  }\r\n\r\n  function getUserGroups(user, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var everyone = web.ensureUser(user);\r\n    var oGroups = everyone.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      var groups = new Array();\r\n      var groupsInfo = new String();\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        var group = {};\r\n        group.ID = oGroup.get_id();\r\n        group.Title = oGroup.get_title();\r\n        groupsInfo +=\r\n          \"\\n\" +\r\n          \"Group ID: \" +\r\n          oGroup.get_id() +\r\n          \", \" +\r\n          \"Title : \" +\r\n          oGroup.get_title();\r\n        groups.push(group);\r\n      }\r\n      console.log(groupsInfo.toString());\r\n      callback(groups);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    currCtx.load(everyone);\r\n    currCtx.load(oGroups);\r\n    data = { everyone: everyone, oGroups: oGroups, callback: callback };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  }\r\n\r\n  function getUsersWithGroup(oGroup, callback) {\r\n    var context = new SP.ClientContext.get_current();\r\n\r\n    var oUsers = oGroup.get_users();\r\n\r\n    function onGetUserSuccess() {\r\n      var userObjs = [];\r\n      var userEnumerator = oUsers.getEnumerator();\r\n      while (userEnumerator.moveNext()) {\r\n        var userObj = {};\r\n        var oUser = userEnumerator.get_current();\r\n        userObj.title = oUser.get_title();\r\n        userObj.loginName = oUser.get_loginName();\r\n        userObjs.push(userObj);\r\n      }\r\n      callback(userObjs);\r\n    }\r\n\r\n    function onGetUserFailed(sender, args) {}\r\n\r\n    var data = { oUsers: oUsers, callback: callback };\r\n    context.load(oUsers);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onGetUserSuccess),\r\n      Function.createDelegate(data, onGetUserFailed)\r\n    );\r\n  }\r\n\r\n  function copyFiles(sourceLib, destLib, callback, onError) {\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourceLib);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        console.log(\"Got the source folder right here!\");\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destLib + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.log(\"Sorry, something messed up: \" + args.get_message());\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n  var publicMembers = {\r\n    copyFiles: copyFiles,\r\n    copyFilesAsync: copyFilesAsync,\r\n    createSiteGroup: createSiteGroup,\r\n    getUserGroups: getUserGroups,\r\n    getUsersWithGroup: getUsersWithGroup,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// Used in Authorization\r\nasync function getCurrentUserPropertiesAsync() {\r\n  var headers = {\r\n    \"Content-Type\": \"application/json;odata=verbose\",\r\n    \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n  };\r\n  try {\r\n    var response = await fetch(\r\n      _spPageContextInfo.webAbsoluteUrl +\r\n        \"/_api/SP.UserProfiles.PeopleManager/GetMyProperties\",\r\n      {\r\n        method: \"GET\",\r\n        headers,\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    sal.globalConfig.currentUserProfile = data.d;\r\n    const requestorPhone = data.d.UserProfileProperties.results.find(function (\r\n      prop\r\n    ) {\r\n      return prop.Key == \"WorkPhone\";\r\n    }).Value;\r\n  } catch (error) {\r\n    console.error(\"Unable to fetch User Properties:\", error);\r\n  }\r\n}\r\n\r\n// Used in Knockout people custom binding\r\nexport async function ensureUserByKeyAsync(userName) {\r\n  return new Promise((resolve, reject) => {\r\n    var group = sal.globalConfig.siteGroups.find(function (group) {\r\n      return group.LoginName == userName;\r\n    });\r\n\r\n    if (group) {\r\n      resolve(group);\r\n      return;\r\n    }\r\n\r\n    var context = new SP.ClientContext.get_current();\r\n    var oUser = context.get_web().ensureUser(userName);\r\n\r\n    function onEnsureUserSucceeded(sender, args) {\r\n      const user = {\r\n        ID: oUser.get_id(),\r\n        Title: oUser.get_title(),\r\n        LoginName: oUser.get_loginName(),\r\n        Email: oUser.get_email(),\r\n        IsEnsured: true,\r\n        IsGroup: false,\r\n      };\r\n      resolve(user);\r\n    }\r\n\r\n    function onEnsureUserFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to ensure user :\" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    const data = { oUser, resolve, reject };\r\n\r\n    context.load(oUser);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onEnsureUserSucceeded),\r\n      Function.createDelegate(data, onEnsureUserFailed)\r\n    );\r\n  });\r\n}\r\n\r\nfunction m_fnLoadSiteGroups(itemColl) {\r\n  var m_arrSiteGroups = new Array();\r\n  var listItemEnumerator = itemColl.getEnumerator();\r\n\r\n  while (listItemEnumerator.moveNext()) {\r\n    var oListItem = listItemEnumerator.get_current();\r\n\r\n    m_arrSiteGroups.push(groupItemToObj(oListItem));\r\n  }\r\n\r\n  return m_arrSiteGroups;\r\n}\r\n\r\nsal.getSPSiteGroupByName = function (groupName) {\r\n  var userGroup = null;\r\n  if (this.globalConfig.siteGroups != null) {\r\n    userGroup = this.globalConfig.siteGroups.find(function (group) {\r\n      return group.Title == groupName;\r\n    });\r\n  }\r\n  return userGroup;\r\n};\r\n\r\nexport function copyFileAsync(sourcePath, destPath) {\r\n  // const sourcePath = getServerRelativeFolderPath(source);\r\n  // const destPath = getServerRelativeFolderPath(dest);\r\n\r\n  const uri =\r\n    `/web/getFileByServerRelativeUrl('${sourcePath}')/` +\r\n    `copyTo(strNewUrl='${destPath}',bOverWrite=true)`;\r\n\r\n  return spFetch(uri, \"POST\");\r\n}\r\n\r\nexport function SPList(listDef) {\r\n  /*\r\n      Expecting a list definition object in the following format:\r\n        var assignmentListDef = {\r\n        name: \"Assignment\",\r\n        title: \"Assignment\"\r\n      };\r\n    */\r\n\r\n  /*****************************************************************\r\n                                Globals       \r\n    ******************************************************************/\r\n\r\n  var self = this;\r\n\r\n  self.config = {\r\n    def: listDef,\r\n  };\r\n\r\n  /*****************************************************************\r\n                                Common Private Methods       \r\n    ******************************************************************/\r\n  async function init() {\r\n    if (!self.config.fieldSchema) {\r\n      const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      const fields = await spFetch(apiEndpoint);\r\n      self.config.fieldSchema = fields.d.results;\r\n    }\r\n  }\r\n\r\n  init();\r\n\r\n  /*****************************************************************\r\n                                Common Public Methods       \r\n    ******************************************************************/\r\n\r\n  function setListPermissionsAsync(valuePairs, reset) {\r\n    return new Promise((resolve, reject) => {\r\n      setListPermissions(valuePairs, resolve, reset);\r\n    });\r\n  }\r\n\r\n  function setListPermissions(valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n\r\n    var users = new Array();\r\n    var resolvedGroups = new Array();\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = sal.getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup) {\r\n        resolvedGroups.push([resolvedGroup, vp[1]]);\r\n      } else {\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindItemSucceeded() {\r\n      console.log(\"Successfully found item\");\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      if (reset) {\r\n        oList.resetRoleInheritance();\r\n        oList.breakRoleInheritance(false, false);\r\n        oList\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        oList.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { oList: oList, callback: callback };\r\n\r\n      function onSetItemPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        callback(oList);\r\n      }\r\n\r\n      function onSetItemPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on List: \" +\r\n            this.oList.get_title() +\r\n            args.get_message() +\r\n            \"\\n\",\r\n          args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetItemPermissionsSuccess),\r\n        Function.createDelegate(data, onSetItemPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindItemFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to find List: \" + this.oList.get_title + args.get_message(),\r\n        args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      oList: oList,\r\n      users: users,\r\n      resolvedGroups: resolvedGroups,\r\n      callback: callback,\r\n    };\r\n    //let data = { title: oListItem.get_item(\"Title\"), oListItem: oListItem };\r\n\r\n    currCtx.load(oList);\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindItemSucceeded),\r\n      Function.createDelegate(data, onFindItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                createListItem      \r\n    ******************************************************************/\r\n  function mapObjectToListItem(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    if (!Array.isArray(val)) {\r\n      return mapItemToListItem(val);\r\n    }\r\n    return val\r\n      .map((item) => {\r\n        return mapItemToListItem(item);\r\n      })\r\n      .join(\";#\");\r\n  }\r\n\r\n  function mapItemToListItem(item) {\r\n    if (item.ID) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return `${item.ID};#${item.LookupValue ?? \"\"}`;\r\n    }\r\n    if (item.LookupValue) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return item.LookupValue;\r\n    }\r\n    if (item.constructor.getName() == \"Date\") {\r\n      return item.toISOString();\r\n    }\r\n    return item;\r\n  }\r\n\r\n  function createListItemAsync(entity, folderPath = null) {\r\n    return new Promise((resolve, reject) => {\r\n      //self.updateConfig();\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n      if (folderPath) {\r\n        var folderUrl =\r\n          sal.globalConfig.siteUrl +\r\n          \"/Lists/\" +\r\n          self.config.def.name +\r\n          \"/\" +\r\n          folderPath;\r\n        itemCreateInfo.set_folderUrl(folderUrl);\r\n      }\r\n\r\n      const oListItem = oList.addItem(itemCreateInfo);\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onCreateListItemSucceeded() {\r\n        resolve(oListItem.get_id());\r\n      }\r\n\r\n      function onCreateListItemFailed(sender, args) {\r\n        console.error(\"Create Item Failed - List: \" + self.config.def.name);\r\n        console.error(\"ValuePairs\", entity);\r\n        console.error(sender, args);\r\n        reject(sender);\r\n      }\r\n\r\n      const data = { entity, oListItem, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onCreateListItemSucceeded),\r\n        Function.createDelegate(data, onCreateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                                getListItems      \r\n    ******************************************************************/\r\n  function mapListItemToObject(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    let out = {};\r\n    switch (val.constructor.getName()) {\r\n      case \"SP.FieldUserValue\":\r\n        out.LoginName = val.get_email();\r\n      case \"SP.FieldLookupValue\":\r\n        out.ID = val.get_lookupId();\r\n        out.LookupValue = val.get_lookupValue();\r\n        out.Title = val.get_lookupValue();\r\n        break;\r\n      default:\r\n        out = val;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  function getListItems(caml, fields, callback) {\r\n    /*\r\n        Obtain all list items that match the querystring passed by caml.\r\n        */\r\n    var camlQuery = new SP.CamlQuery.createAllItemsQuery();\r\n\r\n    camlQuery.set_viewXml(caml);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var collListItem = oList.getItems(camlQuery);\r\n\r\n    function onGetListItemsSucceeded() {\r\n      var self = this;\r\n      var listItemEnumerator = self.collListItem.getEnumerator();\r\n\r\n      const foundObjects = [];\r\n\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        var listObj = {};\r\n        fields.forEach((field) => {\r\n          var colVal = oListItem.get_item(field);\r\n          //console.log(`SAL: Setting ${field} to`, colVal);\r\n          listObj[field] = Array.isArray(colVal)\r\n            ? colVal.map((val) => mapListItemToObject(val))\r\n            : mapListItemToObject(colVal);\r\n        });\r\n        //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n        // listObj.oListItem = oListItem;\r\n        foundObjects.push(listObj);\r\n      }\r\n      //this.setState({ focusedItems })\r\n      //console.log(\"calling callback get list\");\r\n      callback(foundObjects);\r\n    }\r\n\r\n    function onGetListItemsFailed(sender, args) {\r\n      console.log(\"unsuccessful read\", sender);\r\n\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      collListItem: collListItem,\r\n      callback: callback,\r\n      fields,\r\n      camlQuery,\r\n    };\r\n\r\n    currCtx.load(collListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemsSucceeded),\r\n      Function.createDelegate(data, onGetListItemsFailed)\r\n    );\r\n  }\r\n\r\n  function getListItemsAsync({ fields = null, caml = null }) {\r\n    if (!caml) {\r\n      var caml =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">0</Value>' +\r\n        \"</Eq></Where></Query></View>\";\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getListItems(caml, fields, resolve);\r\n    });\r\n  }\r\n\r\n  function findByIdAsync(id, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        findById(id, fields, resolve);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function getById(id, fields) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})?$Select=${queryFields}&$expand=${expandFields}`;\r\n\r\n    const result = await spFetch(apiEndpoint);\r\n    return result.d;\r\n  }\r\n\r\n  async function getListFields() {\r\n    if (!self.config.fieldSchema) {\r\n      const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      const fields = await spFetch(apiEndpoint);\r\n      self.config.fieldSchema = fields.d.results;\r\n    }\r\n    return self.config.fieldSchema;\r\n  }\r\n\r\n  async function getQueryFields(fields) {\r\n    const queryFields = [];\r\n    const expandFields = [];\r\n\r\n    const listFields = await getListFields();\r\n    fields.map((f) => {\r\n      if (f.includes(\"/\")) {\r\n        queryFields.push(f);\r\n        expandFields.push(f.split(\"/\")[0]);\r\n        return;\r\n      }\r\n      const fieldSchema = listFields.find((lf) => lf.StaticName == f);\r\n      if (!fieldSchema) {\r\n        alert(`Field '${f}' not found on list ${self.config.def.name}`);\r\n        return;\r\n      }\r\n      switch (fieldSchema.TypeAsString) {\r\n        case \"UserMulti\":\r\n        case \"User\":\r\n        case \"LookupMulti\":\r\n        case \"Lookup\":\r\n          const idString = f + \"/ID\";\r\n          const titleString = f + \"/Title\";\r\n          queryFields.push(idString);\r\n          queryFields.push(titleString);\r\n          expandFields.push(f);\r\n          // expandFields.push(titleString);\r\n          break;\r\n        case \"Choice\":\r\n        default:\r\n          queryFields.push(f);\r\n      }\r\n    });\r\n    return [queryFields, expandFields];\r\n  }\r\n\r\n  // { column, value, type = \"LookupValue\" }\r\n  async function findByColumnValueAsync(\r\n    columnFilters,\r\n    { orderByColumn = null, sortAsc },\r\n    { count = null },\r\n    fields,\r\n    includeFolders\r\n  ) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n    const orderBy = orderByColumn\r\n      ? `$orderby=${orderByColumn} ${sortAsc ? \"asc\" : \"desc\"}`\r\n      : \"\";\r\n    // TODO: fieldfilter should use 'lookupcolumnId' e.g. ServiceTypeId eq 1\r\n    const colFilterArr = [];\r\n    columnFilters.forEach((colFilter) =>\r\n      colFilterArr.push(\r\n        `${colFilter.column} ${colFilter.op ?? \"eq\"} '${colFilter.value}'`\r\n      )\r\n    );\r\n    if (!includeFolders) colFilterArr.push(`FSObjType eq '0'`);\r\n\r\n    const filter = \"$filter=(\" + colFilterArr.join(`) and (`) + \")\";\r\n\r\n    //const fsObjTypeFilter = `FSObjType eq '0'`;\r\n    // const fieldFilter = `${column} eq '${value}'`;\r\n    // const filter2 = !includeFolders\r\n    //   ? `$filter=(${fieldFilter}) and (${fsObjTypeFilter})`\r\n    //   : `$filter=${fieldFilter}`;\r\n\r\n    const include = \"$select=\" + queryFields;\r\n    const expand = `$expand=` + expandFields;\r\n    const page = count ? `$top=${count}` : \"\";\r\n\r\n    const apiEndpoint =\r\n      `/web/lists/GetByTitle('${self.config.def.title}')/items?` +\r\n      `${include}&${expand}&${orderBy}&${filter}&${page}`;\r\n\r\n    const result = await spFetch(apiEndpoint);\r\n    const cursor = {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n\r\n    // if (window.DEBUG) console.log(cursor);\r\n    return cursor;\r\n  }\r\n\r\n  async function loadNextPage(cursor) {\r\n    const result = await spFetch(cursor._next);\r\n    return {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n  }\r\n\r\n  function findById(id, fields, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n    var oListItem = oList.getItemById(id);\r\n\r\n    function onGetListItemSucceeded() {\r\n      const listObj = {};\r\n      fields.forEach((field) => {\r\n        var colVal = oListItem.get_item(field);\r\n        //console.log(`SAL: Setting ${field} to`, colVal);\r\n        listObj[field] = Array.isArray(colVal)\r\n          ? colVal.map((val) => mapListItemToObject(val))\r\n          : mapListItemToObject(colVal);\r\n      });\r\n      callback(listObj);\r\n    }\r\n\r\n    function onGetListItemFailed(sender, args) {\r\n      console.error(\"SAL: findById - List: \" + self.config.def.name);\r\n      console.error(\"Fields\", this);\r\n      console.error(sender, args);\r\n    }\r\n\r\n    var data = {\r\n      oListItem,\r\n      callback,\r\n      fields,\r\n    };\r\n    currCtx.load(oListItem);\r\n    // currCtx.load(oListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemSucceeded),\r\n      Function.createDelegate(data, onGetListItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                            updateListItem      \r\n    ******************************************************************/\r\n\r\n  function updateListItemAsync(entity) {\r\n    if (!entity?.ID) {\r\n      return false;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(entity.ID);\r\n\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onUpdateListItemsSucceeded() {\r\n        //alert('Item updated!');\r\n        console.log(\"Successfully updated \" + this.oListItem.get_item(\"Title\"));\r\n        resolve();\r\n      }\r\n\r\n      function onUpdateListItemFailed(sender, args) {\r\n        console.error(\"Update Failed - List: \" + self.config.def.name);\r\n        console.error(\"Item Id\", this.oListItem.get_id() ?? \"N/A\");\r\n        console.error(entity);\r\n        console.error(sender, args);\r\n        reject(args);\r\n      }\r\n\r\n      const data = { oListItem, entity, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onUpdateListItemsSucceeded),\r\n        Function.createDelegate(data, onUpdateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            deleteListItem      \r\n    ******************************************************************/\r\n  function deleteListItem(id, callback) {\r\n    //[[\"ColName\", \"Value\"], [\"Col2\", \"Value2\"]]\r\n    //self.callbackDeleteListItem = callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var data = { callback: callback };\r\n    const oListItem = oList.getItemById(id);\r\n    oListItem.deleteObject();\r\n\r\n    function onDeleteListItemsSucceeded(sender, args) {\r\n      //alert('Item updated!');\r\n      callback();\r\n    }\r\n\r\n    function onDeleteListItemsFailed(sender, args) {\r\n      console.error(\r\n        \"sal.SPList.deleteListItem: Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onDeleteListItemsSucceeded),\r\n      Function.createDelegate(data, onDeleteListItemsFailed)\r\n    );\r\n  }\r\n\r\n  function deleteListItemAsync(id) {\r\n    return new Promise((resolve, reject) => deleteListItem(id, resolve));\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Permissions  \r\n    ******************************************************************/\r\n\r\n  function setItemPermissionsAsync(id, valuePairs, reset) {\r\n    return new Promise((resolve, reject) => {\r\n      setItemPermissions(id, valuePairs, resolve, reset);\r\n    });\r\n  }\r\n  /**\r\n   * Documentation - setItemPermissions\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {Array} valuePairs A 2d array containing groups/users and permission levels\r\n   *    e.g. [[\"Owners\", \"Full Control\"], [\"backlundpf\", \"Contribute\"]]\r\n   */\r\n  function setItemPermissions(id, valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n\r\n    //TODO: Validate that the groups and permissions exist on the site.\r\n    const users = [];\r\n    const resolvedGroups = [];\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    const oListItem = oList.getItemById(id);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      // var roleDefBindingColl = SP.RoleDefinitionBindingCollection.newObject(\r\n      //   currCtx\r\n      // );\r\n      const resolvedGroup = sal.getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup?.oGroup) {\r\n        resolvedGroups.push([resolvedGroup.oGroup, vp[1]]);\r\n\r\n        // roleDefBindingColl.add(web.get_roleDefinitions().getByName(vp[1]));\r\n        // oListItem.get_roleAssignments().add(resolvedGroup, roleDefBindingColl);\r\n      } else {\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n        // ensureUser(vp[0], function(resolvedUser)  {\r\n        //   self.setItemPermissionsUser(id, resolvedUser, vp[1]);\r\n        // });\r\n      }\r\n    });\r\n\r\n    function onFindItemSucceeded() {\r\n      console.log(\"Successfully found item\");\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n\r\n      if (reset) {\r\n        oListItem.resetRoleInheritance();\r\n        oListItem.breakRoleInheritance(false, false);\r\n        oListItem\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        oListItem.breakRoleInheritance(false, false);\r\n      }\r\n      //var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        const roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        oListItem.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        const roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        oListItem.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { oListItem: oListItem, callback: callback };\r\n\r\n      function onSetItemPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        callback(oListItem);\r\n      }\r\n\r\n      function onSetItemPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on item: \" +\r\n            this.oListItem.get_lookupValue() +\r\n            args.get_message() +\r\n            \"\\n\" +\r\n            args.get_stackTrace(),\r\n          false\r\n        );\r\n      }\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetItemPermissionsSuccess),\r\n        Function.createDelegate(data, onSetItemPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindItemFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to update permissions on item: \" +\r\n          this.title +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace(),\r\n        false\r\n      );\r\n    }\r\n    var data = {\r\n      id: id,\r\n      oListItem: oListItem,\r\n      users: users,\r\n      resolvedGroups: resolvedGroups,\r\n      callback: callback,\r\n    };\r\n    //let data = { title: oListItem.get_item(\"Title\"), oListItem: oListItem };\r\n\r\n    currCtx.load(oListItem);\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindItemSucceeded),\r\n      Function.createDelegate(data, onFindItemFailed)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Documentation - getItemPermissionsAsync\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {Function} callback The callback function to execute after\r\n   *  obtaining permissions\r\n   */\r\n  function getItemPermissionsAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      var oListItem = oList.getItemById(id);\r\n      var roles = oListItem.get_roleAssignments();\r\n\r\n      function onFindItemSucceeded() {\r\n        var currCtx = new SP.ClientContext.get_current();\r\n        var web = currCtx.get_web();\r\n        var principals = [];\r\n        var roleEnumerator = this.roles.getEnumerator();\r\n        // enumerate the roles\r\n        while (roleEnumerator.moveNext()) {\r\n          var role = roleEnumerator.get_current();\r\n          var principal = role.get_member();\r\n          // get the principal\r\n          currCtx.load(principal);\r\n          principals.push(principal);\r\n        }\r\n\r\n        currCtx.executeQueryAsync(\r\n          function (sender, args) {\r\n            var logins = principals.map(function (principal) {\r\n              return {\r\n                ID: principal.get_id(),\r\n                Title: principal.get_title(),\r\n                LoginName: principal.get_loginName(),\r\n              };\r\n            });\r\n            resolve(logins);\r\n          },\r\n          function (sender, args) {\r\n            alert(\r\n              \"Request failed. \" +\r\n                args.get_message() +\r\n                \"\\n\" +\r\n                args.get_stackTrace()\r\n            );\r\n            reject(args);\r\n          }\r\n        );\r\n      }\r\n\r\n      function onFindItemFailed(sender, args) {\r\n        console.error(\r\n          \"Failed to get permissions on item: \" +\r\n            args.get_message() +\r\n            \"\\n\" +\r\n            args.get_stackTrace(),\r\n          false\r\n        );\r\n        reject(args);\r\n      }\r\n\r\n      const data = {\r\n        id,\r\n        oListItem,\r\n        roles,\r\n        resolve,\r\n        reject,\r\n      };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.load(roles);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onFindItemSucceeded),\r\n        Function.createDelegate(data, onFindItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Folders          \r\n    ******************************************************************/\r\n\r\n  function getServerRelativeFolderPath(relFolderPath) {\r\n    const listPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    const root = sal.globalConfig.siteUrl + listPath;\r\n\r\n    if (relFolderPath.startsWith(root)) return relFolderPath;\r\n    return root + relFolderPath;\r\n  }\r\n\r\n  function upsertFolderPathAsync(folderPath) {\r\n    if (self.config.def.isLib) {\r\n      return new Promise((resolve, reject) =>\r\n        upsertLibFolderByPath(folderPath, resolve)\r\n      );\r\n    }\r\n    return new Promise((resolve, reject) =>\r\n      upsertListFolderByPath(folderPath, resolve)\r\n    );\r\n  }\r\n\r\n  async function setFolderReadonlyAsync(folderPath) {\r\n    try {\r\n      const currentPerms = await getFolderPermissionsAsync(folderPath);\r\n\r\n      const targetPerms = currentPerms.map((user) => {\r\n        return [user.LoginName, sal.config.siteRoles.roles.RestrictedRead];\r\n      });\r\n      await setFolderPermissionsAsync(folderPath, targetPerms, true);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n    return;\r\n  }\r\n\r\n  async function ensureFolderPermissionsAsync(relFolderPath, targetPerms) {\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const apiEndpoint =\r\n      sal.globalConfig.siteUrl +\r\n      `/_api/web/GetFolderByServerRelativeUrl('${serverRelFolderPath}')/` +\r\n      \"ListItemAllFields/RoleAssignments?$expand=Member,Member/Users,RoleDefinitionBindings\";\r\n\r\n    const response = await fetch(apiEndpoint, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json; odata=verbose\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status == 404) {\r\n        return;\r\n      }\r\n      console.error(response);\r\n    }\r\n    const result = await response.json();\r\n    const permissionResults = result?.d?.results;\r\n    if (!permissionResults) {\r\n      console.warn(\"No results found\", result);\r\n      return;\r\n    }\r\n\r\n    const missingPerms = targetPerms.filter((targetPermPair) => {\r\n      const targetLoginName = targetPermPair[0];\r\n      const targetPerm = targetPermPair[1];\r\n      // find an existing matching permissiont\r\n      const permExists = permissionResults.find((curPerm) => {\r\n        // If the target user isn't the member\r\n        if (curPerm.Member.LoginName != targetLoginName) {\r\n          // Or the member is a group that the target user isn't in\r\n          if (\r\n            !curPerm.Member.Users?.results.find(\r\n              (curUser) => curUser.LoginName == targetLoginName\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // The target principal has permissions assigned, let see if they include the target permission\r\n        if (\r\n          curPerm.RoleDefinitionBindings.results?.find((curBinding) =>\r\n            sal.config.siteRoles.fulfillsRole(curBinding.Name, targetPerm)\r\n          )\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        // Finally, the target principal is assigned, but don't have the appropriate permissions\r\n        return false;\r\n      });\r\n\r\n      return !permExists;\r\n    });\r\n\r\n    console.log(\"Adding missing permissions\", missingPerms);\r\n    if (missingPerms.length)\r\n      await setFolderPermissionsAsync(relFolderPath, missingPerms, false);\r\n\r\n    return;\r\n  }\r\n  /*****************************************************************\r\n                            List Folders          \r\n    ******************************************************************/\r\n  function getFolderContentsAsync(relFolderPath, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      // TODO: everything is the same as getListItems except for the caml query\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n      camlQuery.set_folderServerRelativeUrl(serverRelFolderPath);\r\n      const allItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(allItems, `Include(${fields.join(\", \")})`);\r\n\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const foundObjects = [];\r\n          var listItemEnumerator = allItems.getEnumerator();\r\n          while (listItemEnumerator.moveNext()) {\r\n            var oListItem = listItemEnumerator.get_current();\r\n            var listObj = {};\r\n            fields.forEach((field) => {\r\n              var colVal = oListItem.get_item(field);\r\n              //console.log(`SAL: Setting ${field} to`, colVal);\r\n              listObj[field] = Array.isArray(colVal)\r\n                ? colVal.map((val) => mapListItemToObject(val))\r\n                : mapListItemToObject(colVal);\r\n            });\r\n            //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n            listObj.oListItem = oListItem;\r\n            foundObjects.push(listObj);\r\n          }\r\n          resolve(foundObjects);\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load list folder contents:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderPermissionsAsync(relFolderPath) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const oListItem = await getFolderItemByPath(relFolderPath);\r\n      if (!oListItem) {\r\n        reject(\"Folder item does not exist\");\r\n        return;\r\n      }\r\n      const roles = oListItem.get_roleAssignments();\r\n\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      currCtx.load(oListItem);\r\n      currCtx.load(roles);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const currCtx = new SP.ClientContext.get_current();\r\n          console.log(oListItem);\r\n          const principals = [];\r\n          const bindings = [];\r\n          const roleEnumerator = roles.getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            const role = roleEnumerator.get_current();\r\n            const principal = role.get_member();\r\n            const bindings = role.get_roleDefinitionBindings();\r\n            // get the principal\r\n            currCtx.load(bindings);\r\n            currCtx.load(principal);\r\n            principals.push({ principal: principal, bindings: bindings });\r\n          }\r\n          currCtx.executeQueryAsync(\r\n            // success\r\n            function (sender, args) {\r\n              // alert the title\r\n              //alert(principal.get_title());\r\n\r\n              const logins = principals.map(function ({ principal, bindings }) {\r\n                const principalRoles = [];\r\n                const bindingEnumerator = bindings.getEnumerator();\r\n                while (bindingEnumerator.moveNext()) {\r\n                  const binding = bindingEnumerator.get_current();\r\n                  principalRoles.push(binding.get_name());\r\n                }\r\n                return {\r\n                  ID: principal.get_id(),\r\n                  Title: principal.get_title(),\r\n                  LoginName: principal.get_loginName(),\r\n                  Roles: principalRoles,\r\n                };\r\n              });\r\n              resolve(logins);\r\n            },\r\n            // failure\r\n            function (sender, args) {\r\n              console.warn(\"Unable load folder principals permissions:\");\r\n              console.error(sender);\r\n              console.error(args);\r\n              reject(args);\r\n            }\r\n          );\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load folder permissions:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderItemByPath(relFolderPath) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      var camlq =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><And><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">1</Value>' +\r\n        \"</Eq><Eq>\" +\r\n        '<FieldRef Name=\"FileRef\"/><Value Type=\"Text\">' +\r\n        serverRelFolderPath +\r\n        \"</Value>\" +\r\n        \"</Eq></And></Where></Query><RowLimit>1</RowLimit></View>\";\r\n\r\n      camlQuery.set_viewXml(camlq);\r\n\r\n      const allFolders = oList.getItems(camlQuery);\r\n\r\n      async function onFindItemSucceeded() {\r\n        const foundObjects = [];\r\n        var listItemEnumerator = allFolders.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          // Should be only one item\r\n          const oListItem = listItemEnumerator.get_current();\r\n          foundObjects.push(oListItem);\r\n        }\r\n\r\n        if (!foundObjects) {\r\n          console.warn(\"folder not found\");\r\n          resolve(foundObjects);\r\n        }\r\n\r\n        if (foundObjects.length > 1) {\r\n          console.warn(\"Multiple folders found!\");\r\n          resolve(foundObjects);\r\n        }\r\n        const oListItem = foundObjects[0];\r\n        resolve(oListItem);\r\n      }\r\n\r\n      function onFindItemFailed(sender, args) {\r\n        console.warn(\"Unable load list folder contents:\");\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n      const data = {\r\n        allFolders,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.load(allFolders);\r\n\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onFindItemSucceeded),\r\n        Function.createDelegate(data, onFindItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Document Libraries Folders\r\n    ******************************************************************/\r\n\r\n  /*****************************************************************\r\n                        Folder Creation          \r\n    ******************************************************************/\r\n\r\n  function upsertListFolderByPath(folderPath, callback) {\r\n    var folderArr = folderPath.split(\"/\");\r\n    var idx = 0;\r\n\r\n    var upsertListFolderInner = function (parentPath, folderArr, idx, success) {\r\n      var folderName = folderArr[idx];\r\n      idx++;\r\n      var curPath = folderArr.slice(0, idx).join(\"/\");\r\n      ensureListFolder(\r\n        curPath,\r\n        function (iFolder) {\r\n          if (idx >= folderArr.length) {\r\n            //We've reached the innermost folder and found it exists\r\n            success(iFolder.get_id());\r\n          } else {\r\n            upsertListFolderInner(curPath, folderArr, idx, success);\r\n          }\r\n        },\r\n        function () {\r\n          self.createListFolder(\r\n            folderName,\r\n            function (folderId) {\r\n              if (idx >= folderArr.length) {\r\n                //We've reached the innermost folder and found it exists\r\n                success(folderId);\r\n              } else {\r\n                upsertListFolderInner(curPath, folderArr, idx, success);\r\n              }\r\n            },\r\n            parentPath\r\n          );\r\n        }\r\n      );\r\n    };\r\n    upsertListFolderInner(\"\", folderArr, idx, callback);\r\n  }\r\n\r\n  /**\r\n   * CreateListFolder\r\n   * Creates a folder at the specified path\r\n   * @param {String} folderName\r\n   * @param {Function} callback\r\n   * @param {String} path\r\n   */\r\n  self.createListFolder = function (folderName, callback, path) {\r\n    path = path === undefined ? \"\" : path;\r\n\r\n    // Used for lists, duh\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n    let folderUrl = \"\";\r\n    const itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(folderName);\r\n    if (path) {\r\n      folderUrl =\r\n        sal.globalConfig.siteUrl +\r\n        \"/Lists/\" +\r\n        self.config.def.name +\r\n        \"/\" +\r\n        path;\r\n      itemCreateInfo.set_folderUrl(folderUrl);\r\n    }\r\n\r\n    const newItem = oList.addItem(itemCreateInfo);\r\n    newItem.set_item(\"Title\", folderName);\r\n\r\n    newItem.update();\r\n\r\n    function onCreateFolderSucceeded(sender, args) {\r\n      callback(this.newItem.get_id());\r\n    }\r\n\r\n    function onCreateFolderFailed(sender, args) {\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n\" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    const data = {\r\n      folderName: folderName,\r\n      callback: callback,\r\n      newItem: newItem,\r\n    };\r\n\r\n    currCtx.load(newItem);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateFolderSucceeded),\r\n      Function.createDelegate(data, onCreateFolderFailed)\r\n    );\r\n  };\r\n\r\n  function ensureListFolder(path, onExists, onNonExists) {\r\n    var folderUrl =\r\n      sal.globalConfig.siteUrl + \"/Lists/\" + self.config.def.name + \"/\" + path;\r\n\r\n    var ctx = SP.ClientContext.get_current();\r\n\r\n    // Could also call getFileByServerRelativeUrl() here. Doesn't matter.\r\n    // The way this works is identical for files and folders.\r\n    var folder = ctx.get_web().getFolderByServerRelativeUrl(folderUrl);\r\n    folder.get_listItemAllFields();\r\n    var data = {\r\n      folder: folder,\r\n      path: path,\r\n      onExists: onExists,\r\n      onNonExists: onNonExists,\r\n    };\r\n    ctx.load(folder, \"Exists\", \"Name\");\r\n\r\n    function onQueryFolderSucceeded() {\r\n      if (folder.get_exists()) {\r\n        // Folder exists and isn't hidden from us. Print its name.\r\n        console.log(\r\n          \"Folder \" + folder.get_name() + \" exists in \" + self.config.def.name\r\n        );\r\n        var currCtx = new SP.ClientContext.get_current();\r\n\r\n        var folderItem = folder.get_listItemAllFields();\r\n        function onQueryFolderItemSuccess() {\r\n          onExists(folderItem);\r\n        }\r\n        function onQueryFolderItemFailure(sender, args) {\r\n          console.error(\"Failed to find folder at \" + path, args);\r\n        }\r\n        data = { folderItem: folderItem, path: path, onExists: onExists };\r\n        currCtx.load(folderItem);\r\n        currCtx.executeQueryAsync(\r\n          Function.createDelegate(data, onQueryFolderItemSuccess),\r\n          Function.createDelegate(data, onQueryFolderItemFailure)\r\n        );\r\n      } else {\r\n        console.warn(\"Folder exists but is hidden (security-trimmed) for us.\");\r\n      }\r\n    }\r\n\r\n    function onQueryFolderFailed(sender, args) {\r\n      if (args.get_errorTypeName() === \"System.IO.FileNotFoundException\") {\r\n        // Folder doesn't exist at all.\r\n        console.log(\r\n          \"SAL.SPList.ensureListFolder: \\\r\n          Folder \" +\r\n            path +\r\n            \" does not exist in \" +\r\n            self.config.def.name\r\n        );\r\n        onNonExists();\r\n      } else {\r\n        // An unexpected error occurred.\r\n        console.error(\"Error: \" + args.get_message());\r\n      }\r\n    }\r\n    ctx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryFolderSucceeded),\r\n      Function.createDelegate(data, onQueryFolderFailed)\r\n    );\r\n  }\r\n\r\n  function upsertLibFolderByPath(folderUrl, success) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // TODO: Check if the folder exists before adding it\r\n\r\n    var createFolderInternal = function (parentFolder, folderUrl, success) {\r\n      var ctx = parentFolder.get_context();\r\n      var folderNames = folderUrl.split(\"/\");\r\n      var folderName = folderNames[0];\r\n      var curFolder = parentFolder.get_folders().add(folderName);\r\n      ctx.load(curFolder);\r\n      ctx.executeQueryAsync(\r\n        function () {\r\n          if (folderNames.length > 1) {\r\n            var subFolderUrl = folderNames\r\n              .slice(1, folderNames.length)\r\n              .join(\"/\");\r\n            createFolderInternal(curFolder, subFolderUrl, success);\r\n          } else {\r\n            success(curFolder);\r\n          }\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"error creating new folder\");\r\n          console.error(sender);\r\n          console.error(error);\r\n        }\r\n      );\r\n    };\r\n    createFolderInternal(oList.get_rootFolder(), folderUrl, success);\r\n  }\r\n\r\n  function setFolderPermissionsAsync(folderPath, valuePairs, reset) {\r\n    return new Promise((resolve, reject) => {\r\n      setFolderPermissions(folderPath, valuePairs, resolve, reset);\r\n    });\r\n  }\r\n\r\n  function setFolderPermissions(relFolderPath, valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n    // TODO: Validate that the users exist\r\n    var users = [];\r\n    var resolvedGroups = [];\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const folder = web.getFolderByServerRelativeUrl(serverRelFolderPath);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = sal.getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup?.oGroup) {\r\n        resolvedGroups.push([resolvedGroup.oGroup, vp[1]]);\r\n      } else {\r\n        //This doesn't appear to be a group, let's see if we can find a user\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindFolderSuccess() {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var folderItem = this.folder.get_listItemAllFields();\r\n      if (reset) {\r\n        folderItem.resetRoleInheritance();\r\n        folderItem.breakRoleInheritance(false, false);\r\n        folderItem\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        folderItem.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { folderItem: folderItem, callback: callback };\r\n\r\n      function onSetFolderPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        this.callback(folderItem);\r\n      }\r\n\r\n      function onSetFolderPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on item: \" + args.get_message(),\r\n          args\r\n        );\r\n      }\r\n\r\n      currCtx.load(folderItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetFolderPermissionsSuccess),\r\n        Function.createDelegate(data, onSetFolderPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindFolderFailure(sender, args) {\r\n      console.error(\r\n        \"Something went wrong setting perms on library folder\",\r\n        args\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      folder: folder,\r\n      users: users,\r\n      callback: callback,\r\n      resolvedGroups: resolvedGroups,\r\n      valuePairs: valuePairs,\r\n      reset: reset,\r\n    };\r\n\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.load(folder);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindFolderSuccess),\r\n      Function.createDelegate(data, onFindFolderFailure)\r\n    );\r\n  }\r\n\r\n  function deleteFolderByPathAsync(relFolderPath) {\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const url = `/web/GetFolderByServerRelativeUrl('${serverRelFolderPath}')`;\r\n    const headers = {\r\n      \"If-Match\": \"*\",\r\n      \"X-HTTP-Method\": \"DELETE\",\r\n    };\r\n    return spFetch(url, \"POST\", headers);\r\n  }\r\n\r\n  /*****************************************************************\r\n                                  \r\n  ******************************************************************/\r\n\r\n  function showModal(formName, title, args, callback) {\r\n    var id = \"\";\r\n    if (args.id) {\r\n      id = args.id;\r\n    }\r\n    const options = SP.UI.$create_DialogOptions();\r\n\r\n    var listPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    var rootFolder = \"\";\r\n\r\n    if (args.rootFolder) {\r\n      rootFolder = sal.globalConfig.siteUrl + listPath + args.rootFolder;\r\n    }\r\n\r\n    // WARNING: this looks similar to listPath but is different\r\n    var formsPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/Forms/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    Object.assign(options, {\r\n      title: title,\r\n      dialogReturnValueCallback: callback,\r\n      args: JSON.stringify(args),\r\n      url:\r\n        sal.globalConfig.siteUrl +\r\n        formsPath +\r\n        formName +\r\n        \"?ID=\" +\r\n        id +\r\n        \"&Source=\" +\r\n        location.pathname +\r\n        \"&RootFolder=\" +\r\n        rootFolder,\r\n    });\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n\r\n    // SP.SOD.execute(\r\n    //   \"sp.ui.dialog.js\",\r\n    //   \"SP.UI.ModalDialog.showModalDialog\",\r\n    //   options\r\n    // );\r\n  }\r\n\r\n  function uploadNewDocumentAsync(folderPath, title, args) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          //folder = folder != '/' ? folder : '';\r\n\r\n          var siteString =\r\n            sal.globalConfig.siteUrl == \"/\" ? \"\" : sal.globalConfig.siteUrl;\r\n\r\n          const options = SP.UI.$create_DialogOptions();\r\n          Object.assign(options, {\r\n            title: title,\r\n            dialogReturnValueCallback: resolve,\r\n            args: JSON.stringify(args),\r\n            url:\r\n              siteString +\r\n              \"/_layouts/Upload.aspx?List=\" +\r\n              oList.get_id().toString() +\r\n              \"&RootFolder=\" +\r\n              siteString +\r\n              \"/\" +\r\n              self.config.def.name +\r\n              \"/\" +\r\n              encodeURI(folderPath) +\r\n              \"&Source=\" +\r\n              location.pathname +\r\n              \"&args=\" +\r\n              encodeURI(JSON.stringify(args)),\r\n          });\r\n          //console.log(\"Options url: \" + options.url);\r\n          SP.UI.ModalDialog.showModalDialog(options);\r\n          // SP.SOD.execute(\r\n          //   \"sp.ui.dialog.js\",\r\n          //   \"SP.UI.ModalDialog.showModalDialog\",\r\n          //   options\r\n          // );\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"Error showing file modal: \");\r\n          console.error(sender);\r\n          console.error(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  const UPLOADCHUNKSIZE = 10485760; // PnPJs\r\n  // const UPLOADCHUNKSIZE = 262144000; // SPO\r\n\r\n  const uploadchunkActionTypes = {\r\n    start: \"startupload\",\r\n    continue: \"continueupload\",\r\n    finish: \"finishupload\",\r\n  };\r\n\r\n  async function uploadFileRestChunking(\r\n    file,\r\n    relFolderPath,\r\n    fileName,\r\n    progress\r\n  ) {\r\n    /* https://sharepoint.stackexchange.com/questions/287334/upload-files-250mb-via-sharepoint-rest-api\r\nhttps://learn.microsoft.com/en-us/previous-versions/office/developer/sharepoint-rest-reference/dn450841(v=office.15)\r\n    */\r\n    const blob = file;\r\n    const chunkSize = UPLOADCHUNKSIZE;\r\n    const fileSize = file.size;\r\n\r\n    const totalBlocks =\r\n      parseInt((fileSize / chunkSize).toString(), 10) +\r\n      (fileSize % chunkSize === 0 ? 1 : 0);\r\n\r\n    const fileRef = relFolderPath + \"/\" + fileName;\r\n\r\n    const jobGuid = getGUID();\r\n    // const jobGuid = crypto.randomUUID\r\n    //   ? crypto.randomUUID()\r\n    //   : \"74493426-fb10-4e47-bc82-120954b81a60\";\r\n\r\n    let currentPointer;\r\n    progress({ currentBlock: 0, totalBlocks });\r\n    currentPointer = await startUpload(\r\n      jobGuid,\r\n      file.slice(0, chunkSize),\r\n      fileRef,\r\n      relFolderPath\r\n    );\r\n\r\n    for (let i = 2; i < totalBlocks; i++) {\r\n      progress({ currentBlock: i, totalBlocks });\r\n      currentPointer = await continueUpload(\r\n        jobGuid,\r\n        file.slice(currentPointer, currentPointer + chunkSize),\r\n        currentPointer,\r\n        fileRef\r\n      );\r\n    }\r\n\r\n    progress({ currentBlock: totalBlocks - 1, totalBlocks });\r\n    const result = await finishUpload(\r\n      jobGuid,\r\n      file.slice(currentPointer),\r\n      currentPointer,\r\n      fileRef\r\n    );\r\n\r\n    progress({ currentBlock: totalBlocks, totalBlocks });\r\n\r\n    return result;\r\n  }\r\n\r\n  async function startUpload(uploadId, chunk, fileRef, relFolderPath) {\r\n    const url =\r\n      `/web/getFolderByServerRelativeUrl(@folder)/files/getByUrlOrAddStub(@file)/StartUpload(guid'${uploadId}')?` +\r\n      `&@folder='${relFolderPath}'&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await spFetch(url, \"POST\", headers, opts);\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.StartUpload);\r\n  }\r\n\r\n  async function continueUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/ContinueUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await spFetch(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.ContinueUpload);\r\n  }\r\n\r\n  async function finishUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/FinishUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await spFetch(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  async function uploadFileRest(file, relFolderPath, fileName) {\r\n    return await fetch(\r\n      _spPageContextInfo.webServerRelativeUrl +\r\n        `/_api/web/GetFolderByServerRelativeUrl('${relFolderPath}')/Files/add(url='${fileName}',overwrite=true)`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"same-origin\",\r\n        body: file,\r\n        headers: {\r\n          Accept: \"application/json; odata=verbose\",\r\n          \"Content-Type\": \"application/json;odata=nometadata\",\r\n          \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Uploading File\", response);\r\n        return;\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  async function uploadFileToFolderAndUpdateMetadata(\r\n    file,\r\n    fileName,\r\n    relFolderPath,\r\n    payload,\r\n    progress = null\r\n  ) {\r\n    if (!progress) {\r\n      progress = () => {};\r\n    }\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n    let result = null;\r\n    if (file.size > UPLOADCHUNKSIZE) {\r\n      const job = () =>\r\n        uploadFileRestChunking(file, serverRelFolderPath, fileName, progress);\r\n      result = await uploadQueue.addJob(job);\r\n    } else {\r\n      progress({ currentBlock: 0, totalBlocks: 1 });\r\n      result = await uploadFileRest(file, serverRelFolderPath, fileName);\r\n      progress({ currentBlock: 1, totalBlocks: 1 });\r\n    }\r\n\r\n    await updateUploadedFileMetadata(result.d, payload);\r\n\r\n    // check in\r\n    await checkinWithComment(serverRelFolderPath + \"/\" + fileName, \"\");\r\n\r\n    let itemUri = result.d.ListItemAllFields.__deferred.uri + \"?$select=ID\";\r\n\r\n    const listItem = await spFetch(itemUri);\r\n    return listItem.d.ID;\r\n  }\r\n\r\n  async function updateUploadedFileMetadata(fileResult, payload) {\r\n    var result = await fetch(fileResult.ListItemAllFields.__deferred.uri, {\r\n      method: \"POST\",\r\n      credentials: \"same-origin\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        Accept: \"application/json; odata=nometadata\",\r\n        \"Content-Type\": \"application/json;odata=nometadata\",\r\n        \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        \"X-HTTP-Method\": \"MERGE\",\r\n        \"If-Match\": \"*\",\r\n      },\r\n    }).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Updating File\", response);\r\n        return;\r\n      }\r\n\r\n      return response;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function copyFiles(sourceFolderPath, destFolderPath, callback, onError) {\r\n    const sourcePath = getServerRelativeFolderPath(sourceFolderPath);\r\n    const destPath = getServerRelativeFolderPath(destFolderPath);\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourcePath);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destPath + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \", args.getMessage());\r\n            onError(args);\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.error(\"Unable to copy files: \", args.get_message());\r\n        console.error(sender, args);\r\n        onError(args);\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    // TODO: this should stay as a static utility instead of list specific\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  function copyFileAsync(sourcePath, dest) {\r\n    const destPath = getServerRelativeFolderPath(dest);\r\n\r\n    const uri =\r\n      `/web/getFileByServerRelativeUrl(@s)/` +\r\n      `copyTo(strNewUrl=@d,bOverWrite=true)` +\r\n      `?@s='${sourcePath}'&@d='${destPath}'`;\r\n\r\n    return spFetch(uri, \"POST\");\r\n  }\r\n\r\n  async function copyAttachmentFromPath(sourcePath, item, fileName = null) {\r\n    if (!fileName) fileName = sourcePath.split(\"/\").pop();\r\n    const destPath = getServerRelativeFolderPath(\r\n      `Attachments/${item.ID}/${fileName}`\r\n    );\r\n\r\n    const destItem = getServerRelativeFolderPath(`${item.ID}/${fileName}`);\r\n\r\n    const attachmentUri = `/web/lists/getbytitle('${self.config.def.title}')/items(${item.ID})/AttachmentFiles/add(FileName='${fileName}')`;\r\n\r\n    const sourceUri = `/web/GetFileByServerRelativeUrl('${sourcePath}')/$value`;\r\n    const fileResponse = await spFetch(sourceUri, \"GET\", null, null, \"blob\");\r\n    if (!fileResponse) {\r\n      return;\r\n    }\r\n    // const fileBlob = await fileResponse.blob();\r\n    const fileArrayBuffer = await fileResponse.arrayBuffer();\r\n\r\n    const headers = {\r\n      \"Content-Length\": fileArrayBuffer.byteLength,\r\n    };\r\n\r\n    const opts = {\r\n      body: fileArrayBuffer,\r\n    };\r\n\r\n    const attachmentResponse = await spFetch(\r\n      attachmentUri,\r\n      \"POST\",\r\n      headers,\r\n      opts\r\n    );\r\n\r\n    return attachmentResponse;\r\n  }\r\n\r\n  // Ensure List/Library exists on the site\r\n  async function ensureList() {\r\n    // Query List Title\r\n    const listInfo = await spFetch(\r\n      `/web/lists/GetByTitle('${self.config.def.title}')`\r\n    );\r\n  }\r\n\r\n  function checkinWithComment(fileRef, comment) {\r\n    const url = `/web/GetFileByServerRelativeUrl('${fileRef}')/CheckIn(comment='${comment}',checkintype=0)`;\r\n    return spFetch(url, \"POST\");\r\n  }\r\n\r\n  const publicMembers = {\r\n    findByIdAsync,\r\n    getById,\r\n    findByColumnValueAsync,\r\n    loadNextPage,\r\n    getListItemsAsync,\r\n    createListItemAsync,\r\n    updateListItemAsync,\r\n    deleteListItemAsync,\r\n    setItemPermissionsAsync,\r\n    getItemPermissionsAsync,\r\n    getFolderContentsAsync,\r\n    upsertFolderPathAsync,\r\n    deleteFolderByPathAsync,\r\n    getServerRelativeFolderPath,\r\n    setFolderReadonlyAsync,\r\n    setFolderPermissionsAsync,\r\n    ensureFolderPermissionsAsync,\r\n    uploadFileToFolderAndUpdateMetadata,\r\n    uploadNewDocumentAsync,\r\n    copyFilesAsync,\r\n    copyFileAsync,\r\n    copyAttachmentFromPath,\r\n    showModal,\r\n  };\r\n\r\n  return publicMembers;\r\n}\r\n\r\nasync function spFetch(\r\n  uri,\r\n  method = \"GET\",\r\n  headers = {},\r\n  opts = {},\r\n  responseType = \"json\"\r\n) {\r\n  const siteEndpoint = uri.startsWith(\"http\")\r\n    ? uri\r\n    : sal.globalConfig.siteUrl + \"/_api\" + uri;\r\n  const response = await fetch(siteEndpoint, {\r\n    method: method,\r\n    headers: {\r\n      Accept: \"application/json; odata=verbose\",\r\n      \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n      ...headers,\r\n    },\r\n    ...opts,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    if (response.status == 404) {\r\n      return;\r\n    }\r\n    console.error(response);\r\n  }\r\n\r\n  try {\r\n    let result;\r\n    switch (responseType) {\r\n      case \"json\":\r\n        result = await response.json();\r\n        break;\r\n      case \"blob\":\r\n        result = await response.blob();\r\n        break;\r\n      default:\r\n        result = response;\r\n    }\r\n    return result;\r\n  } catch (e) {\r\n    return response;\r\n  }\r\n}\r\n\r\nwindow.spFetch = spFetch;\r\n\r\n// Other functions\r\nfunction getGUID() {\r\n  if (crypto.randomUUID) return crypto.randomUUID();\r\n\r\n  let d = Date.now();\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    const r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\nclass JobProcessor {\r\n  constructor(maxConcurrency) {\r\n    this.maxConcurrency = maxConcurrency;\r\n    this.runningJobs = 0;\r\n    this.queue = [];\r\n  }\r\n\r\n  addJob(asyncFunction) {\r\n    return new Promise((resolve, reject) => {\r\n      const job = async () => {\r\n        try {\r\n          const result = await asyncFunction();\r\n          resolve(result);\r\n        } catch (error) {\r\n          reject(error);\r\n        } finally {\r\n          this.runningJobs--;\r\n          this.processQueue();\r\n        }\r\n      };\r\n\r\n      this.queue.push(job);\r\n      this.processQueue();\r\n    });\r\n  }\r\n\r\n  processQueue() {\r\n    while (this.runningJobs < this.maxConcurrency && this.queue.length > 0) {\r\n      const job = this.queue.shift();\r\n      this.runningJobs++;\r\n      job();\r\n    }\r\n  }\r\n}\r\n\r\nconst uploadQueue = new JobProcessor(5);\r\n", "import { People } from \"../entities/People.js\";\r\nimport { Assignment, assignmentStates } from \"../entities/Assignment.js\";\r\nimport {\r\n  RequestOrg,\r\n  requestOrgStore,\r\n  OrgTypes,\r\n} from \"../entities/RequestOrg.js\";\r\nimport {\r\n  getUserPropsAsync,\r\n  getDefaultGroups,\r\n  getGroupUsers,\r\n  ensureUserByKeyAsync,\r\n} from \"./SAL.js\";\r\n\r\nexport const permissions = {\r\n  FullControl: \"Full Control\",\r\n  Design: \"Design\",\r\n  Edit: \"Edit\",\r\n  Contribute: \"Contribute\",\r\n  Read: \"Read\",\r\n  LimitedAccess: \"Limited Access\",\r\n  RestrictedRead: \"Restricted Read\",\r\n  RestrictedContribute: \"Restricted Contribute\",\r\n  InitialCreate: \"Initial Create\",\r\n};\r\n\r\nvar staticGroups = {\r\n  RestrictedReaders: new People({ ID: null, Title: \"Restricted Readers\" }),\r\n};\r\n\r\nexport const systemRoles = {\r\n  Admin: \"Admin\",\r\n  ActionOffice: \"ActionOffice\",\r\n};\r\n\r\nexport const roles = {\r\n  ActionResolver: {\r\n    LookupValue: \"Action Resolver\",\r\n    description: \"Confirms completion of an action.\",\r\n    isAssignable: true,\r\n    permissions: permissions.RestrictedContribute,\r\n    initialStatus: assignmentStates.InProgress,\r\n  },\r\n  Assigner: {\r\n    LookupValue: \"Assigner\",\r\n    description: \"Can create additional assignments.\",\r\n    isAssignable: true,\r\n    permissions: permissions.RestrictedContribute,\r\n    initialStatus: assignmentStates.InProgress,\r\n  },\r\n  Approver: {\r\n    LookupValue: \"Approver\",\r\n    description: \"Approves or Rejects the request.\",\r\n    isAssignable: true,\r\n    permissions: permissions.RestrictedContribute,\r\n    initialStatus: assignmentStates.InProgress,\r\n  },\r\n  Viewer: {\r\n    LookupValue: \"Viewer\",\r\n    description: \"Has view only access to the request.\",\r\n    isAssignable: true,\r\n    permissions: permissions.RestrictedRead,\r\n  },\r\n  Subscriber: {\r\n    LookupValue: \"Subscriber\",\r\n    description:\r\n      \"Has view only access to the request and recieves notifications\",\r\n    isAssignable: true,\r\n    permissions: permissions.RestrictedRead,\r\n  },\r\n};\r\n\r\nexport const stageActionRoleMap = {\r\n  \"Pending Assignment\": roles.Assigner,\r\n  \"Pending Approval\": roles.Approver,\r\n  \"Pending Action\": roles.ActionResolver,\r\n  \"Pending Resolution\": roles.ActionResolver,\r\n  Notification: roles.Subscriber,\r\n};\r\n\r\n// Holds a User object\r\nexport const currentUser = ko.observable();\r\n\r\nexport class User extends People {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    LookupValue = null,\r\n    WorkPhone = null,\r\n    EMail = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n    Groups = null,\r\n    Department = null,\r\n  }) {\r\n    super({ ID, Title, LookupValue, LoginName, IsGroup, IsEnsured });\r\n\r\n    this.WorkPhone = WorkPhone;\r\n    this.EMail = EMail;\r\n    this.Email = EMail;\r\n\r\n    this.OfficeSymbol = Department ?? \"CGFS/EX\";\r\n    this.Groups = Groups;\r\n  }\r\n  OfficeSymbol;\r\n  Groups = [];\r\n\r\n  isInGroup(group) {\r\n    if (!group?.ID) return false;\r\n    return this.getGroupIds().includes(group.ID);\r\n  }\r\n\r\n  getGroupIds() {\r\n    return this.Groups.map((group) => group.ID);\r\n  }\r\n\r\n  isInRequestOrg = (reqOrg) => {\r\n    return this.RequestOrgs().find((userReqOrg) => userReqOrg.ID == reqOrg.ID);\r\n  };\r\n\r\n  RequestOrgs = ko.pureComputed(() => {\r\n    const groupIds = this.getGroupIds();\r\n    return requestOrgStore().filter(\r\n      (reqOrg) => reqOrg.Everyone || groupIds.includes(reqOrg.UserGroup?.ID)\r\n    );\r\n  });\r\n\r\n  RequestingOffices = ko.pureComputed(() => {\r\n    return this.RequestOrgs().filter(\r\n      (reqOrg) => reqOrg.OrgType == OrgTypes.RequestingOffice\r\n    );\r\n  });\r\n\r\n  ActionOffices = ko.pureComputed(() => {\r\n    return this.RequestOrgs().filter(\r\n      (reqOrg) => reqOrg.OrgType == OrgTypes.ActionOffice\r\n    );\r\n  });\r\n\r\n  IsActionOffice = ko.pureComputed(() => this.ActionOffices().length);\r\n  IsSiteOwner = ko.pureComputed(() =>\r\n    this.isInGroup(getDefaultGroups().owners)\r\n  );\r\n\r\n  hasSystemRole = (systemRole) => {\r\n    const userIsOwner = this.IsSiteOwner();\r\n    switch (systemRole) {\r\n      case systemRoles.Admin:\r\n        return userIsOwner;\r\n        break;\r\n      case systemRoles.ActionOffice:\r\n        return userIsOwner || this.ActionOffices().length;\r\n      default:\r\n    }\r\n  };\r\n\r\n  static Create = async function () {\r\n    // TODO: Major - Switch to getUserPropertiesAsync since that includes phone # etc\r\n    const userProps = await getUserPropsAsync();\r\n    // const userProps2 = await UserManager.getUserPropertiesAsync();\r\n    return new User(userProps);\r\n  };\r\n}\r\n\r\nexport function getRequestFolderPermissions(request) {\r\n  const defaultGroups = getDefaultGroups();\r\n  const requestor = request.RequestorInfo.Requestor();\r\n  const submitter = request.Author.Value();\r\n  const requestorOffice = request.RequestorInfo.Office(); // this should be set during validation\r\n\r\n  const folderPermissions = [\r\n    [new People(defaultGroups.owners), permissions.FullControl],\r\n    [staticGroups.RestrictedReaders, permissions.RestrictedRead],\r\n    [requestor, permissions.RestrictedContribute],\r\n    [submitter, permissions.RestrictedContribute],\r\n  ];\r\n\r\n  if (requestorOffice && !requestorOffice.BreakAccess) {\r\n    folderPermissions.push([\r\n      requestorOffice.UserGroup,\r\n      permissions.RestrictedContribute,\r\n    ]);\r\n  }\r\n\r\n  // break pipeline stages at front?\r\n  request.Pipeline.Stages()?.forEach((stage) => {\r\n    const stageOrg = RequestOrg.FindInStore(stage.RequestOrg);\r\n    if (stageOrg) {\r\n      folderPermissions.push([\r\n        stageOrg.UserGroup,\r\n        permissions.RestrictedContribute,\r\n      ]);\r\n    }\r\n\r\n    if (\r\n      stage.AssignmentFunction &&\r\n      AssignmentFunctions[stage.AssignmentFunction]\r\n    ) {\r\n      try {\r\n        const assignments = AssignmentFunctions[stage.AssignmentFunction](\r\n          request,\r\n          stage\r\n        );\r\n        assignments.forEach((assignment) => {\r\n          const people = assignment.Assignee;\r\n          if (people && people.Title) {\r\n            folderPermissions.push([people, permissions.RestrictedContribute]);\r\n          }\r\n        });\r\n      } catch (e) {\r\n        console.warn(\"Error creating stage assignments\", stage);\r\n      }\r\n    }\r\n  });\r\n\r\n  return folderPermissions;\r\n}\r\n\r\nexport async function getUsersByGroupName(groupName) {\r\n  const users = await getGroupUsers(groupName);\r\n\r\n  if (!users) return [];\r\n\r\n  return users.map((userProps) => new People(userProps));\r\n}\r\n\r\nexport async function ensurePerson(person) {\r\n  const ensured = await ensureUserByKeyAsync(person.LoginName ?? person.Title);\r\n  if (!ensured) return null;\r\n  return new People(ensured);\r\n}\r\n/**\r\n * Assignment functions are function that can be called by pipeline stages\r\n * Each function is bound to the current request (i.e. \"this\" refers to the Active Request)\r\n * Functions should return a user/group entity.\r\n *\r\n * NOTE: Some service types register their own assignment functions in their respective Entity.js\r\n * files.\r\n */\r\n\r\nexport const AssignmentFunctions = {\r\n  TestFunc: function () {\r\n    return request.RequestorInfo.Requestor();\r\n  },\r\n  ch_overtimeGovManager: function (request, stage) {\r\n    const assignee = request.RequestBodyBlob?.Value()?.GovManager.get();\r\n    if (!assignee) {\r\n      throw new Error(\"Could not find stage Assignee\");\r\n    }\r\n\r\n    const newCustomAssignment = new Assignment({\r\n      Assignee: assignee,\r\n      RequestOrg: stage.RequestOrg,\r\n      PipelineStage: stage,\r\n      IsActive: true,\r\n      Role: roles.ActionResolver,\r\n      CustomComponent: \"GovManagerActions\",\r\n    });\r\n\r\n    // const newApprovalAssignment = new Assignment({\r\n    //   Assignee: assignee,\r\n    //   RequestOrg: stage.RequestOrg,\r\n    //   PipelineStage: stage,\r\n    //   IsActive: true,\r\n    //   Role: roles.Approver,\r\n    // });\r\n    return [newCustomAssignment];\r\n  },\r\n  ch_overtimeAPM: function (request, stage) {\r\n    const assignee = request.RequestBodyBlob?.Value()?.FieldMap.APM.get();\r\n    if (!assignee) {\r\n      throw new Error(\"Could not find stage Assignee\");\r\n    }\r\n\r\n    const newCustomAssignment = new Assignment({\r\n      Assignee: assignee,\r\n      RequestOrg: stage.RequestOrg,\r\n      PipelineStage: stage,\r\n      IsActive: true,\r\n      Role: roles.ActionResolver,\r\n      CustomComponent: \"APMActions\",\r\n    });\r\n\r\n    // const newApprovalAssignment = new Assignment({\r\n    //   Assignee: assignee,\r\n    //   RequestOrg: stage.RequestOrg,\r\n    //   PipelineStage: stage,\r\n    //   IsActive: true,\r\n    //   Role: roles.Approver,\r\n    // });\r\n\r\n    return [newCustomAssignment];\r\n  },\r\n  getGTM: function (request, stage) {\r\n    const assignee = request.RequestBodyBlob?.Value()?.FieldMap.GTM.get();\r\n    if (!assignee) {\r\n      throw new Error(\"Could not find stage Assignee\");\r\n    }\r\n    return [\r\n      new Assignment({\r\n        Assignee: assignee,\r\n        RequestOrg: stage.RequestOrg,\r\n        PipelineStage: stage,\r\n        IsActive: true,\r\n        Role: roles.Approver,\r\n      }),\r\n    ];\r\n  },\r\n  getCOR: function (request, stage) {\r\n    const assignee = request.RequestBodyBlob?.Value()?.FieldMap.COR.get();\r\n    if (!assignee) {\r\n      throw new Error(\"Could not find stage Assignee\");\r\n    }\r\n    return [\r\n      new Assignment({\r\n        Assignee: assignee,\r\n        RequestOrg: stage.RequestOrg,\r\n        PipelineStage: stage,\r\n        IsActive: true,\r\n        Role: roles.Approver,\r\n      }),\r\n    ];\r\n  },\r\n  getSupervisor: function (request, stage) {\r\n    return [\r\n      new Assignment({\r\n        Assignee: getPersonFromRequestBody(request, \"Supervisor\"),\r\n        RequestOrg: stage.RequestOrg,\r\n        PipelineStage: stage,\r\n        IsActive: true,\r\n        Role: roles.Approver,\r\n      }),\r\n    ];\r\n  },\r\n  getWildcard: function (request, stage, wildcard) {\r\n    return [\r\n      new Assignment({\r\n        Assignee: getPersonFromRequestBody(request, wildcard),\r\n        RequestOrg: stage.RequestOrg,\r\n        PipelineStage: stage,\r\n        IsActive: true,\r\n        Role: roles.Approver,\r\n        CustomComponent: stage.ActionComponentName,\r\n      }),\r\n    ];\r\n  },\r\n};\r\n\r\nfunction getPersonFromRequestBody(request, fieldName) {\r\n  const assignee = request.RequestBodyBlob?.Value()?.FieldMap[fieldName]?.get();\r\n  if (!assignee) {\r\n    throw new Error(\r\n      `Could not find assignee field on current request: ${fieldName}`\r\n    );\r\n  }\r\n  return assignee;\r\n}\r\n", "export const html = String.raw;\r\n\r\nexport class BaseComponent {\r\n  constructor() {}\r\n\r\n  static name = \"base-component\";\r\n  static template = html`<div>No Component Registered!</div>`;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const approvalTemplate = html`\r\n  <!-- ko if: assignment.Status == assignmentStates.InProgress -->\r\n  <div\r\n    class=\"m-1 card\"\r\n    data-bind=\"css: {'text-bg-success': assignment.Status == assignmentStates.Approved }\"\r\n  >\r\n    <div class=\"card-body\">\r\n      <h6>Your approval has been requested:</h6>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <div>\r\n            Assignee: <span data-bind=\"text: assignment.Assignee?.Title\"></span>\r\n          </div>\r\n          <div>\r\n            Request Org:\r\n            <span data-bind=\"text: assignment.RequestOrg?.Title\"></span>\r\n          </div>\r\n        </div>\r\n        <div class=\"d-flex justify-content-start\">\r\n          <button class=\"btn btn-success\" data-bind=\"click: approveHandler\">\r\n            Approve\r\n          </button>\r\n          <button class=\"ms-3 btn btn-danger\" data-bind=\"click: showReject\">\r\n            Reject\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /ko -->\r\n  <!-- ko if: assignment.Status == assignmentStates.Approved -->\r\n  <div class=\"alert alert-success\">\r\n    <strong>Thank you for approving!</strong>\r\n    <button class=\"btn btn-link\" data-bind=\"click: showReject\">\r\n      Reject Instead\r\n    </button>\r\n  </div>\r\n  <!-- /ko -->\r\n  <!-- ko if: assignment.Status == assignmentStates.Rejected -->\r\n  <div class=\"alert alert-danger\">\r\n    <strong>This request has been rejected</strong>\r\n  </div>\r\n  <!-- /ko -->\r\n  <dialog class=\"\" data-bind=\"attr: {id: rejectModalId}\">\r\n    <div class=\"d-flex flex-column justify-content-between h-100\">\r\n      <h4>Please Provide a Rejection Reason:</h4>\r\n      <div class=\"alert alert-warning mb-3\">\r\n        Note: Rejecting this request will close the record! Closed requests\r\n        cannot be re-opened!\r\n      </div>\r\n      <textarea\r\n        class=\"form-control mb-3 flex-grow-1\"\r\n        data-bind=\"textInput: RejectReason\"\r\n      ></textarea>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger me-2\"\r\n          data-bind=\"click: reject, enable: RejectReason\"\r\n        >\r\n          Reject\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n          data-bind=\"click: cancelReject\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </dialog>\r\n`;\r\n", "import { assignmentStates } from \"../../entities/Assignment.js\";\r\nimport { currentUser } from \"../../infrastructure/Authorization.js\";\r\nimport { BaseComponent } from \"../index.js\";\r\nimport { approvalTemplate } from \"./ApprovalTemplate.js\";\r\n\r\nexport class ApprovalActions extends BaseComponent {\r\n  constructor(params) {\r\n    super();\r\n    // this._context = getAppContext();\r\n    this.assignment = params.assignment;\r\n    // this.ServiceType = params.request.ServiceType;\r\n    // this.Errors = params.errors;\r\n    // this.Request = params.request;\r\n    this.completeAssignment = params.completeAssignment;\r\n  }\r\n\r\n  assignmentStates = assignmentStates;\r\n\r\n  approve = async () => {\r\n    this.completeAssignment(this.assignment, assignmentStates.Approved);\r\n  };\r\n\r\n  approveHandler = async () => {\r\n    console.log(\"approved\");\r\n    // Check if we have been directly assigned or as an action office\r\n    if (this.assignment.userIsDirectlyAssigned(currentUser())) {\r\n      this.approve();\r\n      return;\r\n    }\r\n\r\n    if (this.assignment.userIsInRequestOrg(currentUser())) {\r\n      if (\r\n        confirm(\r\n          `This approval is assigned to ${this.assignment.Assignee.Title}. Do you want to approve on their behalf? `\r\n        )\r\n      ) {\r\n        this.approve();\r\n      }\r\n      return;\r\n    }\r\n\r\n    alert(\"You are not authorized to approve this request!\");\r\n  };\r\n\r\n  rejectModalId = ko.pureComputed(() => \"reject-modal-\" + this.assignment.ID);\r\n  RejectReason = ko.observable();\r\n\r\n  reject = async () => {\r\n    console.log(\"reject\");\r\n    this.assignment.Comment = this.RejectReason();\r\n    this.completeAssignment(this.assignment, assignmentStates.Rejected);\r\n    document.getElementById(this.rejectModalId()).close();\r\n  };\r\n\r\n  showReject = () => {\r\n    const rejectModal = document.getElementById(this.rejectModalId());\r\n    if (this.assignment.userIsDirectlyAssigned(currentUser())) {\r\n      rejectModal.showModal();\r\n      return;\r\n    }\r\n\r\n    if (this.assignment.userIsInRequestOrg(currentUser())) {\r\n      if (\r\n        confirm(\r\n          `This approval is assigned to ${this.assignment.Assignee.Title}. Do you want to reject on their behalf? `\r\n        )\r\n      ) {\r\n        rejectModal.showModal();\r\n      }\r\n      return;\r\n    }\r\n\r\n    alert(\"You are not authorized to reject this request!\");\r\n  };\r\n\r\n  cancelReject = () => {\r\n    document.getElementById(this.rejectModalId()).close();\r\n  };\r\n\r\n  undo = async () => {\r\n    // TODO: Minor - We should have an undo option instead of a \"Reject Instead\"\r\n  };\r\n\r\n  static name = \"approver-actions\";\r\n  static template = approvalTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const assignTemplate = html`\r\n  <div class=\"card m-1\">\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <h6>You have been designated as an action office assigner:</h6>\r\n      </div>\r\n      <div>\r\n        Assignee: <span data-bind=\"text: assignment.Assignee?.Title\"></span>\r\n      </div>\r\n      <div>\r\n        Request Org:\r\n        <span data-bind=\"text: assignment.RequestOrg?.Title\"></span>\r\n      </div>\r\n      <!-- ko if: assignment.Status == assignmentStates.Completed -->\r\n      <div class=\"badge text-bg-success\">Complete!</div>\r\n      <!-- <div>Assignments:</div>\r\n    <table class=\"table table-sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>Assignee</th>\r\n          <th>Role</th>\r\n          <th>Stage</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody data-bind=\"foreach: NewAssignments\">\r\n        <tr>\r\n          <td data-bind=\"text: Assignee?.Title\"></td>\r\n          <td data-bind=\"text: Role\"></td>\r\n          <td data-bind=\"text: PipelineStage?.Title\"></td>\r\n        </tr>\r\n      </tbody>\r\n    </table> -->\r\n      <div>Add another assignment:</div>\r\n      <!-- /ko -->\r\n      <div\r\n        data-bind=\"component: { name: 'new-assignment', params: newAssignmentParams }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { assignmentStates } from \"../../entities/Assignment.js\";\r\nimport { roles } from \"../../infrastructure/Authorization.js\";\r\nimport { BaseComponent } from \"../index.js\";\r\nimport { assignTemplate } from \"./AssignTemplate.js\";\r\n\r\nexport class AssignModule extends BaseComponent {\r\n  constructor({ request, assignment, addAssignment, completeAssignment }) {\r\n    super();\r\n    this.allAssignments = request.Assignments.list.All;\r\n    this.assignment = assignment;\r\n    this.addAssignment = addAssignment;\r\n    this.completeAssignment = completeAssignment;\r\n    this.NextStage = request.Pipeline.getNextStage();\r\n  }\r\n  assignmentStates = assignmentStates;\r\n\r\n  // TODO: How can we show who was assigned by this request,\r\n  NewAssignments = ko.pureComputed(() => {\r\n    return this.allAssignments().filter(\r\n      (assignment) => assignment.PipelineStage.ID == this.NextStage?.ID\r\n    );\r\n  });\r\n\r\n  // TODO: how should stage be determined?\r\n  newAssignmentParams = ko.pureComputed(() => {\r\n    return {\r\n      addAssignment: async (newAssignment) => {\r\n        newAssignment.RequestOrg = this.assignment.RequestOrg;\r\n        this.addAssignment(newAssignment);\r\n        this.completeAssignment(this.assignment, assignmentStates.Completed);\r\n      },\r\n      stage: this.NextStage,\r\n    };\r\n  });\r\n  // this is the callback function we pass to the new assignments subcomponent\r\n\r\n  static name = \"assigner-actions\";\r\n  static template = assignTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const resolverTemplate = html`\r\n  <!-- ko if: assignment.Status != assignmentStates.Completed -->\r\n  <div class=\"card m-1\">\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <h6>You have been designated as an action office resolver:</h6>\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <div>\r\n            Assignee: <span data-bind=\"text: assignment.Assignee?.Title\"></span>\r\n          </div>\r\n          <div>\r\n            Request Org:\r\n            <span data-bind=\"text: assignment.RequestOrg?.Title\"></span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>Please confirm you have completed any necessary actions!</p>\r\n          <div class=\"d-flex justify-content-start\">\r\n            <button\r\n              class=\"ms-3 btn btn-success\"\r\n              data-bind=\"click: completeHandler\"\r\n            >\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /ko -->\r\n  <!-- ko if: assignment.Status == assignmentStates.Completed -->\r\n  <div class=\"alert alert-success\">\r\n    <strong>Thank you for confirming!</strong>\r\n  </div>\r\n  <!-- /ko -->\r\n`;\r\n", "import { assignmentStates } from \"../../entities/Assignment.js\";\r\nimport { currentUser } from \"../../infrastructure/Authorization.js\";\r\nimport { BaseComponent } from \"../index.js\";\r\nimport { resolverTemplate } from \"./ResolverTemplate.js\";\r\n\r\nexport class ResolverModule extends BaseComponent {\r\n  constructor(params) {\r\n    super();\r\n    console.log(\"hello from resolver module\", params);\r\n\r\n    this.assignment = params.assignment;\r\n    this.completeAssignment = params.completeAssignment;\r\n  }\r\n  assignmentStates = assignmentStates;\r\n\r\n  complete = async () => {\r\n    console.log(\"complete\");\r\n    this.completeAssignment(this.assignment, assignmentStates.Completed);\r\n  };\r\n\r\n  completeHandler = () => {\r\n    console.log(\"approved\");\r\n    // Check if we have been directly assigned or as an action office\r\n    const assignment = this.assignment;\r\n    if (assignment.userIsDirectlyAssigned(currentUser())) {\r\n      this.complete();\r\n      return;\r\n    }\r\n\r\n    if (assignment.userIsInRequestOrg(currentUser())) {\r\n      if (\r\n        confirm(\r\n          `This assignment is assigned to ${assignment.Assignee.Title}. Do you want to complete on their behalf? `\r\n        )\r\n      ) {\r\n        this.complete();\r\n      }\r\n      return;\r\n    }\r\n\r\n    alert(\"You are not authorized to approve this request!\");\r\n  };\r\n\r\n  static name = \"resolver-actions\";\r\n  static template = resolverTemplate;\r\n}\r\n", "import Entity from \"./Entity.js\";\r\nimport { html } from \"../components/index.js\";\r\n// import { ConstrainedEntityComponents } from \"../components/index.js\";\r\n/**\r\n * Constrained Entity's are validated based on their declared fields.\r\n * We are expecting user input, so need to validate each input field.\r\n */\r\n\r\nexport const defaultComponents = {\r\n  view: \"default-constrained-view\",\r\n  edit: \"default-constrained-edit\",\r\n  new: \"default-constrained-edit\",\r\n};\r\n\r\nexport class ConstrainedEntity extends Entity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  toJSON = () => {\r\n    const out = {};\r\n    Object.keys(this.FieldMap).map(\r\n      (key) => (out[key] = this.FieldMap[key]?.get())\r\n    );\r\n    return out;\r\n  };\r\n\r\n  fromJSON(inputObj) {\r\n    if (window.DEBUG)\r\n      console.log(\"Setting constrained entity from JSON\", inputObj);\r\n    Object.keys(inputObj).map((key) => this.FieldMap[key]?.set(inputObj[key]));\r\n  }\r\n\r\n  toHTMLTable = () => {\r\n    const body =\r\n      `<table><tbody>` +\r\n      Object.entries(this.FormFields)\r\n        .map(([key, value]) => {\r\n          return html`\r\n            <tr>\r\n              <td>${value?.displayName ?? key}</td>\r\n              <td>\r\n                ${value?.toString() ??\r\n                '<span style=\"font-style: italic;\">not provided</span>'}\r\n              </td>\r\n            </tr>\r\n          `;\r\n        })\r\n        .join(\"\") +\r\n      html`\r\n      </tbody></table>\r\n      `;\r\n\r\n    return body;\r\n  };\r\n\r\n  toHTMLDataList = () => {\r\n    const body =\r\n      `<dl>` +\r\n      Object.entries(this.FieldMap)\r\n        .map(([key, value]) => {\r\n          return html`\r\n            <dt>${value?.displayName ?? key}</dt>\r\n            <dd>\r\n              ${value?.toString() ??\r\n              '<span style=\"font-style: italic;\">not provided</span>'}\r\n            </dd>\r\n          `;\r\n        })\r\n        .join(\"\") +\r\n      html`\r\n      </dl>\r\n      `;\r\n\r\n    return body;\r\n  };\r\n\r\n  toHTML = () => {\r\n    const body =\r\n      `<p>` +\r\n      Object.entries(this.FieldMap)\r\n        .filter(([key, value]) => value?.Visible())\r\n        .map(([key, value]) => {\r\n          const valueKey = value?.displayName ?? key;\r\n          const valueText =\r\n            value?.toString() ??\r\n            '<span style=\"font-style: italic;\">not provided</span>';\r\n\r\n          return `${valueKey}: ${valueText}`;\r\n        })\r\n        .join(\"<br>\") +\r\n      `</p>`;\r\n\r\n    return body;\r\n  };\r\n\r\n  FormFields = ko.pureComputed(() => {\r\n    return Object.values(this.FieldMap).filter((field) => field?.Visible());\r\n  });\r\n\r\n  FormFieldKeys = ko.pureComputed(() =>\r\n    Object.keys(this.FieldMap).filter((key) => this.FieldMap[key]?.Visible())\r\n  );\r\n\r\n  validate = (showErrors = true) => {\r\n    Object.values(this.FieldMap).map(\r\n      (field) => field?.validate && field.validate(showErrors)\r\n    );\r\n    this.ShowErrors(showErrors);\r\n    return this.Errors();\r\n  };\r\n\r\n  ShowErrors = ko.observable(false);\r\n  Errors = ko.pureComputed(() => {\r\n    // if (!this.ShowErrors()) return [];\r\n\r\n    return Object.values(this.FieldMap)\r\n      .filter((field) => field?.Errors && field.Errors())\r\n      .flatMap((field) => field.Errors());\r\n  });\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  components = defaultComponents;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const constrainedEntityEditTemplate = html`\r\n  <div>\r\n    <div class=\"row mb-2 form-fields\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"col pb-3 form-field-component\"\r\n        data-bind=\"component: {\r\n        name: components.edit, params: $data}, \r\n        class: width\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const constrainedEntityViewTemplate = html`\r\n  <div>\r\n    <div class=\"row row-cols-1 row-cols-md-2\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.view, params: $data}, class: width\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { defaultComponents } from \"../../primitives/ConstrainedEntity.js\";\r\nimport { BaseComponent } from \"../BaseComponent.js\";\r\nimport { constrainedEntityEditTemplate } from \"./DefaultEdit.js\";\r\nimport { constrainedEntityViewTemplate } from \"./DefaultView.js\";\r\n\r\nclass ConstrainedEntityBaseModule extends BaseComponent {\r\n  constructor({ Entity }) {\r\n    super();\r\n    Object.assign(this, Entity);\r\n  }\r\n}\r\n\r\nexport class ConstrainedEntityViewModule extends ConstrainedEntityBaseModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = defaultComponents.view;\r\n  static template = constrainedEntityViewTemplate;\r\n}\r\n\r\nexport class ConstrainedEntityEditModule extends ConstrainedEntityBaseModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = defaultComponents.edit;\r\n  static template = constrainedEntityEditTemplate;\r\n}\r\n", "import { RequestOrg } from \"./RequestOrg.js\";\r\n\r\nexport const stageActionTypes = {\r\n  PendingAssignment: \"Pending Assignment\",\r\n  PendingApproval: \"Pending Approval\",\r\n  PendingAction: \"Pending Action\",\r\n  PendingResolution: \"Pending Resolution\",\r\n  Notification: \"Notification\",\r\n  Closed: \"Closed\",\r\n};\r\n\r\nexport class PipelineStage {\r\n  constructor({ ID, Title }) {\r\n    this.ID = ID;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n  }\r\n\r\n  static Create = function ({ ID, LookupValue }) {\r\n    return new PipelineStage({ ID, Title: LookupValue });\r\n  };\r\n\r\n  static FindInStore = function (props) {\r\n    if (!props || !props.ID) return null;\r\n    return pipelineStageStore().find((stage) => stage.ID == props.ID);\r\n  };\r\n\r\n  static GetCompletedStage = function () {\r\n    return pipelineStageStore().find(\r\n      (stage) => stage.ActionType == stageActionTypes.Closed\r\n    );\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ServiceType\",\r\n      \"Step\",\r\n      \"ActionType\",\r\n      \"ActionTargetStage\",\r\n      \"Assignee\",\r\n      \"WildCardAssignee\",\r\n      \"RequestOrg\",\r\n      \"AssignmentFunction\",\r\n      \"ActionComponentName\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"ConfigPipelines\",\r\n    title: \"ConfigPipelines\",\r\n    fields: PipelineStage.Views.All,\r\n  };\r\n}\r\n\r\nexport const pipelineStageStore = ko.observableArray();\r\n", "import { PipelineStage } from \"./PipelineStage.js\";\r\n\r\nexport const actionTypes = {\r\n  Paused: \"Paused\",\r\n  Resumed: \"Resumed\",\r\n  Assigned: \"Assigned\",\r\n  Unassigned: \"Unassigned\",\r\n  Created: \"Created\",\r\n  Advanced: \"Advanced\",\r\n  Approved: \"Approved\",\r\n  Completed: \"Completed\",\r\n  Rejected: \"Rejected\",\r\n  Closed: \"Closed\",\r\n};\r\n\r\nexport class Action {\r\n  constructor() {}\r\n\r\n  PipelineStage;\r\n  //   FieldMap = {\r\n  //     Description: {\r\n  //       get: () => encodeURIComponent(this.Description),\r\n  //       set: (val) => (this.Description = decodeURIComponent(val)),\r\n  //     },\r\n  //   };\r\n\r\n  FieldMap = {\r\n    PipelineStage: {\r\n      get: () => this.PipelineStage,\r\n      set: (val) => {\r\n        this.PipelineStage = PipelineStage.FindInStore(val);\r\n      },\r\n    },\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"PipelineStage\",\r\n      \"ActionType\",\r\n      \"Description\",\r\n      \"Author\",\r\n      \"Created\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Actions\",\r\n    title: \"Actions\",\r\n    fields: this.Views.All,\r\n  };\r\n}\r\n", "export class Attachment {\r\n  constructor() {}\r\n\r\n  static Views = {\r\n    // All: [\"Title\", \"IsActive\"],\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"IsActive\",\r\n      \"Request\",\r\n      \"FileLeafRef\",\r\n      \"FileRef\",\r\n      \"Author\",\r\n      \"Created\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Attachments\",\r\n    title: \"Attachments\",\r\n    fields: this.Views.All,\r\n    isLib: true,\r\n  };\r\n}\r\n", "export class Comment {\r\n  constructor() {}\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"Comment\",\r\n      \"NotificationSent\",\r\n      \"Author\",\r\n      \"IsActive\",\r\n      \"Created\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Comments\",\r\n    title: \"Comments\",\r\n    fields: this.Views.All,\r\n  };\r\n}\r\n", "export const holidayStore = ko.observable();\r\n\r\nexport class Holiday {\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Date\", \"Repeating\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"ConfigHolidays\",\r\n    title: \"ConfigHolidays\",\r\n    fields: Holiday.Views.All,\r\n  };\r\n}\r\n", "import { ValidationError } from \"../primitives/ValidationError.js\";\r\n\r\nexport class BaseField {\r\n  constructor({\r\n    displayName,\r\n    instructions = null,\r\n    isRequired = false,\r\n    width,\r\n    Visible = ko.pureComputed(() => true),\r\n  }) {\r\n    this.displayName = displayName;\r\n    this.instructions = instructions;\r\n    this.isRequired = isRequired;\r\n    this.Visible = Visible;\r\n    this.width = width ? \"col-md-\" + width : \"col-md-6\";\r\n\r\n    this.addFieldRequirement(isRequiredValidationRequirement(this));\r\n  }\r\n\r\n  Value = ko.observable();\r\n\r\n  get = () => this.Value();\r\n  set = (val) => this.Value(val);\r\n\r\n  toString = ko.pureComputed(() => this.Value());\r\n\r\n  toJSON = () => this.Value();\r\n  fromJSON = (val) => this.Value(val);\r\n\r\n  validate = (showErrors = true) => {\r\n    this.ShowErrors(showErrors);\r\n    return this.Errors();\r\n  };\r\n\r\n  _fieldValidationRequirements = ko.observableArray();\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.Visible()) return [];\r\n    const errors = this._fieldValidationRequirements()\r\n      .filter((req) => req.requirement())\r\n      .map((req) => req.error);\r\n\r\n    return errors;\r\n  });\r\n\r\n  addFieldRequirement = (requirement) =>\r\n    this._fieldValidationRequirements.push(requirement);\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n}\r\n\r\nfunction isRequiredValidationRequirement(field) {\r\n  return {\r\n    requirement: ko.pureComputed(() => {\r\n      // Return true if field fails validation\r\n      const isRequired = ko.unwrap(field.isRequired);\r\n      if (!isRequired) return false;\r\n\r\n      const value = ko.unwrap(field.Value);\r\n      if (value?.constructor == Array) return !value.length;\r\n      return value === null || value === undefined;\r\n    }),\r\n    error: new ValidationError(\r\n      \"text-field\",\r\n      \"required-field\",\r\n      `${ko.utils.unwrapObservable(field.displayName)} is required!`\r\n    ),\r\n  };\r\n}\r\n", "export const requestStates = {\r\n  draft: \"Draft\",\r\n  open: \"Open\",\r\n  paused: \"Paused\",\r\n  fulfilled: \"Completed\",\r\n  cancelled: \"Cancelled\",\r\n  rejected: \"Rejected\",\r\n};\r\n\r\nexport const requestInternalStates = {\r\n  inProgress: \"In Progress\",\r\n  waitingOnCustomer: \"Waiting on Customer\",\r\n  researching: \"Researching\",\r\n};\r\n", "import { Action, actionTypes } from \"../entities/Action.js\";\r\nimport { getAppContext } from \"../infrastructure/ApplicationDbContext.js\";\r\n\r\nexport class ActivityLogComponent {\r\n  constructor({ addNew, refresh, list, AreLoading }, activityQueue) {\r\n    activityQueue.subscribeAdded(this.activityQueueWatcher);\r\n    this.addNew = addNew;\r\n    this.refresh = refresh;\r\n    this.Actions = list.All;\r\n    this.AreLoading = AreLoading;\r\n  }\r\n\r\n  activityQueueWatcher = (activities) => {\r\n    // const activities = changes\r\n    //   .filter((change) => change.status == \"added\")\r\n    //   .map((change) => change.value);\r\n\r\n    activities.map(({ activity, data }) => {\r\n      if (this.actionTypeFunctionMap[activity]) {\r\n        this.actionTypeFunctionMap[activity](data);\r\n      }\r\n    });\r\n  };\r\n\r\n  actionTypeFunctionMap = {\r\n    Assigned: this.assignmentAdded.bind(this),\r\n    Unassigned: this.assignmentRemoved.bind(this),\r\n    Created: this.requestCreated.bind(this),\r\n    Advanced: this.requestAdvanced.bind(this),\r\n    Approved: this.requestApproved.bind(this),\r\n    Rejected: this.requestRejected.bind(this),\r\n    Paused: this.requestPaused.bind(this),\r\n    Resumed: this.requestResumed.bind(this),\r\n    Closed: this.requestClosed.bind(this),\r\n  };\r\n\r\n  async requestCreated(request) {\r\n    this.addNew({\r\n      ActionType: actionTypes.Created,\r\n      Description: `The request was submitted with an effective submission date of ${request.Dates.Submitted.toLocaleDateString()}.`,\r\n    });\r\n  }\r\n\r\n  async requestAdvanced(stage) {\r\n    this.addNew({\r\n      ActionType: actionTypes.Advanced,\r\n      Description: `The request was advanced to stage ${stage.Step}: ${stage.Title}.`,\r\n    });\r\n  }\r\n\r\n  requestPaused(reason) {\r\n    this.addNew({\r\n      ActionType: actionTypes.Paused,\r\n      Description: reason,\r\n    });\r\n  }\r\n\r\n  requestResumed() {\r\n    this.addNew({\r\n      ActionType: actionTypes.Resumed,\r\n      Description: \"Request clock has been resumed\",\r\n    });\r\n  }\r\n\r\n  async requestClosed(request) {\r\n    this.addNew({\r\n      ActionType: actionTypes.Closed,\r\n      Description: `The request was closed with a status of ${request.State.Status()}.`,\r\n    });\r\n  }\r\n\r\n  async assignmentCompleted(assignment) {\r\n    let actionDescription = `${assignment.ActionTaker.Title} has ${assignment.Status} an assignment.`;\r\n    this.addNew({\r\n      ActionType: assignment.Status,\r\n      Description: actionDescription,\r\n    });\r\n  }\r\n\r\n  async requestApproved(assignment) {\r\n    let actionDescription = `${assignment.ActionTaker.Title} has ${assignment.Status} an assignment.`;\r\n    this.addNew({\r\n      ActionType: actionTypes.Approved,\r\n      Description: actionDescription,\r\n    });\r\n  }\r\n\r\n  async requestRejected(assignment) {\r\n    let actionDescription =\r\n      `${assignment.ActionTaker.Title} has rejected the request and provided the following reason:<br/>` +\r\n      assignment.Comment;\r\n    this.addNew({\r\n      ActionType: actionTypes.Rejected,\r\n      Description: actionDescription,\r\n    });\r\n  }\r\n\r\n  async assignmentAdded(assignment) {\r\n    let actionDescription = `The following ${assignment.Role.LookupValue}s have been assigned to this request:<br>`;\r\n    if (assignment.Assignee?.Title) {\r\n      actionDescription += `${assignment.Assignee.Title} - `;\r\n    }\r\n    actionDescription += assignment.RequestOrg?.Title;\r\n\r\n    this.addNew({\r\n      ActionType: actionTypes.Assigned,\r\n      Description: actionDescription,\r\n    });\r\n  }\r\n\r\n  async assignmentRemoved(assignment) {\r\n    let actionDescription = `The following ${\r\n      assignment.Role.LookupValue ?? assignment.Role\r\n    }s have been removed from this request:<br>`;\r\n    if (assignment.Assignee?.Title) {\r\n      actionDescription += `${assignment.Assignee.Title} - `;\r\n    }\r\n    actionDescription += assignment.RequestOrg?.Title;\r\n\r\n    this.addNew({\r\n      ActionType: actionTypes.Unassigned,\r\n      Description: actionDescription,\r\n    });\r\n  }\r\n}\r\n", "export const sortByTitle = (a, b) => {\r\n  if (a.Title > b.Title) {\r\n    return 1;\r\n  }\r\n  if (a.Title < b.Title) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const sortByField = (field) => (a, b) => {\r\n  if (a[field] > b[field]) {\r\n    return 1;\r\n  }\r\n  if (a[field] < b[field]) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const createNewRequestTitle = () => {\r\n  const ts = new Date();\r\n  return ts.format(\"yyMMdd\") + \"-\" + (ts.getTime() % 100000);\r\n};\r\n", "import { holidayStore } from \"../entities/Holiday.js\";\r\n\r\nexport function calculateEffectiveSubmissionDate(submissionDate = null) {\r\n  // Check the submitted date, if it's between 3 pm, (19 UTC) and midnight (4 UTC)\r\n  // it needs to be set as submitted the next business day\r\n  const now = submissionDate ? submissionDate : new Date();\r\n  if (now.getUTCHours() >= 19 || now.getUTCHours() < 4) {\r\n    console.log(\"its after 3, this is submitted tomorrow\");\r\n    const tomorrow = businessDaysFromDate(now, 1);\r\n    tomorrow.setUTCHours(13);\r\n    tomorrow.setUTCMinutes(0);\r\n    return tomorrow;\r\n  } else {\r\n    return now;\r\n  }\r\n}\r\n\r\n/* Business days start at 0, i.e. a workorder opened and closed\r\n on the same day will result in 0 days passed\r\n */\r\nexport function businessDaysFromDate(date, businessDays) {\r\n  var counter = 0,\r\n    tmp = new Date(date);\r\n  var dayCnt = Math.abs(businessDays);\r\n\r\n  var sign = Math.sign(businessDays);\r\n\r\n  while (dayCnt >= 0) {\r\n    tmp.setTime(date.getTime() + sign * counter * 86400000);\r\n    if (isBusinessDay(tmp) && !isConfigHoliday(tmp)) {\r\n      --dayCnt;\r\n    }\r\n    ++counter;\r\n  }\r\n  return tmp;\r\n}\r\n\r\nexport function calculateBusinessDays(startDate, endDate) {\r\n  var counter = 0;\r\n  var temp = new Date(startDate);\r\n  var stepDir = Math.sign(endDate - startDate);\r\n\r\n  while (temp.format(\"yyyy-MM-dd\") != endDate.format(\"yyyy-MM-dd\")) {\r\n    if (isBusinessDay(temp) && !isConfigHoliday(temp)) {\r\n      counter++;\r\n    }\r\n    temp.setDate(temp.getDate() + 1 * stepDir);\r\n  }\r\n  return counter * stepDir;\r\n}\r\n\r\nfunction isConfigHoliday(date) {\r\n  var isHoliday = holidayStore().find(function (hol) {\r\n    var day = hol.Date.getUTCDate() == date.getUTCDate();\r\n    var month = hol.Date.getUTCMonth() == date.getUTCMonth();\r\n    var year = hol.Date.getUTCFullYear() == date.getUTCFullYear();\r\n\r\n    if (hol.Repeating) {\r\n      year = true;\r\n    }\r\n    return day && month && year;\r\n  });\r\n\r\n  return isHoliday;\r\n}\r\n\r\nfunction isBusinessDay(date) {\r\n  var dayOfWeek = date.getDay();\r\n  if (dayOfWeek === 0 || dayOfWeek === 6) {\r\n    // Weekend\r\n    return false;\r\n  }\r\n\r\n  const holidays = [\r\n    \"12/31+5\", // New Year's Day on a saturday celebrated on previous friday\r\n    \"1/1\", // New Year's Day\r\n    \"1/2+1\", // New Year's Day on a sunday celebrated on next monday\r\n    \"1-3/1\", // Birthday of Martin Luther King, third Monday in January\r\n    \"2-3/1\", // Washington's Birthday, third Monday in February\r\n    \"5~1/1\", // Memorial Day, last Monday in May\r\n    \"7/3+5\", // Independence Day\r\n    \"7/4\", // Independence Day\r\n    \"7/5+1\", // Independence Day\r\n    \"9-1/1\", // Labor Day, first Monday in September\r\n    \"10-2/1\", // Columbus Day, second Monday in October\r\n    \"11/10+5\", // Veterans Day\r\n    \"11/11\", // Veterans Day\r\n    \"11/12+1\", // Veterans Day\r\n    \"11-4/4\", // Thanksgiving Day, fourth Thursday in November\r\n    \"12/24+5\", // Christmas Day\r\n    \"12/25\", // Christmas Day\r\n    \"12/26+1\", // Christmas Day\r\n  ];\r\n\r\n  var dayOfMonth = date.getDate(),\r\n    month = date.getMonth() + 1,\r\n    monthDay = month + \"/\" + dayOfMonth;\r\n\r\n  if (holidays.indexOf(monthDay) > -1) {\r\n    return false;\r\n  }\r\n\r\n  var monthDayDay = monthDay + \"+\" + dayOfWeek;\r\n  if (holidays.indexOf(monthDayDay) > -1) {\r\n    return false;\r\n  }\r\n\r\n  var weekOfMonth = Math.floor((dayOfMonth - 1) / 7) + 1,\r\n    monthWeekDay = month + \"-\" + weekOfMonth + \"/\" + dayOfWeek;\r\n  if (holidays.indexOf(monthWeekDay) > -1) {\r\n    return false;\r\n  }\r\n\r\n  var lastDayOfMonth = new Date(date);\r\n  lastDayOfMonth.setMonth(lastDayOfMonth.getMonth() + 1);\r\n  lastDayOfMonth.setDate(0);\r\n  var negWeekOfMonth =\r\n      Math.floor((lastDayOfMonth.getDate() - dayOfMonth - 1) / 7) + 1,\r\n    monthNegWeekDay = month + \"~\" + negWeekOfMonth + \"/\" + dayOfWeek;\r\n  if (holidays.indexOf(monthNegWeekDay) > -1) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n", "import { webRoot } from \"../infrastructure/SAL.js\";\r\nexport const appRoot = webRoot;\r\n\r\nconst state = {};\r\n\r\nwindow.history.replaceState({}, \"\", document.location.href);\r\nexport function setUrlParam(param, newVal) {\r\n  // No need to reset the param if it hasn't changed\r\n  if (getUrlParam(param) == newVal) return;\r\n\r\n  const search = window.location.search;\r\n  //var urlParams = new URLSearchParams(queryString);\r\n\r\n  const regex = new RegExp(\"([?;&])\" + param + \"[^&;]*[;&]?\");\r\n  const query = search.replace(regex, \"$1\").replace(/&$/, \"\");\r\n\r\n  const urlParams =\r\n    (query.length > 2 ? query + \"&\" : \"?\") +\r\n    (newVal ? param + \"=\" + newVal : \"\");\r\n\r\n  state[param] = newVal;\r\n  window.history.pushState(state, \"\", urlParams.toString());\r\n}\r\n\r\nexport function getUrlParam(param) {\r\n  const results = new RegExp(\"[?&]\" + param + \"=([^&#]*)\").exec(\r\n    window.location.href\r\n  );\r\n  if (results == null) {\r\n    return null;\r\n  } else {\r\n    return decodeURI(results[1]) || 0;\r\n  }\r\n}\r\n", "const taskStates = {\r\n  pending: \"Pending\",\r\n  aging: \"Aging\",\r\n  completed: \"Completed\",\r\n};\r\n\r\nexport class Task {\r\n  constructor({ msg, blocking }) {\r\n    this.msg = msg;\r\n    this.blocking = blocking;\r\n    this.Status(taskStates.pending);\r\n\r\n    this.timeout = this.setTimeout();\r\n  }\r\n\r\n  msg;\r\n  blocking;\r\n  Status = ko.observable();\r\n  timeout;\r\n\r\n  timeoutPeriod = 5000;\r\n\r\n  setTimeout = () =>\r\n    window.setTimeout(() => {\r\n      console.warn(\"this task is aging:\", this);\r\n      this.Status(taskStates.aging);\r\n    }, this.timeoutPeriod);\r\n\r\n  resetTimeout = () => {\r\n    window.clearTimeout(this.timeout);\r\n    this.timeout = this.setTimeout();\r\n  };\r\n\r\n  markComplete = () => {\r\n    window.clearTimeout(this.timeout);\r\n    this.Status(taskStates.completed);\r\n  };\r\n\r\n  // Should this task block user input?\r\n  IsBlocking = ko.pureComputed(\r\n    () => this.blocking && this.Status() != taskStates.completed\r\n  );\r\n}\r\n\r\nexport class ProgressTask extends Task {\r\n  constructor({ msg, blocking }) {\r\n    super({ msg, blocking });\r\n  }\r\n\r\n  timeoutPeriod = 8000;\r\n\r\n  updateProgress = ({ percentDone }) => {\r\n    this.Status(`${parseInt(percentDone * 100)}%`);\r\n  };\r\n}\r\n", "import { ProgressTask, Task } from \"../primitives/Task.js\";\r\n\r\nexport const runningTasks = ko.observableArray();\r\n\r\nexport const blockingTasks = ko.pureComputed(() => {\r\n  return runningTasks().filter((task) => task.IsBlocking()) ?? [];\r\n});\r\n\r\nexport const taskDefs = {\r\n  init: { msg: \"Initializing the Application\", blocking: true },\r\n  save: { msg: \"Saving Request\", blocking: true },\r\n  cancelAction: { msg: \"Cancelling Action\", blocking: true },\r\n  view: { msg: \"Viewing Request\", blocking: false },\r\n  refresh: { msg: \"Refreshing Request\", blocking: false },\r\n  permissions: { msg: \"Updating Request Item Permissions\", blocking: true },\r\n  lock: { msg: \"Locking Request\", blocking: true },\r\n  closing: { msg: \"Closing Request\", blocking: true },\r\n  pipeline: { msg: \"Progressing to Next Stage\", blocking: true },\r\n  newComment: { msg: \"Submitting Comment\", blocking: false },\r\n  refreshComments: { msg: \"Refreshing Comments\", blocking: false },\r\n  notifyComment: { msg: \"Sending Comment Email\", blocking: false },\r\n  removeComment: { msg: \"Removing Comment\", blocking: false },\r\n  newAction: { msg: \"Submitting Action\", blocking: false },\r\n  refreshActions: { msg: \"Refreshing Actions\", blocking: false },\r\n  newAttachment: { msg: \"Submitting Attachment\", blocking: false },\r\n  uploadAttachment: (fileName) => {\r\n    return {\r\n      msg: `Uploading Attachment: ` + fileName,\r\n      blocking: true,\r\n      type: ProgressTask,\r\n    };\r\n  },\r\n  refreshAttachments: { msg: \"Refreshing Attachments\", blocking: false },\r\n  copyAttachment: (fileName) => {\r\n    return {\r\n      msg: \"Copying attachment: \" + fileName,\r\n      blocking: true,\r\n    };\r\n  },\r\n  newNotification: { msg: \"Submitting Notification\", blocking: true },\r\n  approve: { msg: \"Approving Request\", blocking: true },\r\n};\r\n\r\nexport const addTask = (taskDef) => {\r\n  const newTask = taskDef.type ? new taskDef.type(taskDef) : new Task(taskDef);\r\n\r\n  runningTasks.push(newTask);\r\n  return newTask;\r\n};\r\n\r\nexport const finishTask = function (activeTask) {\r\n  if (activeTask) {\r\n    activeTask.markComplete();\r\n    window.setTimeout(() => removeTask(activeTask), 3000);\r\n    // runningTasks.remove(activeTask);\r\n  }\r\n};\r\n\r\nconst removeTask = function (taskToRemove) {\r\n  runningTasks.remove(taskToRemove);\r\n};\r\n", "export const Tabs = {\r\n  MyRequests: \"my-requests-tab\",\r\n  NewRequest: \"new-request-tab\",\r\n  RequestDetail: \"request-detail-tab\",\r\n};\r\n\r\nexport const assetsPath = \"/sites/CGFS/Style Library/apps/wo/src\";\r\n\r\nexport const siteTitle = _spPageContextInfo.webTitle;\r\n", "import {\r\n  currentUser,\r\n  ensurePerson,\r\n  getUsersByGroupName,\r\n} from \"./Authorization.js\";\r\nimport { getAppContext } from \"./ApplicationDbContext.js\";\r\nimport {\r\n  RequestOrg,\r\n  Notification,\r\n  People,\r\n  assignmentRoles,\r\n} from \"../entities/index.js\";\r\nimport { addTask, finishTask, taskDefs } from \"../stores/Tasks.js\";\r\n\r\nimport { siteTitle } from \"../env.js\";\r\n\r\nconst html = String.raw;\r\n\r\nconst requestActionTypeFunctionMap = {\r\n  Created: requestCreatedNotification,\r\n  Advanced: requestAdvancedNotification,\r\n  Assigned: requestAssignedNotification,\r\n  Closed: requestClosedNotification,\r\n};\r\n\r\nexport function createRequestDetailNotification({ request }) {\r\n  const notification = new Notification();\r\n\r\n  const reqPairs = [\r\n    `Request ID: ${request.Title}`,\r\n    `Submitted On: ${request.Dates.Submitted.toString()}`,\r\n    `Requestor Info:`,\r\n    `${request.RequestorInfo.Requestor()?.Title}`,\r\n    `${request.RequestorInfo.Phone()}`,\r\n    `${request.RequestorInfo.Email()}`,\r\n    `${request.RequestorInfo.OfficeSymbol.toString()}`,\r\n  ];\r\n\r\n  const requestHeaderHtml = `<p>${reqPairs.join(`<br>`)}</p>`;\r\n\r\n  const requestBodyHtml = request.RequestBodyBlob?.Value()?.toHTML();\r\n\r\n  const requestDescHtml = html`\r\n    <p>\r\n      ${ko.unwrap(request.RequestDescription.displayName)}:<br />\r\n      ${request.RequestDescription.Value()}\r\n    </p>\r\n  `;\r\n\r\n  // Temp for testing\r\n\r\n  // notification.ToString.Value(\"backlkupf@test\");\r\n  const user = currentUser();\r\n  if (user?.Email) notification.CCString.Value(user.Email + \";\");\r\n\r\n  // notification.Title.Value(\"A test notifciation\");\r\n\r\n  notification.Body.Value(\r\n    [requestHeaderHtml, requestBodyHtml, requestDescHtml].join(`<br>`)\r\n  );\r\n\r\n  return notification;\r\n}\r\n\r\nexport async function emitCommentNotification(comment, request) {\r\n  const toArray = [request.RequestorInfo.Requestor(), currentUser()];\r\n  const ccArray = [];\r\n  request.Assignments.list\r\n    .All()\r\n    .filter((asg) => asg.PipelineStage?.ID == request.Pipeline.Stage()?.ID)\r\n    .map((asg) => {\r\n      if (asg.Assignee?.LoginName) toArray.push(asg.Assignee);\r\n      ccArray.push(asg.RequestOrg);\r\n    });\r\n\r\n  const notification = Notification.Create({\r\n    To: await arrEntityToEmailString(toArray),\r\n    CC: await arrEntityToEmailString(ccArray),\r\n    Request: request,\r\n    Title: formatNotificationTitle(request, \"New Comment\"),\r\n    Body: `${\r\n      currentUser().Title\r\n    } has left a new comment on ${request.getAppLinkElement()}:<br/><br/>`,\r\n  });\r\n\r\n  await submitNotification(notification, request.getRelativeFolderPath());\r\n}\r\n\r\nexport function emitRequestNotification(request, action) {\r\n  // Entry point for request based notifications\r\n  if (window.DEBUG) {\r\n    console.log(\"Sending Notification: \", action);\r\n    console.log(\"for request: \", request);\r\n  }\r\n  if (requestActionTypeFunctionMap[action.activity]) {\r\n    requestActionTypeFunctionMap[action.activity](request, action);\r\n  }\r\n}\r\n\r\nasync function requestCreatedNotification(request) {\r\n  // Notification sent to the user/requestor\r\n  if (window.DEBUG)\r\n    console.log(\"Sending Request Created Notification for: \", request);\r\n\r\n  const context = getAppContext();\r\n\r\n  const actionOffices = [\r\n    ...new Set(\r\n      request.Pipeline.RequestOrgs()?.map((requestOrg) => requestOrg.Title)\r\n    ),\r\n  ];\r\n\r\n  let actionOfficeLiString = \"\";\r\n  actionOffices.forEach((office) => {\r\n    actionOfficeLiString += `<li>${office}</li>`;\r\n  });\r\n\r\n  const submitterEmails = [request.RequestorInfo.Requestor(), currentUser()];\r\n  const submitterTo = await arrEntityToEmailString(submitterEmails);\r\n\r\n  const submitterNotification = Notification.Create({\r\n    To: submitterTo,\r\n    Title: formatNotificationTitle(request, `New`),\r\n    Body:\r\n      `<p>Your ${request.RequestType.Title} request has been successfully submitted.</p>` +\r\n      `<p>${request.getAppLinkElement()}</p>` +\r\n      \"<p>Estimated days to close this request type: \" +\r\n      request.RequestType.DaysToCloseBusiness +\r\n      \"</p>\" +\r\n      \"<p>This request will be serviced by:</br><ul>\" +\r\n      actionOfficeLiString +\r\n      \"</ul></p>\" +\r\n      \"<p>To view the request, please click the link above, or copy and paste the below URL into your browser:</br>\" +\r\n      request.getAppLink(),\r\n    Request: request,\r\n  });\r\n\r\n  await submitNotification(\r\n    submitterNotification,\r\n    request.getRelativeFolderPath()\r\n  );\r\n\r\n  // Notification Sent to Action Offices to let them know an item's been submitted\r\n  const pipelineOrgs = request.Pipeline.RequestOrgs()?.map((requestOrg) =>\r\n    RequestOrg.FindInStore(requestOrg)\r\n  );\r\n\r\n  const to = await arrEntityToEmailString(pipelineOrgs);\r\n\r\n  const requestOrgNotification = Notification.Create({\r\n    To: to,\r\n    Title: formatNotificationTitle(request, `New`),\r\n    Body:\r\n      \"<p>Greetings Colleagues,<br><br> A new service request has been opened requiring your attention:<br>\" +\r\n      request.getAppLinkElement() +\r\n      \"</p>\" +\r\n      \"<p>Estimated days to close this request type: \" +\r\n      request.RequestType.DaysToCloseBusiness +\r\n      \"</p>\" +\r\n      \"<p>This request will be serviced by:</br><ul>\" +\r\n      actionOfficeLiString +\r\n      \"</ul></p>\" +\r\n      \"<p>To view the request, please click the link above, or copy and paste the below URL into your browser:</br>\" +\r\n      request.getAppLink(),\r\n    Request: request,\r\n  });\r\n\r\n  await submitNotification(\r\n    requestOrgNotification,\r\n    request.getRelativeFolderPath()\r\n  );\r\n}\r\n\r\nfunction requestAdvancedNotification(request) {\r\n  if (window.DEBUG)\r\n    console.log(\"Sending Request Advanced Notification for: \", request);\r\n}\r\n\r\nasync function requestAssignedNotification(request, action) {\r\n  if (window.DEBUG)\r\n    console.log(\"Sending Request Assigned Notification for: \", request);\r\n  if (window.DEBUG) console.log(action);\r\n  const role = action.data?.Role?.LookupValue;\r\n  let roleBasedMessage = \"\";\r\n  switch (role) {\r\n    case assignmentRoles.Subscriber:\r\n    case assignmentRoles.Viewer:\r\n      roleBasedMessage =\r\n        \"<p>This notification was generated for information purposes only. You have no pending actions on this request.</p>\";\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const assignedNotification = Notification.Create({\r\n    Title: formatNotificationTitle(request, \"Assigned\"),\r\n    Body:\r\n      `<p>Greetings Colleagues,<br><br>You have been assigned the role of\\\r\n       <strong>${role}</strong> on the following\\\r\n       request:<br>` +\r\n      request.getAppLinkElement() +\r\n      \"</p>\" +\r\n      roleBasedMessage +\r\n      \"<p>To view the request, please click the link above,\\\r\n       or copy and paste the below URL into your browser: <br> \" +\r\n      request.getAppLink() +\r\n      \"</p>\",\r\n    Request: request,\r\n  });\r\n\r\n  // Only send to assignee if they are different than the Request Org\r\n  const assignee = new People(action.data?.Assignee);\r\n  const assignedReqOrg = RequestOrg.FindInStore(action.data?.RequestOrg);\r\n  if (assignee?.ID != assignedReqOrg?.UserGroup.ID) {\r\n    const to = await peopleToEmailString(assignee);\r\n    assignedNotification.ToString.Value(to);\r\n    const cc = await reqOrgToEmailString(assignedReqOrg);\r\n    assignedNotification.CCString.Value(cc);\r\n  } else {\r\n    const to = await reqOrgToEmailString(assignedReqOrg);\r\n    assignedNotification.ToString.Value(to);\r\n  }\r\n\r\n  const context = getAppContext();\r\n\r\n  await context.Notifications.AddEntity(\r\n    assignedNotification,\r\n    request.getRelativeFolderPath()\r\n  );\r\n}\r\n\r\nasync function requestClosedNotification(request, action) {\r\n  // TODO: Medium - CC the action offices\r\n  if (window.DEBUG)\r\n    console.log(\"Sending Request Closed Notification for: \", request);\r\n\r\n  const to = await arrEntityToEmailString([request.RequestorInfo.Requestor()]);\r\n\r\n  const closedNotification = Notification.Create({\r\n    To: to,\r\n    Title: formatNotificationTitle(request, \"Closed \" + request.State.Status()),\r\n    Body:\r\n      `<p>Greetings Colleagues,<br><br>The following request has been ${request.State.Status()}:<br>` +\r\n      request.getAppLinkElement() +\r\n      \"</p>\" +\r\n      \"<p>This request cannot be re-opened.</p>\",\r\n    Request: request,\r\n  });\r\n  await submitNotification(closedNotification, request.getRelativeFolderPath());\r\n}\r\n\r\nexport async function submitNotification(\r\n  notification,\r\n  relFolderPath,\r\n  attachments = null\r\n) {\r\n  const context = getAppContext();\r\n\r\n  const newNotificationTask = addTask(taskDefs.newNotification);\r\n  await context.Notifications.AddEntity(notification, relFolderPath);\r\n\r\n  // await context.Notifications.LoadEntity(notification);\r\n\r\n  if (attachments) {\r\n    await Promise.all(\r\n      attachments.map(async (attachment) => {\r\n        const copyAttachmentTask = addTask(\r\n          taskDefs.copyAttachment(attachment.FileLeafRef)\r\n        );\r\n        await context.Notifications.CopyAttachmentFromPath(\r\n          attachment.FileRef,\r\n          notification\r\n        );\r\n        finishTask(copyAttachmentTask);\r\n      })\r\n    );\r\n  }\r\n  finishTask(newNotificationTask);\r\n\r\n  return true;\r\n}\r\n\r\nasync function arrEntityToEmailString(arr) {\r\n  // Take an array or request orgs and people, and return to an email string;\r\n  const emailStrings = await Promise.all(\r\n    arr.map(async (entity) => {\r\n      if (entity.OrgType) return reqOrgToEmailString(entity);\r\n      return peopleToEmailString(entity);\r\n    })\r\n  );\r\n\r\n  return emailStrings.filter((val) => val).join(\"; \");\r\n}\r\n\r\nasync function reqOrgToEmailString(entity) {\r\n  // entity is request org and has preferred email\r\n  if (entity.PreferredEmail) return entity.PreferredEmail;\r\n\r\n  // entity is request org and has Usergroup\r\n  if (entity.UserGroup) {\r\n    const group = entity.FieldMap.UserGroup.get();\r\n    return getUserEmailsByGroupTitle(group.Title);\r\n  }\r\n}\r\n\r\nasync function peopleToEmailString(person) {\r\n  if (!person.IsEnsured) {\r\n    person = await ensurePerson(person);\r\n    if (!person) return;\r\n  }\r\n\r\n  if (person.IsGroup) return getUserEmailsByGroupTitle(person.Title);\r\n\r\n  return person.Email;\r\n}\r\n\r\nasync function getUserEmailsByGroupTitle(title) {\r\n  const users = await getUsersByGroupName(title);\r\n  return users\r\n    .filter((u) => u.Email)\r\n    .map((u) => u.Email)\r\n    .join(\";\");\r\n}\r\n\r\n/**\r\n * Takes a Person, Group, or Request Org array of entities and returns the Group\r\n * if they don't have a  PreferredEmail attribute\r\n * @param {Entity[]} entityArr\r\n * @returns {People[]}\r\n */\r\nfunction entityPeopleMapper(entityArr) {\r\n  return entityArr\r\n    ?.filter((entity) => !entity.PreferredEmail)\r\n    ?.map((entity) => {\r\n      if (entity.UserGroup) return entity.UserGroup;\r\n\r\n      if (entity.OrgType) {\r\n        console.warn(\"Trying to email RequestOrg!\");\r\n        return;\r\n      }\r\n\r\n      return entity;\r\n    });\r\n}\r\n\r\n/**\r\n * Take a Person or Request Org array and returns an appropriately delimited string\r\n * @param {Entity[]} entityArr\r\n * @returns {string}\r\n */\r\nfunction emailStringMapper(entityArr) {\r\n  //\r\n  return entityArr\r\n    ?.filter((entity) => entity.PreferredEmail)\r\n    ?.map((entity) => entity.PreferredEmail)\r\n    .join(\";\");\r\n}\r\n\r\nfunction formatNotificationTitle(request, content) {\r\n  return `${siteTitle} -${content}- ${request.RequestType.Title} - ${request.Title}`;\r\n}\r\n", "// Hint: use the es6-string-html VS Code module to make template literals easier to read\r\nexport const html = String.raw;\r\n\r\nexport function registerFieldComponents(constructor) {\r\n  ko.components.register(constructor.edit, {\r\n    template: constructor.editTemplate,\r\n    viewModel: constructor,\r\n  });\r\n\r\n  ko.components.register(constructor.view, {\r\n    template: constructor.viewTemplate,\r\n    viewModel: constructor,\r\n  });\r\n}\r\n\r\nexport class BaseFieldModule {\r\n  constructor(params) {\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  _id;\r\n  getUniqueId = () => {\r\n    if (!this._id) {\r\n      this._id = \"field-\" + Math.floor(Math.random() * 10000);\r\n    }\r\n    return this._id;\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return [];\r\n    if (!this.isRequired) return [];\r\n    return this.Value()\r\n      ? []\r\n      : [\r\n          new ValidationError(\r\n            \"text-field\",\r\n            \"required-field\",\r\n            this.displayName + ` is required!`\r\n          ),\r\n        ];\r\n  });\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n\r\n  static viewTemplate = html`\r\n    <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n    <div data-bind=\"text: toString()\"></div>\r\n  `;\r\n\r\n  static editTemplate = html`<div>Uh oh!</div>`;\r\n}\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"component: {name: Value()?.components.edit, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString\"></td>\r\n        <!-- /ko -->\r\n        <td>\r\n          <i\r\n            title=\"remove item\"\r\n            class=\"fa-solid fa-trash pointer\"\r\n            data-bind=\"click: $parent.remove.bind(row)\"\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n      <!-- /ko -->\r\n      <tr>\r\n        <!-- ko foreach: NewItem()?.FormFields -->\r\n        <td>\r\n          <div\r\n            data-bind=\"component: {name: components.edit, params: $data}\"\r\n          ></div>\r\n        </td>\r\n        <!-- /ko -->\r\n        <td class=\"align-bottom\">\r\n          <button\r\n            title=\"add and new\"\r\n            type=\"button\"\r\n            data-bind=\"click: submit\"\r\n            class=\"btn btn-success\"\r\n          >\r\n            Add +\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <!-- ko if: Value -->\r\n  <div\r\n    data-bind=\"component: {name: Value().components.view, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString()\"></td>\r\n        <!-- /ko -->\r\n      </tr>\r\n      <!-- /ko -->\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class BlobModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"blob-view\";\r\n  static edit = \"blob-edit\";\r\n  static new = \"blob-edit\";\r\n}\r\n\r\nregisterFieldComponents(BlobModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n      />\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n        disabled\r\n      />\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nexport class CheckboxModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"checkbox-view\";\r\n  static edit = \"checkbox-edit\";\r\n  static new = \"checkbox-edit\";\r\n}\r\n\r\nregisterFieldComponents(CheckboxModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nexport const dateFieldTypes = {\r\n  date: \"date\",\r\n  datetime: \"datetime-local\",\r\n};\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"value: inputBinding, class: ValidationClass, attr: {'type': type}\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class DateModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  toInputDateString = () => this.Value().format(\"yyyy-MM-dd\");\r\n\r\n  toInputDateTimeString = () => this.Value().format(\"yyyy-MM-ddThh:mm\");\r\n\r\n  inputBinding = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return null;\r\n      switch (this.type) {\r\n        case dateFieldTypes.date:\r\n          return this.toInputDateString();\r\n        case dateFieldTypes.datetime:\r\n          return this.toInputDateTimeString();\r\n        default:\r\n          return null;\r\n      }\r\n    },\r\n    write: (val) => {\r\n      if (!val) return;\r\n      //writes in format\r\n      if (this.type == dateFieldTypes.datetime) {\r\n        this.Value(new Date(val));\r\n        return;\r\n      }\r\n\r\n      // make sure we're using midnight local time\r\n      this.Value(new Date(val + \"T00:00\"));\r\n    },\r\n  });\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"date-view\";\r\n  static edit = \"date-edit\";\r\n  static new = \"date-edit\";\r\n}\r\n\r\nregisterFieldComponents(DateModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: isSearch -->\r\n    <div data-bind=\"text: toString()\"></div>\r\n    <input class=\"form-control\" data-bind=\"\" />\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isSearch -->\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n  optionsCaption: 'Select...', \r\n  selectedOptions: Value,\r\n  optionsText: optionsText,\r\n  class: ValidationClass\"\r\n    ></select>\r\n    <div class=\"fst-italic fw-light\">Hold ctrl to select multiple.</div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n    optionsCaption: 'Select...', \r\n    value: Value,\r\n    optionsText: optionsText,\r\n    class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class LookupModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"lookup-view\";\r\n  static edit = \"lookup-edit\";\r\n  static new = \"lookup-edit\";\r\n}\r\n\r\nregisterFieldComponents(LookupModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold w-100\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko ifnot: spGroupId -->\r\n    <div\r\n      data-bind=\"attr: {id: getUniqueId()}, \r\n      people: Value, \r\n      pickerOptions: pickerOptions,\r\n      class: ValidationClass\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowUserSelect -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: userOpts, \r\n        optionsCaption: 'Select...', \r\n        optionsText: 'Title',\r\n        value: ValueFunc,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: toString -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"text: toString, \r\n      attr: {title: Value()?.LoginName}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <ul data-bind=\"foreach: Value\">\r\n    <li data-bind=\"attr: {title: LoginName}, text: Title\"></li>\r\n  </ul>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: toString -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class PeopleModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  ValueFunc = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return;\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      return userOpts.find((opt) => opt.ID == this.Value().ID);\r\n    },\r\n    write: (opt) => {\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      if (!userOpts) return;\r\n      this.Value(opt);\r\n    },\r\n  });\r\n\r\n  ShowUserSelect = ko.pureComputed(() => {\r\n    // We don't care to unwrap this, since we want to know if it's set or an observable.\r\n    const groupName = this.spGroupName;\r\n    if (!groupName) return false;\r\n    const options = ko.unwrap(this.userOpts);\r\n    return options.length;\r\n  });\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"people-view\";\r\n  static edit = \"people-edit\";\r\n  static new = \"people-edit\";\r\n}\r\n\r\nregisterFieldComponents(PeopleModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </label>\r\n  <div class=\"row row-cols-auto\" data-bind=\"foreach: GetSelectedOptions\">\r\n    <div class=\"col pb-1\">\r\n      <div class=\"input-group input-group-sm\">\r\n        <div\r\n          class=\"input-group-text\"\r\n          data-bind=\"text: $parent.optionsText($data)\"\r\n        ></div>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-sm btn-outline-secondary\"\r\n          style=\"min-width: 1.5rem\"\r\n          data-bind=\"click: $parent.removeSelection\"\r\n        >\r\n          <svg\r\n            class=\"position-absolute top-50 start-50 translate-middle\"\r\n            style=\"width: 1rem; height: 1rem\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"2\"\r\n              d=\"M6 18L18 6M6 6l12 12\"\r\n            ></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    tabindex=\"-1\"\r\n    data-bind=\"event: {\r\n  focusin: setInputGroupFocus,\r\n  focusout: removeInputGroupFocus,\r\n  }\"\r\n    class=\"position-relative\"\r\n  >\r\n    <input\r\n      placehold=\"Search to select...\"\r\n      class=\"form-control form-control-sm\"\r\n      data-bind=\"textInput: FilterText\"\r\n    />\r\n    <div\r\n      data-bind=\"foreach: FilteredOptions, visible: InputGroupFocused\"\r\n      class=\"list-group overflow-y-scroll position-absolute w-100\"\r\n      style=\"max-height: 200px\"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        class=\"list-group-item list-group-item-action z-3\"\r\n        data-bind=\"click: $parent.addSelection, \r\n      text: $parent.optionsText($data)\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n  <!-- ko if: instructions -->\r\n  <div\r\n    class=\"fw-lighter fst-italic text-secondary\"\r\n    data-bind=\"html: instructions\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SearchSelectModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.Options = field.Options;\r\n    this.Value = field.Value;\r\n    this.optionsText =\r\n      field.optionsText ??\r\n      ((val) => {\r\n        return val;\r\n      });\r\n    this.multiple = field.multiple;\r\n    this.OptionsCaption = field.OptionsCaption ?? \"Select...\";\r\n  }\r\n\r\n  GetSelectedOptions = ko.pureComputed(() => {\r\n    if (this.multiple) return this.Value();\r\n\r\n    return this.Value() ? [this.Value()] : [];\r\n  });\r\n\r\n  InputGroupFocused = ko.observable();\r\n  setFocus = () => this.InputGroupFocused(true);\r\n\r\n  FilterText = ko.observable();\r\n  FilteredOptions = ko.pureComputed(() =>\r\n    this.Options().filter((option) => {\r\n      if (this.GetSelectedOptions().indexOf(option) >= 0) return false;\r\n      if (this.FilterText())\r\n        return this.optionsText(option)\r\n          .toLowerCase()\r\n          .includes(this.FilterText().toLowerCase());\r\n      return true;\r\n    })\r\n  );\r\n\r\n  addSelection = (option, e) => {\r\n    console.log(\"selected\", option);\r\n    if (e.target.nextElementSibling) {\r\n      //e.stopPropagation();\r\n      e.target.nextElementSibling.focus();\r\n    }\r\n    if (this.multiple) {\r\n      this.Value.push(option);\r\n    } else {\r\n      this.Value(option);\r\n    }\r\n  };\r\n\r\n  removeSelection = (option) =>\r\n    this.multiple ? this.Value.remove(option) : this.Value(null);\r\n\r\n  setInputGroupFocus = () => {\r\n    this.InputGroupFocused(true);\r\n    clearTimeout(this.focusOutTimeout);\r\n  };\r\n\r\n  removeInputGroupFocus = (data, e) => {\r\n    this.focusOutTimeout = window.setTimeout(() => {\r\n      this.InputGroupFocused(false);\r\n    }, 0);\r\n  };\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"search-select-view\";\r\n  static edit = \"search-select-edit\";\r\n  static new = \"search-select-new\";\r\n}\r\n\r\nregisterFieldComponents(SearchSelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n  optionsCaption: 'Select...', \r\n  selectedOptions: Value,\r\n  class: ValidationClass\"\r\n    ></select>\r\n    <div class=\"fst-italic fw-light\">Hold ctrl to select multiple.</div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n    optionsCaption: 'Select...', \r\n    value: Value,\r\n    class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SelectModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"select-view\";\r\n  static edit = \"select-edit\";\r\n  static new = \"select-edit\";\r\n}\r\n\r\nregisterFieldComponents(SelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"component field\">\r\n    <!-- ko if: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span\r\n      >:</label\r\n    >\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <div\r\n      class=\"richtext-field\"\r\n      data-bind=\"childrenComplete: childrenHaveLoaded\"\r\n    >\r\n      <!-- Create the editor container -->\r\n      <div\r\n        class=\"form-control\"\r\n        data-bind=\"attr: {'id': getUniqueId()}, class: ValidationClass\"\r\n        style=\"height: 150px\"\r\n      >\r\n        <div data-bind=\"html: Value\"></div>\r\n      </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n      <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        class=\"form-control\"\r\n        data-bind=\"textInput: Value, class: ValidationClass, attr: attr\"\r\n      ></textarea>\r\n    </label>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowErrors -->\r\n    <!-- ko foreach: Errors -->\r\n    <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: Value -->\r\n  <!-- ko if: isRichText -->\r\n  <div data-bind=\"html: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: isRichText -->\r\n  <div data-bind=\"text: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: Value -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextAreaModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  childrenHaveLoaded = (nodes) => {\r\n    this.initializeEditor();\r\n  };\r\n\r\n  getToolbarId = () => \"toolbar-\" + this.getUniqueId();\r\n\r\n  initializeEditor() {\r\n    const toolbarOptions = [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"link\"],\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ];\r\n\r\n    // debugger;\r\n    var editor = new Quill(\"#\" + this.getUniqueId(), {\r\n      modules: { toolbar: toolbarOptions },\r\n      theme: \"snow\",\r\n    });\r\n\r\n    const Value = this.Value;\r\n\r\n    Value.subscribe((val) => {\r\n      if (val == \"\") {\r\n        editor.setText(\"\");\r\n        return;\r\n      }\r\n      if (editor.root.innerHTML == val) return;\r\n\r\n      editor.pasteHTML(val);\r\n    });\r\n\r\n    editor.on(\"text-change\", function (delta, oldDelta, source) {\r\n      Value(editor.root.textContent ? editor.root.innerHTML : \"\");\r\n    });\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-area-view\";\r\n  static edit = \"text-area-edit\";\r\n  static new = \"text-area-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextAreaModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"textInput: Value, class: ValidationClass, attr: attr\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-view\";\r\n  static edit = \"text-edit\";\r\n  static new = \"text-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextModule);\r\n", "import { TextAreaModule } from \"../components/Fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport default class TextAreaField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.isRichText = params.isRichText;\r\n    this.attr = params.attr ?? {};\r\n  }\r\n\r\n  components = TextAreaModule;\r\n}\r\n", "import { getAppContext } from \"./ApplicationDbContext.js\";\r\nimport { RequestEntity } from \"../entities/Request.js\";\r\n\r\nexport class RequestsByStatusSet {\r\n  constructor(status, includeAssignments) {\r\n    this.includeAssignments = includeAssignments;\r\n    this.filter = status;\r\n  }\r\n\r\n  IsLoading = ko.observable();\r\n  HasLoaded = ko.observable(false);\r\n\r\n  List = ko.observableArray();\r\n\r\n  load = async () => {\r\n    this.IsLoading(true);\r\n    const start = new Date();\r\n\r\n    const requestsByStatus = await getAppContext().Requests.FindByColumnValue(\r\n      [{ column: \"RequestStatus\", value: this.filter }],\r\n      { orderByColumn: \"Title\", sortAsc: false },\r\n      {},\r\n      RequestEntity.Views.ByStatus,\r\n      false\r\n    );\r\n\r\n    const requests = requestsByStatus.results;\r\n    if (this.includeAssignments) {\r\n      requests.map((request) => request.Assignments.refresh());\r\n    }\r\n    this.List(requests);\r\n\r\n    const end = new Date();\r\n    if (window.DEBUG)\r\n      console.log(\r\n        `Request by status Set - ${this.filter}: ${requests.length} cnt in ${\r\n          end - start\r\n        }`\r\n      );\r\n    this.HasLoaded(true);\r\n    this.IsLoading(false);\r\n  };\r\n\r\n  init = async () => {\r\n    if (this.HasLoaded()) {\r\n      return;\r\n    }\r\n    if (this.IsLoading()) {\r\n      return new Promise((resolve, reject) => {\r\n        this.isLoadingSubscription = this.IsLoading.subscribe((isLoading) => {\r\n          this.isLoadingSubscription.dispose();\r\n          resolve();\r\n        });\r\n      });\r\n    }\r\n    await this.load();\r\n  };\r\n\r\n  dispose() {\r\n    if (this.isLoadingSubscription) this.isLoadingSubscription.dispose();\r\n  }\r\n\r\n  includeAssignments = async () => {};\r\n}\r\n", "import { requestStates } from \"../constants/RequestStates.js\";\r\n\r\nimport { RequestsByStatusSet } from \"../infrastructure/RequestsByStatusSet.js\";\r\n\r\nexport const requestsByStatusMap = new Map();\r\n\r\nrequestsByStatusMap.set(\r\n  requestStates.open,\r\n  new RequestsByStatusSet(requestStates.open, true)\r\n);\r\nrequestsByStatusMap.set(\r\n  requestStates.fulfilled,\r\n  new RequestsByStatusSet(requestStates.fulfilled)\r\n);\r\nrequestsByStatusMap.set(\r\n  requestStates.cancelled,\r\n  new RequestsByStatusSet(requestStates.cancelled)\r\n);\r\nrequestsByStatusMap.set(\r\n  requestStates.rejected,\r\n  new RequestsByStatusSet(requestStates.rejected)\r\n);\r\n\r\nexport const requestIngests = ko.observableArray();\r\n\r\n//     'Closed': new RequestsByStatusSet(requestStates.closed),\r\n\r\n// export const allOpenRequests = new RequestsByStatusSet(requestStates.open)\r\n// allOpenRequests.init()\r\n\r\n// export const allClosedRequests = new RequestsByStatusSet(requestStates.closed)\r\n// export const allCancelledRequests = new RequestsByStatusSet(requestStates.cancelled)\r\n// export const allRejectedRequests = new RequestsByStatusSet(requestStates.cancelled)\r\n", "import { requestInternalStates, requestStates } from \"../constants/index.js\";\r\nimport { actionTypes } from \"../entities/Action.js\";\r\n\r\nimport { People } from \"../entities/People.js\";\r\n\r\nimport { createNewRequestTitle } from \"../common/EntityUtilities.js\";\r\nimport { businessDaysFromDate } from \"../common/DateUtilities.js\";\r\nimport * as Router from \"../common/Router.js\";\r\n\r\nimport { addTask, finishTask, taskDefs } from \"../stores/Tasks.js\";\r\n\r\nimport { currentUser } from \"../infrastructure/Authorization.js\";\r\n\r\nimport { getAppContext } from \"../infrastructure/ApplicationDbContext.js\";\r\nimport TextAreaField from \"../fields/TextAreaField.js\";\r\n\r\nimport { requestsByStatusMap } from \"../stores/Requests.js\";\r\n\r\nimport { stageActionTypes } from \"../entities/PipelineStage.js\";\r\n\r\nconst DEBUG = true;\r\n\r\nexport const DisplayModes = {\r\n  New: \"New\",\r\n  Edit: \"Edit\",\r\n  View: \"View\",\r\n};\r\n\r\nconst reqHeaderComponentsMap = {\r\n  New: \"request-header-edit\",\r\n  View: \"request-header-view\",\r\n  Edit: \"request-header-edit\",\r\n};\r\n\r\nconst reqBodyComponentsMap = {\r\n  New: \"request-body-edit\",\r\n  View: \"request-body-view\",\r\n  Edit: \"request-body-edit\",\r\n};\r\n\r\nexport class RequestDetailView {\r\n  /************************************************************************\r\n      RequestDetail Component Specific Items\r\n  ************************************************************************/\r\n\r\n  refreshAll = async () => {\r\n    await this.request.refreshAll();\r\n  };\r\n\r\n  Request = ko.observable();\r\n  get request() {\r\n    return this.Request();\r\n  }\r\n\r\n  DisplayModes = DisplayModes;\r\n  DisplayMode = ko.observable();\r\n\r\n  HeaderComponentName = ko.pureComputed(() => {\r\n    return reqHeaderComponentsMap[this.DisplayMode()];\r\n  });\r\n\r\n  BodyComponentName = ko.pureComputed(() => {\r\n    return reqBodyComponentsMap[this.DisplayMode()];\r\n  });\r\n\r\n  ShowActionsArea = ko.pureComputed(\r\n    () =>\r\n      this.request.State.IsActive() &&\r\n      !this.request.IsLoading() &&\r\n      !this.request.Assignments.AreLoading() &&\r\n      this.request.Assignments.CurrentStage.list.UserActionAssignments().length\r\n  );\r\n\r\n  ShowCloseArea = ko.pureComputed(() => {\r\n    return (\r\n      !this.request.IsLoading() &&\r\n      !this.request.Assignments.AreLoading() &&\r\n      this.request.Authorization.currentUserCanClose()\r\n    );\r\n  });\r\n\r\n  ShowFulfillArea = ko.pureComputed(() => {\r\n    return (\r\n      !this.request.IsLoading() &&\r\n      !this.request.Assignments.AreLoading() &&\r\n      this.request.Authorization.currentUserCanClose()\r\n    );\r\n  });\r\n\r\n  EnableChangeStatusArea = ko.pureComputed(() => {\r\n    return this.request.Authorization.currentUserCanAdvance();\r\n  });\r\n\r\n  newComment = {\r\n    input: new TextAreaField({\r\n      displayName: \"Please provide additional comments/instructions here\",\r\n      instructions: null,\r\n      isRichText: true,\r\n    }),\r\n    submit: async () => {\r\n      const comment = {\r\n        Comment: this.newComment.input.Value(),\r\n      };\r\n      await this.request.Comments.addNew(comment);\r\n      this.newComment.input.Value(\"\");\r\n    },\r\n  };\r\n\r\n  submitNewRequest = async () => {\r\n    // 1. Validate Request\r\n    if (!this.request.Validation.validate()) return;\r\n\r\n    const serviceType = this.request.RequestType;\r\n    if (!serviceType) {\r\n      // We should have caught this in validation.\r\n      throw \"no service type provided\";\r\n    }\r\n    const saveTask = addTask(taskDefs.save);\r\n    this.DisplayMode(DisplayModes.View);\r\n    this.request.DisplayMode(DisplayModes.View);\r\n\r\n    // 2. Create Folder Structure\r\n    this.request.State.Status(requestStates.open);\r\n    const folderPath = this.request.getRelativeFolderPath();\r\n\r\n    createFolders: {\r\n      const breakingPermissionsTask = addTask(taskDefs.permissions);\r\n      const folderPerms = this.request.getFolderPermissions();\r\n\r\n      const listRefs = this.request.getInitialListRefs();\r\n      // See if we have any staged attachments\r\n      const hasStagedAttachments = this.request.Attachments.list.All().length;\r\n      if (hasStagedAttachments) listRefs.push(this._context.Attachments);\r\n\r\n      await Promise.all(\r\n        listRefs.map(async (listRef) => {\r\n          // Create folder\r\n          const folderId = await listRef.UpsertFolderPath(folderPath);\r\n          if (!folderId) {\r\n            alert(`Could not create ${listRef.Title} folder ` + folderPath);\r\n            return;\r\n          }\r\n          // Apply folder permissions\r\n          const result = await listRef.SetFolderPermissions(\r\n            folderPath,\r\n            folderPerms\r\n          );\r\n        })\r\n      );\r\n      finishTask(breakingPermissionsTask);\r\n\r\n      if (hasStagedAttachments) {\r\n        const stagingFolderPath = this.request.getRelativeFolderPathStaging();\r\n        await this._context.Attachments.CopyFolderContents(\r\n          stagingFolderPath,\r\n          folderPath\r\n        );\r\n        // Delete\r\n        await this._context.Attachments.DeleteFolderByPath(stagingFolderPath);\r\n      }\r\n    }\r\n\r\n    // 3. Initialize request header\r\n    // Initialize dates\r\n    const effectiveSubmissionDate =\r\n      this.request.calculateEffectiveSubmissionDate();\r\n    this.request.Dates.Submitted.set(effectiveSubmissionDate);\r\n    this.request.Dates.EstClosed.set(\r\n      businessDaysFromDate(\r\n        effectiveSubmissionDate,\r\n        serviceType.DaysToCloseBusiness\r\n      )\r\n    );\r\n    this.request.RequestOrgs(\r\n      this.request.Pipeline.Stages()\r\n        .filter((stage) => null != stage.RequestOrg)\r\n        .map((stage) => stage.RequestOrg)\r\n    );\r\n\r\n    this.request.State.InternalStatus(requestInternalStates.inProgress);\r\n    this.request.State.IsActive(true);\r\n\r\n    createItems: {\r\n      await this._context.Requests.AddEntity(this.request, folderPath);\r\n    }\r\n\r\n    Router.setUrlParam(\"reqId\", this.request.Title);\r\n\r\n    // Send New WorkOrder Notification to User\r\n    // Create new Action Log Item\r\n    // Initial Assignments\r\n    this.request.ActivityQueue.push({\r\n      activity: actionTypes.Created,\r\n      data: this.request,\r\n    });\r\n\r\n    // Progress Request\r\n    this.request.Pipeline.advance();\r\n\r\n    this.request.Validation.reset();\r\n\r\n    this.request.LoadedAt(new Date());\r\n\r\n    // push the newrequest to the open requests store\r\n    const openrequests = requestsByStatusMap.get(requestStates.open);\r\n    openrequests.List.push(this.request);\r\n\r\n    finishTask(saveTask);\r\n  };\r\n\r\n  editRequestHandler = async () => {\r\n    this.DisplayMode(DisplayModes.Edit);\r\n  };\r\n\r\n  updateRequestHandler = async () => {\r\n    this.DisplayMode(DisplayModes.View);\r\n  };\r\n\r\n  cancelChangesHandler = async () => {\r\n    //Refresh\r\n    this.refreshAll();\r\n    this.DisplayMode(DisplayModes.View);\r\n  };\r\n\r\n  promptClose = () => {\r\n    if (confirm(\"Close and finalize request? This action cannot be undone!\")) {\r\n      this.request.closeAndFinalize(requestStates.fulfilled);\r\n    }\r\n  };\r\n\r\n  promptFulfill = () => {\r\n    if (\r\n      this.request.Pipeline.Stage().ActionType == stageActionTypes.Closed &&\r\n      confirm(\"Close and finalize request? This action cannot be undone!\")\r\n    ) {\r\n      this.request.closeAndFinalize(requestStates.fulfilled);\r\n      return;\r\n    }\r\n\r\n    const openSteps =\r\n      this.request.Pipeline.Stages().length -\r\n      this.request.Pipeline.Stage()?.Step;\r\n\r\n    if (\r\n      openSteps &&\r\n      confirm(\r\n        `This request still has ${openSteps} open steps! ` +\r\n          `Are you sure you want to close and finalize it? This action cannot be undone!`\r\n      )\r\n    ) {\r\n      this.request.closeAndFinalize(requestStates.fulfilled);\r\n      return;\r\n    }\r\n  };\r\n\r\n  promptCancel = () => {\r\n    if (confirm(\"Cancel request? This action cannot be undone!\")) {\r\n      this.request.closeAndFinalize(requestStates.cancelled);\r\n    }\r\n  };\r\n\r\n  pauseOptions = Object.entries(requestInternalStates)\r\n    .filter(([key, value]) => value != requestInternalStates.inProgress)\r\n    .map(([key, value]) => {\r\n      return { key, value };\r\n    });\r\n\r\n  pauseReason = ko.observable();\r\n\r\n  showPause = ko.pureComputed(() => {\r\n    return (\r\n      this.request.State.Status() == requestStates.open &&\r\n      this.request.State.InternalStatus() == requestInternalStates.inProgress\r\n    );\r\n  });\r\n  clickPause = () => {\r\n    const reason = this.pauseReason();\r\n    this.pauseReason(null);\r\n    this.request.pauseRequest(reason);\r\n  };\r\n\r\n  showResume = ko.pureComputed(() => {\r\n    return this.request.State.IsPaused();\r\n  });\r\n\r\n  clickResume = () => {\r\n    this.request.resumeRequest();\r\n  };\r\n\r\n  validationWatcher = (isValid) => {\r\n    if (\r\n      isValid &&\r\n      this.request.Authorization.currentUserCanAdvance() &&\r\n      !this.request.Assignments.CurrentStage.list.InProgress().length\r\n    ) {\r\n      this.promptAdvance();\r\n    }\r\n  };\r\n\r\n  nextStageHandler = () => {\r\n    if (!this.request.Assignments.CurrentStage.list.InProgress().length) {\r\n      this.request.Pipeline.advance();\r\n      return;\r\n    }\r\n    this.promptAdvance();\r\n  };\r\n\r\n  promptAdvanceModal;\r\n  promptAdvance = () => {\r\n    if (!this.promptAdvanceModal) {\r\n      this.promptAdvanceModal = new bootstrap.Modal(\r\n        document.getElementById(\"modal-advance-request\"),\r\n        {}\r\n      );\r\n    }\r\n    this.promptAdvanceModal.show();\r\n  };\r\n\r\n  confirmAdvanceHandler = () => {\r\n    if (!this.request.Pipeline.getNextStage()) {\r\n      this.promptClose();\r\n      this.promptAdvanceModal.hide();\r\n      return;\r\n    }\r\n    this.request.Pipeline.advance();\r\n    this.promptAdvanceModal.hide();\r\n  };\r\n\r\n  approveRequestHandler = () => {\r\n    this.approveRequest();\r\n  };\r\n\r\n  async approveRequest() {\r\n    this.promptAdvance();\r\n  }\r\n\r\n  serviceTypeDefinitionWatcher = (newSvcType) => {\r\n    // This should only be needed when creating a new request.\r\n  };\r\n\r\n  createNewRequest = async ({ request }) => {\r\n    const { Requestor, Phone, Email, OfficeSymbol } = request.RequestorInfo;\r\n    const Author = request.Author.Value;\r\n\r\n    if (!Requestor()) Requestor(new People(currentUser()));\r\n    if (!Author()) Author(new People(currentUser()));\r\n    if (!Phone()) Phone(currentUser().WorkPhone);\r\n    if (!Email()) Email(currentUser().EMail);\r\n    if (!OfficeSymbol.get()) OfficeSymbol.set(currentUser().OfficeSymbol);\r\n    //this.request.Title = createNewRequestTitle();\r\n    const { Status, InternalStatus, IsActive } = request.State;\r\n    if (!Status()) Status(requestStates.draft);\r\n    if (!InternalStatus()) InternalStatus(requestStates.draft);\r\n    if (!IsActive()) IsActive(true);\r\n\r\n    // Watch for a change in service type\r\n    request.LoadedAt(new Date());\r\n\r\n    request.Validation.IsValid.subscribe(this.validationWatcher);\r\n\r\n    this.Request(request);\r\n    this.DisplayMode(DisplayModes.New);\r\n  };\r\n\r\n  viewRequest = ({ request }) => {\r\n    request.Validation.IsValid.subscribe(this.validationWatcher);\r\n\r\n    this.Request(request);\r\n\r\n    this.DisplayMode(DisplayModes.View);\r\n\r\n    this.refreshAll();\r\n  };\r\n\r\n  constructor() {\r\n    this._context = getAppContext();\r\n  }\r\n}\r\n", "import {\r\n  Action,\r\n  actionTypes,\r\n  Attachment,\r\n  Assignment,\r\n  assignmentRoles,\r\n  assignmentStates,\r\n  activeAssignmentsError,\r\n  Comment,\r\n  RequestOrg,\r\n  PipelineStage,\r\n  pipelineStageStore,\r\n  stageActionTypes,\r\n  ServiceType,\r\n} from \"../entities/index.js\";\r\n\r\nimport { People } from \"./People.js\";\r\n\r\nimport { requestStates, requestInternalStates } from \"../constants/index.js\";\r\n\r\nimport { ActivityLogComponent } from \"../components/ActivityLogComponent.js\";\r\n\r\nimport {\r\n  createNewRequestTitle,\r\n  sortByField,\r\n} from \"../common/EntityUtilities.js\";\r\nimport {\r\n  businessDaysFromDate,\r\n  calculateBusinessDays,\r\n} from \"../common/DateUtilities.js\";\r\nimport * as Router from \"../common/Router.js\";\r\n\r\nimport {\r\n  currentUser,\r\n  getRequestFolderPermissions,\r\n  stageActionRoleMap,\r\n  AssignmentFunctions,\r\n} from \"../infrastructure/Authorization.js\";\r\n\r\nimport {\r\n  emitCommentNotification,\r\n  emitRequestNotification,\r\n} from \"../infrastructure/Notifications.js\";\r\n\r\nimport { getAppContext } from \"../infrastructure/ApplicationDbContext.js\";\r\n\r\nimport {\r\n  BlobField,\r\n  DateField,\r\n  TextField,\r\n  TextAreaField,\r\n  PeopleField,\r\n} from \"../fields/index.js\";\r\n\r\nimport { DisplayModes } from \"../views/RequestDetailView.js\";\r\n\r\nimport { Tabs } from \"../env.js\";\r\nimport { addTask, finishTask, taskDefs } from \"../stores/Tasks.js\";\r\nimport { ValidationError } from \"../primitives/ValidationError.js\";\r\n\r\n// export const requestStates = {\r\n//   draft: { ID: 1, Title: \"Draft\" },\r\n//   open: { ID: 2, Title: \"Open\" },\r\n//   fulfilled: { ID: 3, Title: \"Completed\" },\r\n//   cancelled: { ID: 4, Title: \"Cancelled\" },\r\n//   rejected: { ID: 5, Title: \"Rejected\" },\r\n// };\r\n\r\nconst requestStateClasses = {\r\n  Draft: \"text-bg-info\",\r\n  Open: \"text-bg-primary\",\r\n  Paused: \"text-bg-warning\",\r\n  \"In Progress\": \"text-bg-primary\",\r\n  Completed: \"text-bg-success\",\r\n  Cancelled: \"text-bg-warning\",\r\n  Rejected: \"text-bg-danger\",\r\n};\r\n\r\n// TODO: implement as Entity\r\nexport class RequestEntity {\r\n  constructor({ ID = null, Title = null, ServiceType: RequestType = null }) {\r\n    this.ID = ID;\r\n    this.Title = Title ?? createNewRequestTitle();\r\n    this.LookupValue = Title;\r\n    this._context = getAppContext();\r\n\r\n    if (!ID) {\r\n      this.DisplayMode(DisplayModes.New);\r\n      this.State.Status(requestStates.draft);\r\n    }\r\n\r\n    if (RequestType) {\r\n      this.RequestType = ServiceType.FindInStore(RequestType);\r\n      if (this.RequestType._constructor) {\r\n        this.RequestBodyBlob = new BlobField({\r\n          displayName: \"Service Type Details\",\r\n          isRequired: false,\r\n          width: 12,\r\n          entityType: ko.observable(this.RequestType._constructor),\r\n        });\r\n      }\r\n    }\r\n\r\n    this.ActivityQueue.subscribe(\r\n      this.activityQueueWatcher,\r\n      this,\r\n      \"arrayChange\"\r\n    );\r\n  }\r\n\r\n  // static async Create({\r\n  //   ID = null,\r\n  //   Title = null,\r\n  //   ServiceType: RequestType = null,\r\n  // }) {\r\n  //   const serviceType = ServiceType.FindInStore(RequestType);\r\n  //   await serviceType.initializeEntity();\r\n  //   return new RequestEntity({ ID, Title, ServiceType: serviceType });\r\n  // }\r\n\r\n  DisplayMode = ko.observable(DisplayModes.View);\r\n  Displaymodes = DisplayModes;\r\n\r\n  get ID() {\r\n    return this.ObservableID();\r\n  }\r\n  set ID(id) {\r\n    this.ObservableID(id);\r\n  }\r\n  get Title() {\r\n    return this.ObservableTitle();\r\n  }\r\n  set Title(title) {\r\n    this.ObservableTitle(title);\r\n  }\r\n\r\n  ObservableID = ko.observable();\r\n  ObservableTitle = ko.observable();\r\n\r\n  RequestSubject = ko.observable();\r\n  RequestDescription = new TextAreaField({\r\n    displayName: ko.pureComputed(\r\n      () => this.RequestType?.DescriptionTitle ?? \"Description\"\r\n    ),\r\n    instructions: ko.pureComputed(\r\n      () => this.RequestType?.DescriptionFieldInstructions\r\n    ),\r\n    isRichText: true,\r\n    isRequired: ko.pureComputed(\r\n      () => this.RequestType?.DescriptionRequired ?? false\r\n    ),\r\n    width: \"12\",\r\n  });\r\n\r\n  RequestorInfo = {\r\n    Requestor: ko.observable(),\r\n    Phone: ko.observable(),\r\n    Email: ko.observable(),\r\n    Office: ko.observable(),\r\n    OfficeSymbol: new TextField({ displayName: \"Office Symbol\" }),\r\n  };\r\n\r\n  Author = new PeopleField({\r\n    displayName: \"Created By\",\r\n  });\r\n\r\n  State = {\r\n    IsActive: ko.observable(),\r\n    Status: ko.observable(),\r\n    StatusClass: ko.pureComputed(() => {\r\n      return requestStateClasses[this.State.Status()];\r\n    }),\r\n    InternalStatus: ko.observable(),\r\n    InternalStatusClass: ko.pureComputed(() => {\r\n      return (\r\n        requestStateClasses[this.State.InternalStatus()] ??\r\n        requestStateClasses.Paused\r\n      );\r\n    }),\r\n    IsPaused: ko.pureComputed(\r\n      () =>\r\n        this.State.Status() == requestStates.open &&\r\n        this.State.InternalStatus() != requestInternalStates.inProgress\r\n    ),\r\n  };\r\n\r\n  Reporting = {\r\n    MeetingStandard: ko.pureComputed(() => this.Reporting.AgingDays() <= 0),\r\n    AgingDays: ko.pureComputed(\r\n      () => this.Reporting.OpenDays() - this.RequestType.DaysToCloseBusiness\r\n    ),\r\n    OpenDays: ko.pureComputed(() => {\r\n      const endDate = this.Dates.Closed.Value() ?? new Date();\r\n      return calculateBusinessDays(this.Dates.Submitted.Value(), endDate);\r\n    }),\r\n  };\r\n\r\n  Dates = {\r\n    Submitted: new DateField({ displayName: \"Submitted Date\" }),\r\n    EstClosed: new DateField({ displayName: \"Est. Closed Date\" }),\r\n    Closed: new DateField({ displayName: \"Closed Date\" }),\r\n  };\r\n\r\n  RequestOrgs = ko.observable();\r\n\r\n  // ServiceType = {\r\n  //   IsLoading: ko.observable(false),\r\n  //   Entity: ko.observable(),\r\n  //   // Def: ko.observable(),\r\n  //   refreshEntity: async () => {\r\n  //     return;\r\n  //   },\r\n  // };\r\n\r\n  RequestType;\r\n\r\n  RequestBodyBlob;\r\n  // = new BlobField({\r\n  //   displayName: \"Service Type Details\",\r\n  //   isRequired: false,\r\n  //   width: 12,\r\n  //   entityType: ko.observable(),\r\n  // });\r\n\r\n  Pipeline = {\r\n    Stage: ko.observable(),\r\n    PreviousStage: ko.observable(),\r\n    Icon: ko.pureComputed(() => this.RequestType?.Icon),\r\n    Stages: ko.pureComputed(() => {\r\n      if (!this.RequestType) return [];\r\n      const typeStages = pipelineStageStore()\r\n        .filter((stage) => stage.ServiceType?.ID == this.RequestType?.ID)\r\n        .sort(sortByField(\"Step\"));\r\n      const completedStage = PipelineStage.GetCompletedStage();\r\n      completedStage.Step = typeStages.length + 1;\r\n      typeStages.push(completedStage);\r\n      return typeStages;\r\n    }),\r\n    RequestOrgs: ko.pureComputed(() => {\r\n      return this.Pipeline.Stages()\r\n        .filter((stage) => stage.RequestOrg)\r\n        .map((stage) => stage.RequestOrg);\r\n    }),\r\n    getNextStage: ko.pureComputed(() => {\r\n      const thisStepNum = this.Pipeline.Stage()?.Step ?? 0;\r\n      const nextStepNum = thisStepNum + 1;\r\n      return this.Pipeline.Stages()?.find((stage) => stage.Step == nextStepNum);\r\n    }),\r\n    advance: async () => {\r\n      const pipelineAdvanceTask = addTask(taskDefs.pipeline);\r\n      if (this.promptAdvanceModal) this.promptAdvanceModal.hide();\r\n      await this.resumeRequest();\r\n\r\n      const nextStage = this.Pipeline.getNextStage();\r\n\r\n      if (nextStage.ActionType == stageActionTypes.Closed) {\r\n        // End of the Pipeline; time to close\r\n        console.log(\"Closing Request\");\r\n        this.closeAndFinalize(requestStates.fulfilled);\r\n        finishTask(pipelineAdvanceTask);\r\n        return null;\r\n      }\r\n\r\n      const thisStage = this.Pipeline.Stage();\r\n      this.Pipeline.PreviousStage(thisStage);\r\n\r\n      this.Pipeline.Stage(nextStage);\r\n\r\n      await this._context.Requests.UpdateEntity(this, [\r\n        \"PipelineStage\",\r\n        \"PipelineStagePrev\",\r\n      ]);\r\n\r\n      this.ActivityQueue.push({\r\n        activity: actionTypes.Advanced,\r\n        data: nextStage,\r\n      });\r\n\r\n      await this.Assignments.createStageAssignments(nextStage);\r\n\r\n      // If this is a notification stage, advance. The activity logger will emit our notification.\r\n      if (nextStage.ActionType == stageActionTypes.Notification) {\r\n        this.Pipeline.advance();\r\n      }\r\n\r\n      if (nextStage.ActionType == stageActionTypes.Closed) {\r\n        this.closeAndFinalize(requestStates.fulfilled);\r\n      }\r\n      finishTask(pipelineAdvanceTask);\r\n    },\r\n  };\r\n\r\n  Attachments = {\r\n    AreLoading: ko.observable(),\r\n    list: {\r\n      All: ko.observableArray(),\r\n      Active: ko.pureComputed(() =>\r\n        this.Attachments.list.All().filter((attachment) => attachment.IsActive)\r\n      ),\r\n    },\r\n    Validation: {\r\n      Errors: ko.pureComputed(() => {\r\n        let errors = [];\r\n        let minAttachments = this.RequestType?.AttachmentsRequiredCnt ?? 0;\r\n        if (minAttachments < 0) minAttachments = 1;\r\n        const attachmentsCount = this.Attachments.list.Active().length;\r\n        if (attachmentsCount < minAttachments) {\r\n          errors.push(\r\n            new ValidationError(\r\n              \"attachment-count-mismatch\",\r\n              \"request-header\",\r\n              `This request has ${this.RequestType.attachmentsRequiredCntString()} required attachment(s)!`\r\n            )\r\n          );\r\n        }\r\n        return errors;\r\n      }),\r\n    },\r\n    userCanAttach: ko.pureComputed(() =>\r\n      this.Authorization.currentUserCanSupplement()\r\n    ),\r\n    createFolder: async () => {\r\n      const newAttachmentTask = addTask(taskDefs.newAttachment);\r\n      let folderPath = this.getRelativeFolderPath();\r\n      const folderPerms = this.getFolderPermissions();\r\n\r\n      try {\r\n        await this._context.Attachments.UpsertFolderPath(folderPath);\r\n        await this._context.Attachments.SetFolderPermissions(\r\n          folderPath,\r\n          folderPerms\r\n        );\r\n        this.Attachments.refresh();\r\n      } catch (e) {\r\n        console.error(\"Error creating folder: \", e);\r\n        folderPath = null;\r\n      } finally {\r\n        finishTask(newAttachmentTask);\r\n      }\r\n      return folderPath;\r\n    },\r\n    newAttachmentFiles: ko.observableArray(),\r\n    removeFile: (file) => {\r\n      this.Attachments.newAttachmentFiles.remove(file);\r\n    },\r\n    addNew: async () => {\r\n      const folderPath = await this.Attachments.createFolder();\r\n      if (!folderPath) alert(\"Unable to create folder\");\r\n      await Promise.all(\r\n        this.Attachments.newAttachmentFiles().map(async (file) => {\r\n          const uploadFileTask = addTask(taskDefs.uploadAttachment(file.name));\r\n          const attachmentTitle =\r\n            file.name.split(\".\").slice(0, -1).join(\".\") ?? file.name;\r\n          await this._context.Attachments.UploadFileToFolderAndUpdateMetadata(\r\n            file,\r\n            file.name,\r\n            folderPath,\r\n            {\r\n              Title: attachmentTitle,\r\n              RequestId: this.ID,\r\n              IsActive: true,\r\n            },\r\n            ({ currentBlock, totalBlocks }) => {\r\n              uploadFileTask.updateProgress({\r\n                percentDone: currentBlock / totalBlocks,\r\n              });\r\n            }\r\n          );\r\n          finishTask(uploadFileTask);\r\n        })\r\n      );\r\n      // await this._context.Attachments.UploadFol(folderPath, {\r\n      //   RequestId: this.ID,\r\n      //   RequestTitle: this.Title,\r\n      // });\r\n      this.Attachments.newAttachmentFiles([]);\r\n      this.Attachments.refresh();\r\n    },\r\n    refresh: async () => {\r\n      if (!this.Title) return;\r\n      const refreshAttachmentsTask = addTask(taskDefs.refreshAttachments);\r\n      this.Attachments.AreLoading(true);\r\n      try {\r\n        const attachments =\r\n          await this._context.Attachments.GetItemsByFolderPath(\r\n            this.getRelativeFolderPath(),\r\n            Attachment.Views.All\r\n          );\r\n        this.Attachments.list.All(attachments);\r\n      } catch (e) {\r\n        console.warn(\"Looks like there are no attachments\", e);\r\n      }\r\n      this.Attachments.AreLoading(false);\r\n      finishTask(refreshAttachmentsTask);\r\n    },\r\n    view: (attachment) => {\r\n      //console.log(\"viewing\", attachment);\r\n      this._context.Attachments.ShowForm(\r\n        \"DispForm.aspx\",\r\n        \"View \" + attachment.Title,\r\n        { id: attachment.ID }\r\n      );\r\n    },\r\n    userCanRemove: (attachment) => {\r\n      return ko.pureComputed(() => {\r\n        if (!this.Authorization.currentUserCanSupplement()) return false;\r\n        return true;\r\n      });\r\n    },\r\n    remove: async (attachment) => {\r\n      console.log(\"removing\", attachment);\r\n      attachment.IsActive = false;\r\n      await this._context.Attachments.UpdateEntity(attachment, [\"IsActive\"]);\r\n      this.Attachments.refresh();\r\n    },\r\n  };\r\n\r\n  Comments = {\r\n    AreLoading: ko.observable(),\r\n    list: {\r\n      All: ko.observableArray(),\r\n      Active: ko.pureComputed(() => {\r\n        return this.Comments.list.All().filter((comment) => comment.IsActive);\r\n      }),\r\n    },\r\n    userCanComment: ko.pureComputed(() => {\r\n      return this.Authorization.currentUserCanSupplement();\r\n    }),\r\n    addNew: async (comment) => {\r\n      const newCommentTask = addTask(taskDefs.newComment);\r\n      const folderPath = this.getRelativeFolderPath();\r\n      const folderPerms = this.getFolderPermissions();\r\n\r\n      try {\r\n        const commentFolderId = await this._context.Comments.UpsertFolderPath(\r\n          folderPath\r\n        );\r\n\r\n        await this._context.Comments.SetFolderPermissions(\r\n          folderPath,\r\n          folderPerms\r\n        );\r\n\r\n        await this._context.Comments.AddEntity(comment, folderPath);\r\n        this.Comments.refresh();\r\n      } catch (e) {\r\n        console.error(\"Error creating folder: \");\r\n      } finally {\r\n        finishTask(newCommentTask);\r\n      }\r\n    },\r\n    update: async (comment) => {\r\n      // TODO ?\r\n    },\r\n    refresh: async () => {\r\n      const refreshCommentsTask = addTask(taskDefs.refreshComments);\r\n      this.Comments.AreLoading(true);\r\n      const folderPath = this.getRelativeFolderPath();\r\n      const comments = await this._context.Comments.GetItemsByFolderPath(\r\n        folderPath,\r\n        Comment.Views.All\r\n      );\r\n      this.Comments.list.All(comments);\r\n      this.Comments.AreLoading(false);\r\n      finishTask(refreshCommentsTask);\r\n    },\r\n    sendNotification: async (comment) => {\r\n      const notifyCommentTask = addTask(taskDefs.newComment);\r\n      await emitCommentNotification(comment, this);\r\n      comment.NotificationSent = true;\r\n      await this._context.Comments.UpdateEntity(comment, [\"NotificationSent\"]);\r\n      this.Comments.refresh();\r\n      finishTask(notifyCommentTask);\r\n    },\r\n    remove: async (comment) => {\r\n      const removeCommentTask = addTask(taskDefs.removeComment);\r\n      comment.IsActive = false;\r\n      await this._context.Comments.UpdateEntity(comment, [\"IsActive\"]);\r\n      this.Comments.refresh();\r\n      finishTask(removeCommentTask);\r\n    },\r\n  };\r\n\r\n  Assignments = {\r\n    HaveLoaded: ko.observable(false),\r\n    AreLoading: ko.observable(),\r\n    list: {\r\n      All: ko.observableArray(),\r\n      InProgress: ko.pureComputed(() => {\r\n        // TODO: this should maybe be in the component, also CurrentStage.list.InProgress\r\n        return this.Assignments.list\r\n          .All()\r\n          .filter(\r\n            (assignment) => assignment.Status == assignmentStates.InProgress\r\n          );\r\n      }),\r\n      Dashboard: ko.pureComputed(() => {\r\n        return this.Assignments.list.All();\r\n      }),\r\n      CurrentUserAssignments: ko.pureComputed(() => {\r\n        // if (window.DEBUG)\r\n        //   console.log(`Request ${this.ID}: User Assignments Updated`);\r\n        if (!this.Assignments.list.All().length) {\r\n          return [];\r\n        }\r\n        // We need find assignments where the current user is directly assigned:\r\n        // or They're in a group that's been assigned:\r\n        const userGroupIds = currentUser().getGroupIds();\r\n        // or Where they're in a requestOrg that's been assigned:\r\n        const userReqOrgIds = currentUser()\r\n          .ActionOffices()\r\n          .map((org) => org.ID);\r\n\r\n        const assignments = this.Assignments.list\r\n          .All()\r\n          .filter(\r\n            (assignment) =>\r\n              assignment.Assignee?.ID == currentUser()?.ID ||\r\n              userGroupIds.includes(assignment.Assignee?.ID) ||\r\n              userReqOrgIds.includes(assignment.RequestOrg?.ID)\r\n          );\r\n\r\n        return assignments;\r\n      }),\r\n    },\r\n    getFolderUrl: () =>\r\n      this._context.Assignments.GetFolderUrl(this.getRelativeFolderPath()),\r\n    CurrentStage: {\r\n      list: {\r\n        ActionAssignments: ko.pureComputed(() => {\r\n          return this.Assignments.list\r\n            .All()\r\n            .filter(\r\n              (assignment) =>\r\n                assignment.PipelineStage?.ID == this.Pipeline.Stage()?.ID &&\r\n                assignment.isActionable()\r\n            );\r\n        }),\r\n        InProgress: ko.pureComputed(() => {\r\n          // TODO: some of these views should maybe be in whatever components are using them\r\n          return this.Assignments.list\r\n            .InProgress()\r\n            .filter(\r\n              (assignment) =>\r\n                assignment.PipelineStage?.ID == this.Pipeline.Stage()?.ID\r\n            );\r\n        }),\r\n        UserActionAssignments: ko.pureComputed(() => {\r\n          return this.Assignments.list\r\n            .CurrentUserAssignments()\r\n            .filter(\r\n              (assignment) =>\r\n                assignment.PipelineStage?.ID == this.Pipeline.Stage()?.ID &&\r\n                assignment.isActionable()\r\n            );\r\n        }),\r\n      },\r\n      Validation: {\r\n        IsValid: ko.pureComputed(\r\n          () =>\r\n            !this.Assignments.CurrentStage.Validation.ActiveAssignmentsError() &&\r\n            !this.Assignments.CurrentStage.Validation.Errors().length\r\n        ),\r\n        Errors: ko.observableArray(),\r\n        ActiveAssignmentsError: ko.pureComputed(() => {\r\n          // TODO: Minor - this should be a subscription event\r\n          const activeAssignments = this.Assignments.CurrentStage.list\r\n            .UserActionAssignments()\r\n            .find(\r\n              (assignment) => assignment.Status == assignmentStates.InProgress\r\n            );\r\n          if (activeAssignments) {\r\n            if (\r\n              this.Assignments.CurrentStage.Validation.Errors.indexOf(\r\n                activeAssignmentsError\r\n              ) < 0\r\n            ) {\r\n              this.Assignments.CurrentStage.Validation.Errors.push(\r\n                activeAssignmentsError\r\n              );\r\n            }\r\n            return true;\r\n          } else {\r\n            this.Assignments.CurrentStage.Validation.Errors.remove(\r\n              activeAssignmentsError\r\n            );\r\n            return false;\r\n          }\r\n        }),\r\n      },\r\n      UserCanAdvance: ko.pureComputed(() => {\r\n        return this.Assignments.CurrentStage.list.UserActionAssignments()\r\n          .length;\r\n      }),\r\n      AssignmentComponents: ko.pureComputed(() => {\r\n        return this.Assignments.CurrentStage.list\r\n          .UserActionAssignments()\r\n          .map((assignment) => {\r\n            return {\r\n              request: this,\r\n              assignment,\r\n              addAssignment: this.Assignments.addNew,\r\n              completeAssignment: this.Assignments.complete,\r\n              errors: this.Assignments.CurrentStage.Validation.Errors,\r\n              actionComponentName: assignment.getComponentName(),\r\n            };\r\n          });\r\n      }),\r\n    },\r\n    refresh: async () => {\r\n      this.Assignments.AreLoading(true);\r\n      // Create a list of Assignment instances from raw entities\r\n      const assignments = await this._context.Assignments.GetItemsByFolderPath(\r\n        this.getRelativeFolderPath(),\r\n        Assignment.Views.All\r\n      );\r\n      // const assignments =\r\n      //   assignmentObjs?.map(Assignment.CreateFromObject) ?? [];\r\n      // Load request orgs\r\n      assignments.map(\r\n        (asg) =>\r\n          (asg.RequestOrg =\r\n            RequestOrg.FindInStore(asg.RequestOrg) ?? asg.RequestOrg)\r\n      );\r\n\r\n      this.Assignments.list.All(assignments);\r\n      // if (window.DEBUG) console.log(`Request ${this.ID} Assignments Updated`);\r\n      this.Assignments.HaveLoaded(true);\r\n      this.Assignments.AreLoading(false);\r\n    },\r\n    userCanAssign: ko.pureComputed(() => {\r\n      // TODO: Major\r\n      // If user is a member of the request org assigned to this stage.\r\n      if (!this.State.IsActive()) return false;\r\n      const assignedOrg = this.Pipeline.Stage()?.RequestOrg;\r\n      if (!assignedOrg) return false;\r\n      const user = currentUser();\r\n      if (user.isInRequestOrg(assignedOrg)) return true;\r\n      return false;\r\n    }),\r\n    addNew: async (assignment = null) => {\r\n      if (!this.ID || !assignment) return;\r\n\r\n      // Overwrite our title\r\n      assignment.Title = this.Title;\r\n\r\n      if (!assignment.RequestOrg) {\r\n        assignment.RequestOrg = this.Pipeline.Stage()?.RequestOrg;\r\n      }\r\n\r\n      if (!assignment.PipelineStage) {\r\n        assignment.PipelineStage = this.Pipeline.Stage();\r\n      }\r\n\r\n      assignment.CustomComponent = assignment.PipelineStage.ActionComponentName;\r\n\r\n      assignment.Status = assignment.Role.initialStatus;\r\n\r\n      const folderPath = this.getRelativeFolderPath();\r\n\r\n      await this._context.Assignments.AddEntity(assignment, folderPath, this);\r\n      // Have to await this for the next permissions set.\r\n      await this.Assignments.refresh();\r\n      // update the Request Orgs\r\n      if (\r\n        !this.RequestOrgs().find((org) => org.ID == assignment.RequestOrg.ID)\r\n      ) {\r\n        this.RequestOrgs.push(assignment.RequestOrg);\r\n        await this._context.Requests.UpdateEntity(this, [\"RequestOrgs\"]);\r\n      }\r\n      //this.request.ActivityLog.assignmentAdded(assignment);\r\n      this.ActivityQueue.push({\r\n        activity: actionTypes.Assigned,\r\n        data: assignment,\r\n      });\r\n\r\n      if (assignment.Role?.permissions) {\r\n        // assignment.Assignee.Roles = [assignment.Role.permissions];\r\n        this.Authorization.ensureAccess([\r\n          [assignment.Assignee, assignment.Role.permissions],\r\n        ]);\r\n      }\r\n    },\r\n    view: (assignment) => {\r\n      //console.log(\"viewing\", attachment);\r\n      this._context.Assignments.ShowForm(\r\n        \"DispForm.aspx\",\r\n        \"View \" + assignment.Assignee.Title,\r\n        { id: assignment.ID }\r\n      );\r\n    },\r\n    remove: async (assignment) => {\r\n      if (!confirm(\"Are you sure you want to remove this assignment?\")) return;\r\n      try {\r\n        await this._context.Assignments.RemoveEntity(assignment);\r\n      } catch (e) {\r\n        console.error(\"Unable to remove assignment\", e);\r\n        return;\r\n      }\r\n      this.Assignments.refresh();\r\n\r\n      //this.request.ActivityLog.assignmentRemoved(assignment);\r\n      this.ActivityQueue.push({\r\n        activity: actionTypes.Unassigned,\r\n        data: assignment,\r\n      });\r\n    },\r\n    notify: async (assignment) => {\r\n      this.ActivityQueue.push({\r\n        activity: actionTypes.Assigned,\r\n        data: assignment,\r\n      });\r\n    },\r\n    complete: async (assignment, action, refresh = true) => {\r\n      const updateEntity = {\r\n        ID: assignment.ID,\r\n        Status: assignmentStates[action],\r\n        Comment: assignment.Comment,\r\n        CompletionDate: new Date().toISOString(),\r\n        ActionTaker: currentUser(),\r\n      };\r\n      await this._context.Assignments.UpdateEntity(updateEntity);\r\n\r\n      await this.resumeRequest();\r\n\r\n      this.ActivityQueue.push({\r\n        activity: actionTypes[action],\r\n        data: updateEntity,\r\n      });\r\n\r\n      if (refresh) this.Assignments.refresh();\r\n    },\r\n    createStageAssignments: async (stage = this.Pipeline.Stage()) => {\r\n      if (!stage?.ActionType) return;\r\n\r\n      if (stage.ActionType == actionTypes.Closed) return;\r\n\r\n      // If this stage is already assigned (e.g. from a previous assignment stage), skip it\r\n      if (\r\n        this.Assignments.list\r\n          .All()\r\n          .find((assignment) => assignment.PipelineStage?.ID == stage.ID)\r\n      )\r\n        return;\r\n\r\n      if (\r\n        stage.AssignmentFunction &&\r\n        AssignmentFunctions[stage.AssignmentFunction]\r\n      ) {\r\n        try {\r\n          const newAssignments = AssignmentFunctions[stage.AssignmentFunction](\r\n            this,\r\n            stage\r\n          );\r\n          await Promise.all(\r\n            newAssignments.map((newAssignment) =>\r\n              this.Assignments.addNew(newAssignment)\r\n            )\r\n          );\r\n        } catch (e) {\r\n          console.warn(\"Error creating stage assignments\", stage);\r\n          alert(e.message);\r\n          return;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (stage.WildCardAssignee) {\r\n        try {\r\n          const newAssignments = AssignmentFunctions.getWildcard(\r\n            this,\r\n            stage,\r\n            stage.WildCardAssignee\r\n          );\r\n          await Promise.all(\r\n            newAssignments.map((newAssignment) =>\r\n              this.Assignments.addNew(newAssignment)\r\n            )\r\n          );\r\n        } catch (e) {\r\n          console.warn(\"Error creating stage assignments\", stage);\r\n          alert(e.message);\r\n          return;\r\n        }\r\n        return;\r\n      }\r\n\r\n      const newAssignment = new Assignment({\r\n        Assignee:\r\n          stage.Assignee ?? RequestOrg.FindInStore(stage.RequestOrg)?.UserGroup,\r\n        RequestOrg: stage.RequestOrg,\r\n        PipelineStage: stage,\r\n        IsActive: true,\r\n        Role: stageActionRoleMap[stage.ActionType],\r\n        CustomComponent: stage.ActionComponentName,\r\n      });\r\n\r\n      await this.Assignments.addNew(newAssignment);\r\n    },\r\n  };\r\n\r\n  Actions = {\r\n    AreLoading: ko.observable(),\r\n    list: {\r\n      All: ko.observableArray(),\r\n    },\r\n    refresh: async () => {\r\n      const refreshActionsTask = addTask(taskDefs.refreshActions);\r\n      if (!this.ID) return;\r\n      this.Actions.AreLoading(true);\r\n      const actions = await this._context.Actions.GetItemsByFolderPath(\r\n        this.getRelativeFolderPath(),\r\n        Action.Views.All\r\n      );\r\n      this.Actions.list.All(actions);\r\n      this.Actions.AreLoading(false);\r\n      finishTask(refreshActionsTask);\r\n    },\r\n    addNew: async (action) => {\r\n      if (!this.ID || !action) return;\r\n      const newActionTask = addTask(taskDefs.newAction);\r\n      const folderPath = this.getRelativeFolderPath();\r\n      // const actionObj = Object.assign(new Action(), action);\r\n      action.PipelineStage = action.PipelineStage ?? this.Pipeline.Stage();\r\n      await this._context.Actions.AddEntity(action, folderPath, this.request);\r\n      this.Actions.refresh();\r\n      finishTask(newActionTask);\r\n    },\r\n    showDialog: () => {\r\n      const dialog = document.getElementById(\"dialog-action-log\");\r\n      dialog.showModal();\r\n    },\r\n    closeDialog: () => {\r\n      const dialog = document.getElementById(\"dialog-action-log\");\r\n      dialog.close();\r\n    },\r\n  };\r\n\r\n  ActivityQueue = ko.observableArray();\r\n  ActivityLogger = new ActivityLogComponent(this.Actions, this.ActivityQueue);\r\n  IsLoading = ko.observable();\r\n  LoadedAt = ko.observable();\r\n\r\n  activityQueueWatcher = (changes) => {\r\n    // Filter out the items in our activity queue that are new additions\r\n    const activities = changes\r\n      .filter((change) => change.status == \"added\")\r\n      .map((change) => change.value);\r\n\r\n    // iterate through our actions: {activity, data}\r\n    activities.map(async (action) => {\r\n      emitRequestNotification(this, action);\r\n      switch (action.activity) {\r\n        case actionTypes.Assigned:\r\n        case actionTypes.Unassigned:\r\n          break;\r\n        case actionTypes.Rejected:\r\n          {\r\n            // Request was rejected, close it out\r\n            console.warn(\"Closing request\");\r\n            //\r\n            await this.closeAndFinalize(requestStates.rejected);\r\n          }\r\n          break;\r\n        case actionTypes.Advanced:\r\n          break;\r\n      }\r\n    });\r\n  };\r\n\r\n  Validation = {\r\n    validate: () => {\r\n      this.Validation.WasValidated(true);\r\n      // 1. Validate Header\r\n      this.Validation.validateHeader();\r\n      // 2. Validate Body\r\n      this.Validation.validateBody();\r\n      return this.Validation.IsValid();\r\n    },\r\n    validateHeader: () => {\r\n      this.FieldMap.RequestDescription.validate();\r\n    },\r\n    validateBody: () => {\r\n      return this.RequestBodyBlob?.Value()?.validate();\r\n    },\r\n    reset: () => this.Validation.WasValidated(false),\r\n    Errors: {\r\n      Request: ko.pureComputed(() => {\r\n        let errors = [];\r\n        // Check if there are required attachments\r\n\r\n        errors = errors.concat(this.Attachments.Validation.Errors());\r\n\r\n        // Required description\r\n        errors = errors.concat(this.FieldMap.RequestDescription.Errors());\r\n\r\n        return errors;\r\n      }),\r\n      ServiceType: ko.pureComputed(() => {\r\n        return this.RequestBodyBlob?.Value()?.Errors() ?? [];\r\n      }),\r\n      All: ko.pureComputed(() => [\r\n        ...this.Validation.Errors.Request(),\r\n        ...this.Validation.Errors.ServiceType(),\r\n        ...this.Validation.CurrentStage.Errors(),\r\n      ]),\r\n    },\r\n    IsValid: ko.pureComputed(() => !this.Validation.Errors.All().length),\r\n    WasValidated: ko.observable(false),\r\n    CurrentStage: {\r\n      IsValid: () => this.Assignments.CurrentStage.Validation.IsValid(),\r\n      Errors: ko.pureComputed(() =>\r\n        this.Assignments.CurrentStage.Validation.Errors()\r\n      ),\r\n    },\r\n  };\r\n\r\n  Authorization = {\r\n    currentUserIsActionOffice: ko.pureComputed(() => {\r\n      return this.Assignments.list\r\n        .CurrentUserAssignments()\r\n        .find((assignment) =>\r\n          [assignmentRoles.ActionResolver, assignmentRoles.Approver].includes(\r\n            assignment.ActionType\r\n          )\r\n        );\r\n    }),\r\n    currentUserCanAdvance: ko.pureComputed(() => {\r\n      return (\r\n        this.State.IsActive() &&\r\n        this.Assignments.CurrentStage.list.UserActionAssignments().length\r\n      );\r\n    }),\r\n    currentUserCanSupplement: ko.pureComputed(() => {\r\n      if (this.DisplayMode() == DisplayModes.New) return true;\r\n      // determines whether the current user can add attachments or modify\r\n      const user = currentUser();\r\n      if (!user) {\r\n        console.warn(\"Current user not set!\");\r\n        return false;\r\n      }\r\n      if (!this.State.IsActive()) return false;\r\n      if (this.Assignments.list.CurrentUserAssignments().length) return true;\r\n      if (this.RequestorInfo.Requestor()?.ID == user.ID) return true;\r\n    }),\r\n    currentUserCanClose: ko.pureComputed(() => {\r\n      return (\r\n        this.State.IsActive() &&\r\n        this.Assignments.list\r\n          .CurrentUserAssignments()\r\n          .find((assignment) => assignment.isActionable())\r\n      );\r\n    }),\r\n    ensureAccess: async (accessValuePairs) => {\r\n      const relFolderPath = this.getRelativeFolderPath();\r\n      const listRefs = this.getAllListRefs();\r\n      await Promise.all(\r\n        listRefs.map(async (listRef) => {\r\n          // Apply folder permissions\r\n          await listRef.EnsureFolderPermissions(\r\n            relFolderPath,\r\n            accessValuePairs\r\n          );\r\n        })\r\n      );\r\n    },\r\n    setReadonly: async () => {\r\n      const relFolderPath = this.getRelativeFolderPath();\r\n      const listRefs = this.getAllListRefs();\r\n      await Promise.all(\r\n        listRefs.map(async (listRef) => {\r\n          // Apply folder permissions\r\n          await listRef.SetFolderReadOnly(relFolderPath);\r\n        })\r\n      );\r\n    },\r\n  };\r\n\r\n  getAppLink = () =>\r\n    `${Router.appRoot}?reqId=${this.Title}&tab=${Tabs.RequestDetail}`;\r\n\r\n  getAppLinkElement = () =>\r\n    `<a href=\"${this.getAppLink()}\" target=\"blank\">${this.Title}</a>`;\r\n\r\n  /**\r\n   * Returns the generic relative path without the list/library name\r\n   * e.g. EX/2929-20199\r\n   */\r\n  getRelativeFolderPath = ko.pureComputed(() => {\r\n    if (this.State.Status() == requestStates.draft)\r\n      return this.getRelativeFolderPathStaging();\r\n\r\n    const requestorOffice = this.RequestorInfo.Office()?.Title.replace(\r\n      \"/\",\r\n      \"_\"\r\n    );\r\n    return `${requestorOffice}/${this.ObservableTitle()}`;\r\n  });\r\n\r\n  getRelativeFolderPathStaging = () => {\r\n    return `Staged/${this.ObservableTitle()}`;\r\n  };\r\n\r\n  getFolderUrl = ko.pureComputed(() =>\r\n    this._context.Requests.GetFolderUrl(this.getRelativeFolderPath())\r\n  );\r\n\r\n  getFolderPermissions = () => getRequestFolderPermissions(this);\r\n\r\n  calculateEffectiveSubmissionDate = () => {\r\n    const submissionDate = this.Dates.Submitted.get() ?? new Date();\r\n    if (\r\n      submissionDate.getUTCHours() >= 19 ||\r\n      submissionDate.getUTCHours() < 4\r\n    ) {\r\n      console.log(\"its after 3, this is submitted tomorrow\");\r\n      const tomorrow = businessDaysFromDate(submissionDate, 1);\r\n      tomorrow.setUTCHours(13);\r\n      tomorrow.setUTCMinutes(0);\r\n      return tomorrow;\r\n    } else {\r\n      return submissionDate;\r\n    }\r\n  };\r\n\r\n  // Controls\r\n  refreshAll = async () => {\r\n    const refreshId = addTask(taskDefs.refresh);\r\n    this.IsLoading(true);\r\n    await this.refreshRequest();\r\n    // These can be started when we have the ID\r\n    const relatedRecordPromises = [\r\n      this.Attachments.refresh(),\r\n      this.Actions.refresh(),\r\n      this.Comments.refresh(),\r\n      this.Assignments.refresh(),\r\n    ];\r\n\r\n    // Assignments are dependent on the serviceType being loaded\r\n\r\n    await Promise.all(relatedRecordPromises);\r\n    this.LoadedAt(new Date());\r\n    this.IsLoading(false);\r\n    finishTask(refreshId);\r\n  };\r\n\r\n  refreshRequest = async () => {\r\n    if (!this.ID) return;\r\n    await this._context.Requests.LoadEntity(this);\r\n  };\r\n\r\n  getAllListRefs() {\r\n    const listRefs = this.getInitialListRefs().concat([\r\n      this._context.Comments,\r\n      this._context.Attachments,\r\n    ]);\r\n    return listRefs;\r\n  }\r\n\r\n  getInitialListRefs() {\r\n    const listRefs = [\r\n      this._context.Requests,\r\n      this._context.Actions,\r\n      this._context.Assignments,\r\n      this._context.Notifications,\r\n    ];\r\n    // if (this.RequestType?.getListRef()) {\r\n    //   listRefs.push(this.RequestType.getListRef());\r\n    // }\r\n    return listRefs;\r\n  }\r\n\r\n  pauseRequest = async (reason = \"Not Provided\") => {\r\n    // TODO: Clear and reset Est. Completion Date\r\n    this.State.InternalStatus(reason);\r\n    // this.Dates.EstClosed.Value(null);\r\n\r\n    await this._context.Requests.UpdateEntity(this, [\"InternalStatus\"]);\r\n\r\n    this.ActivityQueue.push({\r\n      activity: actionTypes.Paused,\r\n      data: reason,\r\n    });\r\n  };\r\n\r\n  resumeRequest = async () => {\r\n    if (!this.State.IsPaused()) return;\r\n\r\n    this.State.InternalStatus(requestInternalStates.inProgress);\r\n\r\n    await this._context.Requests.UpdateEntity(this, [\"InternalStatus\"]);\r\n\r\n    this.ActivityQueue.push({\r\n      activity: actionTypes.Resumed,\r\n      data: this,\r\n    });\r\n  };\r\n\r\n  closeAndFinalize = async (status) => {\r\n    const closeId = addTask(taskDefs.closing);\r\n    //1. set all assignments to inactive\r\n    this.Assignments.list.InProgress().map((assignment) => {\r\n      this.Assignments.complete(assignment, assignmentStates.Cancelled, false);\r\n      // assignment.Status = assignmentStates.Cancelled;\r\n      // this._context.Assignments.UpdateEntity(assignment);\r\n    });\r\n\r\n    //2. Set request properties\r\n    const closedStage = PipelineStage.GetCompletedStage();\r\n\r\n    const thisStage = this.Pipeline.Stage();\r\n    this.Pipeline.PreviousStage(thisStage);\r\n    this.Pipeline.Stage(closedStage);\r\n\r\n    this.State.Status(status);\r\n    this.State.InternalStatus(status);\r\n    this.State.IsActive(false);\r\n    this.Dates.Closed.set(new Date());\r\n    await this._context.Requests.UpdateEntity(this, [\r\n      \"PipelineStage\",\r\n      \"PipelineStagePrev\",\r\n      \"RequestStatus\",\r\n      \"InternalStatus\",\r\n      \"IsActive\",\r\n      \"ClosedDate\",\r\n    ]);\r\n    // 3. Emit closeout action\r\n    this.ActivityQueue.push({\r\n      activity: actionTypes.Closed,\r\n      data: this,\r\n    });\r\n    // 4. Update Permissions;\r\n    await this.Authorization.setReadonly();\r\n    this.refreshAll();\r\n    finishTask(closeId);\r\n  };\r\n\r\n  // FieldMaps are used by the ApplicationDbContext and define\r\n  // how to store and retrieve the entity properties\r\n  FieldMap = {\r\n    ID: this.ObservableID,\r\n    Title: this.ObservableTitle,\r\n    RequestSubject: this.RequestSubject,\r\n    RequestDescription: this.RequestDescription,\r\n    Author: this.Author,\r\n    Requestor: {\r\n      set: (val) => this.RequestorInfo.Requestor(People.Create(val)),\r\n      get: this.RequestorInfo.Requestor,\r\n    },\r\n    RequestorPhone: this.RequestorInfo.Phone,\r\n    RequestorEmail: this.RequestorInfo.Email,\r\n    RequestorOfficeSymbol: this.RequestorInfo.OfficeSymbol,\r\n    RequestingOffice: {\r\n      set: (val) => this.RequestorInfo.Office(RequestOrg.Create(val)),\r\n      get: this.RequestorInfo.Office,\r\n    },\r\n    IsActive: this.State.IsActive,\r\n    PipelineStage: {\r\n      factory: PipelineStage.FindInStore,\r\n      obs: this.Pipeline.Stage,\r\n    },\r\n    PipelineStagePrev: {\r\n      factory: PipelineStage.FindInStore,\r\n      obs: this.Pipeline.PreviousStage,\r\n    },\r\n    RequestStatus: this.State.Status,\r\n    InternalStatus: this.State.InternalStatus,\r\n    RequestSubmitted: this.Dates.Submitted,\r\n    EstClosedDate: this.Dates.EstClosed,\r\n    ClosedDate: this.Dates.Closed,\r\n    RequestOrgs: {\r\n      set: (inputArr) =>\r\n        this.RequestOrgs(\r\n          (inputArr.results ?? inputArr).map((val) => RequestOrg.Create(val))\r\n        ),\r\n      get: this.RequestOrgs,\r\n    },\r\n    ServiceType: {\r\n      set: (val) => {\r\n        const type = ServiceType.FindInStore(val);\r\n        this.RequestType = type;\r\n      },\r\n      get: () => this.RequestType,\r\n    }, // {id, title},\r\n    RequestBodyBlob: {\r\n      get: () => this.RequestBodyBlob?.get(),\r\n      set: (val) => {\r\n        if (!this.RequestBodyBlob) return;\r\n        this.RequestBodyBlob.set(val);\r\n        const requestBodyEntity = this.RequestBodyBlob.Value();\r\n        if (requestBodyEntity?.setRequestContext)\r\n          requestBodyEntity.setRequestContext(this);\r\n      },\r\n    },\r\n  };\r\n\r\n  static CreateByServiceType({ ServiceType }) {\r\n    const newRequest = new RequestEntity({ ServiceType });\r\n    newRequest.Author.set(currentUser());\r\n\r\n    return newRequest;\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"RequestDescription\",\r\n      \"Requestor\",\r\n      \"RequestorPhone\",\r\n      \"RequestorEmail\",\r\n      \"RequestorOfficeSymbol\",\r\n      \"RequestingOffice\",\r\n      \"IsActive\",\r\n      \"PipelineStage\",\r\n      \"PipelineStagePrev\",\r\n      \"RequestStatus\",\r\n      \"InternalStatus\",\r\n      \"RequestSubmitted\",\r\n      \"EstClosedDate\",\r\n      \"ClosedDate\",\r\n      \"RequestOrgs\",\r\n      \"ServiceType\",\r\n      \"RequestBodyBlob\",\r\n      \"Author\",\r\n    ],\r\n    ByStatus: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ServiceType\",\r\n      \"RequestorOfficeSymbol\",\r\n      \"RequestingOffice\",\r\n      \"RequestOrgs\",\r\n      \"Requestor\",\r\n      \"RequestSubmitted\",\r\n      \"PipelineStage\",\r\n      \"EstClosedDate\",\r\n      \"ClosedDate\",\r\n      \"RequestStatus\",\r\n      \"InternalStatus\",\r\n      \"RequestOrgs\",\r\n    ],\r\n    ByServiceType: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ServiceType\",\r\n      \"RequestorOfficeSymbol\",\r\n      \"RequestingOffice\",\r\n      \"Requestor\",\r\n      \"RequestStatus\",\r\n      \"RequestBodyBlob\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Requests\",\r\n    title: \"Requests\",\r\n    fields: RequestEntity.Views.All,\r\n  };\r\n}\r\n", "export * from \"./AccessDetail.js\";\r\nexport * from \"./BaseServiceDetail.js\";\r\nexport * from \"./CHAccessDetail.js\";\r\nexport * from \"./ch_access_fletc/CHAccessFLETCDetail.js\";\r\nexport * from \"./CHConferenceDetail.js\";\r\nexport * from \"./CHEquipRepairDetail.js\";\r\nexport * from \"./CHFurnitureDetail.js\";\r\nexport * from \"./CHHRTrainingDetail.js\";\r\nexport * from \"./CHMobileDetail.js\";\r\nexport * from \"./CHNoticeDetail.js\";\r\nexport * from \"./CHReconfigDetail.js\";\r\nexport * from \"./CHSuppliesDetail.js\";\r\nexport * from \"./CHTeleworkDetail.js\";\r\nexport * from \"./CHTransportDetail.js\";\r\nexport * from \"./CHVoicemailDetail.js\";\r\nexport * from \"./CHVoicemailDetail.js\";\r\nexport * from \"./ContractorSupplementDetail.js\";\r\nexport * from \"./DVCSetupDetail.js\";\r\nexport * from \"./FPCashMgmtDetail.js\";\r\nexport * from \"./FPCashierOperationsDetail.js\";\r\nexport * from \"./FPCodesDetail.js\";\r\nexport * from \"./FPCollectionsDetail.js\";\r\nexport * from \"./FPTravelDetail.js\";\r\nexport * from \"./ITHardwareDetail.js\";\r\nexport * from \"./IronKeyDetail.js\";\r\nexport * from \"./LocksmithDetail.js\";\r\nexport * from \"./MobileDetail.js\";\r\nexport * from \"./MotorPoolDetail.js\";\r\nexport * from \"./OvertimeDetail.js\";\r\nexport * from \"./PresentationDetail.js\";\r\nexport * from \"./RequisitionDetail.js\";\r\nexport * from \"./SDMAdminRequestDetail.js\";\r\nexport * from \"./SDMTierIDetail.js\";\r\nexport * from \"./TeleworkDetail.js\";\r\nexport * from \"./ch_overtime/CHOvertimeDetail.js\";\r\nexport * from \"./diplomatic_passport/DiplomaticPassportDetail.js\";\r\nexport * from \"./fp_fiscal_irreg/FPFiscalIrregDetail.js\";\r\nexport * from \"./it_software/ITSoftware.js\";\r\nexport * from \"./property_space/PropertySpaceDetail.js\";\r\nexport * from \"./template/TemplateDetail.js\";\r\n", "import { ConstrainedEntity } from \"../primitives/index.js\";\r\n\r\nexport class BaseServiceDetail extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n    if (params?.Request) this.Request = params.Request;\r\n  }\r\n\r\n  Request;\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Request: this.Request,\r\n  };\r\n}\r\n", "import { DateField, SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class Access extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  accessTypeOpts = [\"Normal work day\", \"24/7\", \"FLETC\", \"Other\"];\r\n\r\n  employeeTypeOpts = [\"CGFS Government\", \"CGFS Contractor\", \"Other\"];\r\n\r\n  AccessType = new SelectField({\r\n    isRequired: true,\r\n    displayName: \"Access Type\",\r\n    options: this.accessTypeOpts,\r\n  });\r\n  EmployeeType = new SelectField({\r\n    isRequired: true,\r\n    displayName: \"Employee Type\",\r\n    options: this.employeeTypeOpts,\r\n  });\r\n  FullName = new TextField({ displayName: \"Full Name\", isRequired: true });\r\n  BadgeNum = new TextField({ displayName: \"Badge Num\", isRequired: true });\r\n  ExpirationDate = new DateField({\r\n    displayName: \"Expiration Date\",\r\n    isRequired: true,\r\n  });\r\n  Locations = new TextField({ displayName: \"Locations\", isRequired: true });\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    AccessType: this.AccessType,\r\n    EmployeeType: this.EmployeeType,\r\n    FullName: this.FullName,\r\n    BadgeNum: this.BadgeNum,\r\n    ExpirationDate: this.ExpirationDate,\r\n    Locations: this.Locations,\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"AccessType\", // CHS\r\n      \"EmployeeType\",\r\n      \"FullName\",\r\n      \"BadgeNum\",\r\n      \"ExpirationDate\", // DC\r\n      \"Locations\",\r\n      \"Request\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_access\",\r\n    title: \"st_access\",\r\n    isServiceType: true,\r\n    fields: Access.Views.All,\r\n  };\r\n\r\n  static uid = \"access\";\r\n}\r\n", "import {\r\n  BlobField,\r\n  SelectField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  TextField,\r\n  PeopleField,\r\n} from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\nimport { ConstrainedEntity } from \"../primitives/index.js\";\r\n\r\nexport class CH_Access extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  accessTypeOpts = [\"Normal work day\", \"24/7\", \"Permanant\", \"Temporary\"];\r\n\r\n  employeeTypeOpts = [\"CGFS Government\", \"CGFS Contractor\", \"Other\"];\r\n\r\n  AccessDates = new BlobField({\r\n    displayName: \"Access Dates\",\r\n    entityType: AccessDate,\r\n    multiple: true,\r\n    width: 12,\r\n    isRequired: true,\r\n  });\r\n\r\n  AccessType = new SelectField({\r\n    isRequired: true,\r\n    displayName: \"Access Type\",\r\n    options: this.accessTypeOpts,\r\n  });\r\n\r\n  BadgeNum = new TextField({ displayName: \"Badge Num\", isRequired: true });\r\n\r\n  EmployeeType = new SelectField({\r\n    isRequired: true,\r\n    displayName: \"Employee Type\",\r\n    options: this.employeeTypeOpts,\r\n  });\r\n\r\n  // FullName = new TextField({ displayName: \"Full Name\", isRequired: true });\r\n\r\n  // Locations = new TextField({ displayName: \"Locations\", isRequired: true });\r\n\r\n  Supervisor = new PeopleField({\r\n    displayName: \"Supervisor\",\r\n    isRequired: true,\r\n  });\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    AccessDates: this.AccessDates,\r\n    AccessType: this.AccessType,\r\n    BadgeNum: this.BadgeNum,\r\n    EmployeeType: this.EmployeeType,\r\n    FullName: this.FullName,\r\n    Locations: this.Locations,\r\n    Supervisor: this.Supervisor,\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"AccessType\", // CHS\r\n      \"AccessDates\",\r\n      \"BadgeNum\",\r\n      \"EmployeeType\",\r\n      \"FullName\",\r\n      \"Locations\",\r\n      \"Supervisor\",\r\n      \"Request\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_access\",\r\n    title: \"st_ch_access\",\r\n    isServiceType: true,\r\n    fields: CH_Access.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_access\";\r\n}\r\n\r\nclass AccessDate extends ConstrainedEntity {\r\n  FieldMap = {\r\n    StartDate: new DateField({\r\n      displayName: \"Start Date\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n    }),\r\n    EndDate: new DateField({\r\n      displayName: \"End Date\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n    }),\r\n  };\r\n}\r\n", "import { ResolverModule, html } from \"../../../components/index.js\";\r\n\r\nconst generateEmailTemplate = html`\r\n  <!-- ko if: assignment.Status != assignmentStates.Completed -->\r\n  <div class=\"card m-1\">\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <h6>You have been designated as an action office resolver:</h6>\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <div>\r\n            Assignee: <span data-bind=\"text: assignment.Assignee?.Title\"></span>\r\n          </div>\r\n          <div>\r\n            Request Org:\r\n            <span data-bind=\"text: assignment.RequestOrg?.Title\"></span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            Please click generate and send the email, then click confirm to\r\n            proceed!\r\n          </p>\r\n          <div class=\"d-flex justify-content-start\">\r\n            <a\r\n              target=\"_blank\"\r\n              class=\"btn btn-link\"\r\n              data-bind=\"attr: {href: linkGenerateEmail}\"\r\n              title=\"Generate email for Access Control\"\r\n            >\r\n              Generate\r\n            </a>\r\n\r\n            <button\r\n              class=\"ms-3 btn btn-success\"\r\n              title=\"Confirm email has been sent\"\r\n              data-bind=\"click: completeHandler\"\r\n            >\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /ko -->\r\n  <!-- ko if: assignment.Status == assignmentStates.Completed -->\r\n  <div class=\"alert alert-success\">\r\n    <strong>Thank you for confirming!</strong>\r\n  </div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class CH_GenerateAccessControlEmailActions extends ResolverModule {\r\n  constructor(params) {\r\n    super(params);\r\n    this.request = params.request;\r\n    this.serviceType = params.request.RequestBodyBlob?.Value();\r\n  }\r\n\r\n  linkGenerateEmail = ko.pureComputed(() => {\r\n    const subject = `New FLETC Access Request`;\r\n    const to = \"backlundpf@state.gov\";\r\n    const cc = \"\";\r\n\r\n    const body =\r\n      `A new access request has been submitted:\\n` +\r\n      `Full Name: \\t${this.serviceType.FieldMap.FullName.toString()}` +\r\n      `Employee Type: \\t${this.serviceType.FieldMap.EmployeeType.toString()}`;\r\n\r\n    const link =\r\n      `https://outlook.office.com/mail/deeplink/compose?` +\r\n      `to=${to}&cc=${cc}` +\r\n      `&subject=${subject}&body=${body}`;\r\n\r\n    return link;\r\n  });\r\n\r\n  static name = \"generate-access-control-email\";\r\n  static template = generateEmailTemplate;\r\n}\r\n", "import { PeopleField, SelectField, TextField } from \"../../fields/index.js\";\r\nimport { registerComponentFromConstructor } from \"../../infrastructure/RegisterComponents.js\";\r\n\r\nimport { BaseServiceDetail } from \"../BaseServiceDetail.js\";\r\nimport { CH_GenerateAccessControlEmailActions } from \"./components/GenerateAccessControlEmailAction.js\";\r\n\r\n// We just do this here so it get's pull in on the import chain\r\nregisterComponentFromConstructor(CH_GenerateAccessControlEmailActions);\r\n\r\nexport class AccessFletc extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Supervisor: new PeopleField({\r\n      displayName: \"Supervisor\",\r\n      isRequired: true,\r\n    }),\r\n    EmployeeType: new SelectField({\r\n      displayName: \"Employee Type\",\r\n      options: [\"Direct Hire\", \"Contractor\", \"Visitor\"],\r\n      isRequired: true,\r\n    }),\r\n    FullName: new TextField({\r\n      displayName: \"Full Name\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Supervisor\", \"EmployeeType\", \"FullName\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_access_fletc\",\r\n    title: \"st_ch_access_fletc\",\r\n    fields: AccessFletc.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_accessFletc\";\r\n}\r\n", "import {\r\n  BlobField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  SelectField,\r\n  TextAreaField,\r\n} from \"../fields/index.js\";\r\n\r\nimport { ConstrainedEntity } from \"../primitives/index.js\";\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Conference extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    ConferenceDates: new BlobField({\r\n      displayName: \"Conference Dates\",\r\n      entityType: ConferenceDate,\r\n      multiple: true,\r\n      width: 12,\r\n      isRequired: true,\r\n    }),\r\n    AVNeeds: new TextAreaField({\r\n      displayName: \"A/V Needs\",\r\n      isRequired: true,\r\n    }),\r\n    ConferenceRoom: new SelectField({\r\n      displayName: \"Conference Room\",\r\n      options: [\r\n        \"Bldg. F Auditorium (Side A & B)\",\r\n        \"Bldg. F Auditorium (Side A Only)\",\r\n        \"Bldg. F Auditorium (Side B Only)\",\r\n        \"Bldg. F Dining Rooms\",\r\n        // \"Bldg. C VTC Room (C128)\",\r\n        // \"Bldg. C Auditorium (C171)\",\r\n      ],\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static uid = \"ch_conference\";\r\n}\r\n\r\nclass ConferenceDate extends ConstrainedEntity {\r\n  FieldMap = {\r\n    StartDate: new DateField({\r\n      displayName: \"Start Date\",\r\n      type: dateFieldTypes.datetime,\r\n      isRequired: true,\r\n    }),\r\n    EndDate: new DateField({\r\n      displayName: \"End Date\",\r\n      type: dateFieldTypes.datetime,\r\n      isRequired: true,\r\n    }),\r\n  };\r\n}\r\n", "import { SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Equip_Repair extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Location: new TextField({\r\n      displayName: \"Location\",\r\n      isRequired: true,\r\n    }),\r\n    RepairType: new SelectField({\r\n      isRequired: true,\r\n      displayName: \"Type\",\r\n      options: [\"Copier\", \"Fax Machine\", \"Appliance\", \"Furniture\", \"Other\"],\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Location\", \"RepairType\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_equip_repair\",\r\n    title: \"st_ch_equip_repair\",\r\n    fields: CH_Equip_Repair.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_equip_repair\";\r\n}\r\n", "import { PeopleField, SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Furniture extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Location: new TextField({\r\n      isRequired: true,\r\n      displayName: \"Location\",\r\n    }),\r\n    FurnitureType: new SelectField({\r\n      isRequired: true,\r\n      displayName: \"Type\",\r\n      options: [\r\n        \"Desk Adjustment\",\r\n        \"Chair Adjustment\",\r\n        \"Filing Cabinet\",\r\n        \"Other\",\r\n      ],\r\n    }),\r\n    Supervisor: new PeopleField({\r\n      displayName: \"Supervisor\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Location\", \"FurnitureType\", \"Supervisor\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_furniture\",\r\n    title: \"st_ch_furniture\",\r\n    fields: CH_Furniture.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_furniture\";\r\n}\r\n", "import {\r\n  DateField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextField,\r\n} from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_HR_Training extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    EmployeeType: new SelectField({\r\n      displayName: \"Employee Type\",\r\n      options: [\"Direct Hire\", \"Contractor\"],\r\n      isRequired: true,\r\n    }),\r\n    CourseTitle: new TextField({\r\n      displayName: \"Course Title\",\r\n      isRequired: true,\r\n    }),\r\n    CourseNumber: new TextField({\r\n      displayName: \"Course Number\",\r\n    }),\r\n    Vendor: new TextField({\r\n      displayName: \"Training Provider/Vendor\",\r\n      isRequired: true,\r\n    }),\r\n    Date1: new DateField({ displayName: \"Course Date\", isRequired: true }),\r\n    Cost: new TextField({\r\n      displayName: \"Training Cost\",\r\n    }),\r\n    HiringManager: new PeopleField({\r\n      displayName: \"Hiring Manager\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"EmployeeType\",\r\n      \"CourseTitle\",\r\n      \"CourseNumber\",\r\n      \"Vendor\",\r\n      \"Date1\",\r\n      \"Cost\",\r\n      \"HiringManager\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_hr_training\",\r\n    title: \"st_ch_hr_training\",\r\n    fields: CH_HR_Training.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_hr_training\";\r\n}\r\n", "import { PeopleField, SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Mobile extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Supervisor: new PeopleField({\r\n      displayName: \"Supervisor\",\r\n      isRequired: true,\r\n    }),\r\n    PhoneNum: new TextField({\r\n      displayName: \"Phone Number\",\r\n    }),\r\n    ServiceType: new SelectField({\r\n      displayName: \"Service Type\",\r\n      options: [\r\n        \"New Temporary (include dates in Justification)\",\r\n        \"Replacement/Upgrade\",\r\n        \"Return/Deactivation\",\r\n        \"Other\",\r\n      ],\r\n      isRequired: true,\r\n    }),\r\n    Serial: new TextField({\r\n      displayName: \"Serial Number\",\r\n    }),\r\n    Carrier: new TextField({\r\n      displayName: \"Carrier\",\r\n      isRequired: false,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"Supervisor\",\r\n      \"PhoneNum\",\r\n      \"ServiceType\",\r\n      \"Serial\",\r\n      \"Carrier\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_mobile\",\r\n    title: \"st_ch_mobile\",\r\n    fields: CH_Mobile.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_mobile\";\r\n}\r\n", "import { SelectField, TextAreaField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Notice extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    DistributionGroup: new SelectField({\r\n      displayName: \"Distribution Group\",\r\n      options: [\r\n        \"All CGFS CHS [Direct hires/contractors]\",\r\n        \"All CHS Bureaus + Passport Center [Direct hires/contractors]\",\r\n        \"GS 15 managing director distro list\",\r\n        \"Supervisors CHS\",\r\n      ],\r\n      isRequired: true,\r\n    }),\r\n    NoticeDates: new TextAreaField({\r\n      displayName: \"Notification Dates\",\r\n      instructions: \"*Please also include reminder dates.\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"DistributionGroup\", \"NoticeDates\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_notice\",\r\n    title: \"st_ch_notice\",\r\n    fields: CH_Notice.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_notice\";\r\n}\r\n", "import { PeopleField, SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Reconfig extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    ReconfigType: new SelectField({\r\n      displayName: \"Service Type\",\r\n      options: [\r\n        \"Office Furniture\",\r\n        \"Construction\",\r\n        \"Electrical Cabling\",\r\n        \"Other\",\r\n      ],\r\n      isRequired: true,\r\n    }),\r\n    Location: new TextField({\r\n      displayName: \"Location\",\r\n      isRequired: true,\r\n    }),\r\n    Supervisor: new PeopleField({\r\n      displayName: \"Supervisor\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Location\", \"ReconfigType\", \"Supervisor\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_reconfig\",\r\n    title: \"st_ch_reconfig\",\r\n    fields: CH_Reconfig.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_reconfig\";\r\n}\r\n", "import { CheckboxField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Supplies extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Vendor: new TextField({\r\n      displayName: \"Supplies Requested\",\r\n      isRequired: true,\r\n    }),\r\n    ItemNum: new TextField({\r\n      displayName: \"Item/Product Num\",\r\n    }),\r\n    Quantity: new TextField({\r\n      displayName: \"Quantity\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Vendor\", \"ItemNum\", \"Quantity\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_supplies\",\r\n    title: \"st_ch_supplies\",\r\n    fields: CH_Supplies.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_supplies\";\r\n}\r\n", "import { PeopleField, SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Telework extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  departmentOptions = requestOrgStore()\r\n    .filter((org) => org.OrgType == OrgTypes.Department)\r\n    .map((org) => org.Title);\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    FullName: new PeopleField({\r\n      displayName: \"Contractor\",\r\n      isRequired: true,\r\n    }),\r\n    ManagerDept: new PeopleField({\r\n      displayName: \"Dept Manager\",\r\n    }),\r\n    ManagerTask: new PeopleField({\r\n      displayName: \"Task Manager\",\r\n      isRequired: true,\r\n    }),\r\n    Department: new SelectField({\r\n      displayName: \"Department\",\r\n      options: this.departmentOptions,\r\n      isRequired: true,\r\n    }),\r\n    RequisitionOrder: new TextField({\r\n      displayName: \"Requisition Number/Task Order\",\r\n      isRequired: true,\r\n    }),\r\n    LaborCategory: new TextField({\r\n      displayName: \"Labor Category (LCAT)\",\r\n      isRequired: true,\r\n    }),\r\n    ContractorType: new SelectField({\r\n      displayName: \"Contractor Type\",\r\n      options: [\"SCA\", \"Non-SCA\"],\r\n      isRequired: true,\r\n    }),\r\n    TeleworkType: new SelectField({\r\n      displayName: \"Telework Type\",\r\n      options: [\"Core\", \"Situational\"],\r\n      isRequired: true,\r\n    }),\r\n    MaxEligibility: new SelectField({\r\n      displayName: \"Max Eligibility\",\r\n      options: [\"80%\", \"60%\", \"40%\", \"20%\", \"None\"],\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"FullName\",\r\n      \"ManagerDept\",\r\n      \"ManagerTask\",\r\n      \"Department\",\r\n      \"RequisitionOrder\",\r\n      \"LaborCategory\",\r\n      \"ContractorType\",\r\n      \"TeleworkType\",\r\n      \"MaxEligibility\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_telework\",\r\n    title: \"st_ch_telework\",\r\n    fields: CH_Telework.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_telework\";\r\n}\r\n", "import { DateField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Transport extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    InvoiceNum: new TextField({\r\n      displayName: \"Invoice Num\",\r\n      isRequired: true,\r\n    }),\r\n    InvoiceAmount: new TextField({\r\n      displayName: \"Invoice Amount\",\r\n      isRequired: true,\r\n    }),\r\n    InvoiceDate: new DateField({\r\n      displayName: \"Invoice Date\",\r\n      isRequired: true,\r\n    }),\r\n    InvoiceReceivedDate: new DateField({\r\n      displayName: \"Invoice Received Date\",\r\n      isRequired: true,\r\n    }),\r\n    Vendor: new TextField({\r\n      displayName: \"Vendor\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"InvoiceNum\",\r\n      \"InvoiceAmount\",\r\n      \"InvoiceDate\",\r\n      \"InvoiceReceivedDate\",\r\n      \"Vendor\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_transport\",\r\n    title: \"st_ch_transport\",\r\n    fields: CH_Transport.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_transport\";\r\n}\r\n", "import { PeopleField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CH_Voicemail extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Employee: new PeopleField({\r\n      displayName: \"Employee Name\",\r\n      isRequired: true,\r\n    }),\r\n    Phone: new TextField({\r\n      displayName: \"Phone Number\",\r\n      isRequired: true,\r\n    }),\r\n    Location: new TextField({\r\n      displayName: \"Location\",\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Employee\", \"Phone\", \"Location\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_voicemail\",\r\n    title: \"st_ch_voicemail\",\r\n    fields: CH_Voicemail.Views.All,\r\n  };\r\n\r\n  static uid = \"ch_voicemail\";\r\n}\r\n", "import { PeopleField, SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class ContractorSupplement extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n    if (window.DEBUG) console.log(\"new contractor supplement\", params);\r\n  }\r\n\r\n  ContractorTypeOptsArr = [\"SCA\", \"Non-SCA\"];\r\n\r\n  TaskOrderNumber = new TextField({\r\n    displayName: \"Task Order Number\",\r\n    isRequired: true,\r\n  });\r\n  RequisitionNumber = new TextField({\r\n    displayName: \"Requisition Number\",\r\n    isRequired: true,\r\n  });\r\n  LaborCategory = new TextField({\r\n    displayName: \"Labor Category\",\r\n    isRequired: true,\r\n  });\r\n  ContractorType = new SelectField({\r\n    displayName: \"Contractor Type\",\r\n    options: [\"SCA\", \"Non-SCA\"],\r\n    isRequired: true,\r\n  });\r\n  Contractor = new PeopleField({\r\n    displayName: \"Contractor\",\r\n    isRequired: true,\r\n    Visible: ko.observable(false),\r\n  });\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    TaskOrderNumber: this.TaskOrderNumber,\r\n    RequisitionNumber: this.RequisitionNumber,\r\n    LaborCategory: this.LaborCategory,\r\n    ContractorType: this.ContractorType,\r\n    Contractor: this.Contractor,\r\n  };\r\n\r\n  // IsValid = ko.pureComputed(() => {\r\n  //   return (\r\n  //     this.ContractorType() &&\r\n  //     this.LaborCategory() &&\r\n  //     this.RequisitionNumber() &&\r\n  //     this.TaskOrderNumber()\r\n  //   );\r\n  // });\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"TaskOrderNumber\",\r\n      \"LaborCategory\",\r\n      \"RequisitionNumber\",\r\n      \"ContractorType\",\r\n      \"Request\",\r\n      \"Contractor\",\r\n    ],\r\n    APMUpdate: [\r\n      \"TaskOrderNumber\",\r\n      \"LaborCategory\",\r\n      \"ContractorType\",\r\n      \"RequisitionNumber\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_overtime_supplement\",\r\n    title: \"st_ch_overtime_supplement\",\r\n    fields: ContractorSupplement.Views.All,\r\n  };\r\n\r\n  static uid = \"contractor_supplement\";\r\n}\r\n", "import { DateField, SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class DVCSetup extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    DateOfDVC: new DateField({\r\n      displayName: \"Date of DVC\",\r\n      isRequired: true,\r\n    }),\r\n    Location: new TextField({\r\n      displayName: \"Location\",\r\n      isRequired: true,\r\n    }),\r\n    Duration: new TextField({\r\n      displayName: \"Duration\",\r\n      isRequired: true,\r\n    }),\r\n    FarEndPOC: new TextField({\r\n      displayName: \"Far End POC\",\r\n      isRequired: true,\r\n    }),\r\n    ConnectionType: new SelectField({\r\n      displayName: \"Connection Type\",\r\n      options: [\"OpenNet\", \"ISDN\", \"IP\"],\r\n      isRequired: true,\r\n    }),\r\n    CallType: new SelectField({\r\n      displayName: \"Call Type\",\r\n      options: [\"Incoming\", \"Outgoing\"],\r\n      isRequired: true,\r\n    }),\r\n    DVCDialInNum: new TextField({\r\n      displayName: \"DVC Dial-in Number\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"DateOfDVC\",\r\n      \"Location\",\r\n      \"Duration\",\r\n      \"FarEndPOC\",\r\n      \"ConnectionType\",\r\n      \"CallType\",\r\n      \"DVCDialInNum\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_dvc_setup\",\r\n    title: \"st_dvc_setup\",\r\n    fields: DVCSetup.Views.All,\r\n  };\r\n\r\n  static uid = \"dvc_setup\";\r\n}\r\n", "import { SelectField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CashMgmtRequest extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  /* A Service Type must define a fieldmap: \r\n    Each key corresponds to the SP Column system name\r\n    Each Value should be a predefined field, or should \r\n    expose a get() and set() function that will be used to\r\n    write and read the value from SharePoint. */\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Subcategory: new SelectField({\r\n      displayName: \"Subcategory\",\r\n      options: [\r\n        \"Accommodation Exchange\",\r\n        \"Annual Cash Waivers\",\r\n        \"Debt Collection\",\r\n        \"Fiscal Irregularities\",\r\n        \"One-Time Cash Waivers\",\r\n        \"Proceeds of Sale\",\r\n        \"Suspense Deposits Abroad\",\r\n      ],\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  /* Optional views when querying the EntitySet. \r\n    By default, all declared columns are used.\r\n    When a view is passed, only the specified columns are loaded. */\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Subcategory\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_fp_cash_mgmt\",\r\n    title: \"st_fp_cash_mgmt\",\r\n    fields: CashMgmtRequest.Views.All,\r\n  };\r\n\r\n  static uid = \"fp_cash_mgmt\";\r\n}\r\n", "import { SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CashierOperationsRequest extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Subcategory = new SelectField({\r\n    displayName: \"Subcategory\",\r\n    options: [\r\n      \"Annual Cash Waivers\",\r\n      \"Class B Cashiering\",\r\n      \"Occasional Money Holders\",\r\n      \"One-Time Cash Waivers\",\r\n      \"United States Treasury Checks\",\r\n    ],\r\n    isRequired: true,\r\n  });\r\n\r\n  MRN = new TextField({\r\n    displayName: \"MRN\",\r\n  });\r\n\r\n  /* A Service Type must define a fieldmap: \r\n    Each key corresponds to the SP Column system name\r\n    Each Value should be a predefined field, or should \r\n    expose a get() and set() function that will be used to\r\n    write and read the value from SharePoint. */\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Subcategory: this.Subcategory,\r\n    MRN: this.MRN,\r\n  };\r\n\r\n  fromEmail = (emailContent) => fromEmail(this, emailContent);\r\n  /* Optional views when querying the EntitySet. \r\n    By default, all declared columns are used.\r\n    When a view is passed, only the specified columns are loaded. */\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Subcategory\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_fp_cash_mgmt\",\r\n    title: \"st_fp_cash_mgmt\",\r\n    fields: CashierOperationsRequest.Views.All,\r\n  };\r\n\r\n  static uid = \"fp_cashier_operations\";\r\n}\r\n\r\nfunction fromEmail(serviceType, emailContent) {\r\n  serviceType.FieldMap.Subcategory.set(\"Annual Cash Waivers\");\r\n\r\n  const d = document.createElement(\"div\");\r\n  d.innerHTML = emailContent;\r\n\r\n  const trs = d.querySelectorAll(\"tr\");\r\n\r\n  for (const tr of trs) {\r\n    if (!tr.innerText?.includes(\"MRN:\")) continue;\r\n    console.log(tr);\r\n    const td = tr.querySelector(\"td:nth-child(2) a\");\r\n    const mrnValue = td.innerText;\r\n    serviceType.FieldMap.MRN.set(mrnValue);\r\n  }\r\n\r\n  // emailContent;\r\n}\r\n", "import { SelectField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class FPCodesRequest extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  /* A Service Type must define a fieldmap: \r\n    Each key corresponds to the SP Column system name\r\n    Each Value should be a predefined field, or should \r\n    expose a get() and set() function that will be used to\r\n    write and read the value from SharePoint. */\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Subcategory: new SelectField({\r\n      displayName: \"Subcategory\",\r\n      options: [\r\n        \"Allotment and Allowance Codes\",\r\n        \"Domestic Organization Structure and Codes\",\r\n        \"Function Classification Codes\",\r\n        \"Fund Symbols\",\r\n        \"Object Classification Codes\",\r\n        \"Overseas Organization Classification Codes\",\r\n        \"Revenue Source Codes\",\r\n      ],\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  /* Optional views when querying the EntitySet. \r\n    By default, all declared columns are used.\r\n    When a view is passed, only the specified columns are loaded. */\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Subcategory\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_fp_codes\",\r\n    title: \"st_fp_codes\",\r\n    fields: FPCodesRequest.Views.All,\r\n  };\r\n\r\n  static uid = \"fp_codes\";\r\n}\r\n", "import { SelectField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class CollectionsRequest extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  /* A Service Type must define a fieldmap: \r\n    Each key corresponds to the SP Column system name\r\n    Each Value should be a predefined field, or should \r\n    expose a get() and set() function that will be used to\r\n    write and read the value from SharePoint. */\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Subcategory: new SelectField({\r\n      displayName: \"Subcategory\",\r\n      options: [\r\n        \"Debt Collection\",\r\n        \"Proceeds of Sale\",\r\n        \"Suspense Deposits Abroad (SDA)\",\r\n      ],\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  /* Optional views when querying the EntitySet. \r\n    By default, all declared columns are used.\r\n    When a view is passed, only the specified columns are loaded. */\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Subcategory\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_fp_collections\",\r\n    title: \"st_fp_collections\",\r\n    fields: CollectionsRequest.Views.All,\r\n  };\r\n\r\n  static uid = \"fp_collections\";\r\n}\r\n", "import { SelectField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class FPTravelRequest extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  /* A Service Type must define a fieldmap: \r\n    Each key corresponds to the SP Column system name\r\n    Each Value should be a predefined field, or should \r\n    expose a get() and set() function that will be used to\r\n    write and read the value from SharePoint. */\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Subcategory: new SelectField({\r\n      displayName: \"Subcategory\",\r\n      options: [\r\n        \"Advances\",\r\n        \"Claims\",\r\n        \"Gifts of Travel\",\r\n        \"Mileage Rates (general topic)\",\r\n        \"Travel Card Program\",\r\n      ],\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  /* Optional views when querying the EntitySet. \r\n    By default, all declared columns are used.\r\n    When a view is passed, only the specified columns are loaded. */\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Subcategory\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_fp_travel\",\r\n    title: \"st_fp_travel\",\r\n    fields: FPTravelRequest.Views.All,\r\n  };\r\n\r\n  static uid = \"fp_travel\";\r\n}\r\n", "import { SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class ITHardware extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Name: new TextField({\r\n      displayName: \"Hardware Name\",\r\n      isRequired: true,\r\n    }),\r\n    Quantity: new TextField({\r\n      displayName: \"Quantity\",\r\n      isRequired: true,\r\n    }),\r\n    POCName: new TextField({\r\n      displayName: \"POC\",\r\n      isRequired: true,\r\n    }),\r\n    Cost: new TextField({\r\n      displayName: \"Cost\",\r\n      isRequired: true,\r\n    }),\r\n    RequestType: new SelectField({\r\n      displayName: \"Request Type\",\r\n      options: [\"New\", \"Maintenance Renewal\"],\r\n      isRequired: true,\r\n    }),\r\n    PurchaseFrequency: new SelectField({\r\n      displayName: \"Purchase Frequency\",\r\n      options: [\"One Time\", \"Recurring\"],\r\n      isRequired: true,\r\n    }),\r\n    ApprovedPurchase: new SelectField({\r\n      displayName: \"Approved Purchase\",\r\n      options: [\"Yes\", \"No\"],\r\n      isRequired: true,\r\n    }),\r\n    FundingSource: new SelectField({\r\n      displayName: \"Funding Source\",\r\n      options: [\"Project\", \"Contract\", \"Other\"],\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"Name\",\r\n      \"Quantity\",\r\n      \"POCName\",\r\n      \"Cost\",\r\n      \"RequestType\",\r\n      \"PurchaseFrequency\",\r\n      \"ApprovedPurchase\",\r\n      \"FundingSource\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_IT_hardware\",\r\n    title: \"st_IT_hardware\",\r\n    fields: ITHardware.Views.All,\r\n  };\r\n\r\n  static uid = \"it_hardware\";\r\n}\r\n", "import { PeopleField, SelectField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class Ironkey extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    UserName: new PeopleField({\r\n      displayName: \"User Name\",\r\n      isRequired: true,\r\n    }),\r\n    EmployeeType: new SelectField({\r\n      displayName: \"Employee Type\",\r\n      options: [\"Direct Hire\", \"Contractor\"],\r\n      isRequired: true,\r\n    }),\r\n    RequestType: new SelectField({\r\n      displayName: \"Request Type\",\r\n      options: [\"New\", \"Replacement\"],\r\n      isRequired: true,\r\n    }),\r\n    Supervisor: new PeopleField({\r\n      displayName: \"COR/Supervisor\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"UserName\",\r\n      \"EmployeeType\",\r\n      \"RequestType\",\r\n      \"Supervisor\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ironkey\",\r\n    title: \"st_ironkey\",\r\n    fields: Ironkey.Views.All,\r\n  };\r\n\r\n  static uid = \"ironkey\";\r\n}\r\n", "import { TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class Locksmith extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Location: new TextField({\r\n      displayName: \"Location\",\r\n      isRequired: true,\r\n    }),\r\n    LockType: new TextField({\r\n      displayName: \"Lock Type\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_locksmith\",\r\n    title: \"st_locksmith\",\r\n    fields: Locksmith.Views.All,\r\n  };\r\n\r\n  static uid = \"locksmith\";\r\n}\r\n", "import { PeopleField, SelectField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class Mobile extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    User: new PeopleField({\r\n      displayName: \"User Name\",\r\n      isRequired: true,\r\n    }),\r\n    EmployeeType: new SelectField({\r\n      displayName: \"Employee Type\",\r\n      options: [\"FTE\", \"Contractor\"],\r\n      isRequired: true,\r\n    }),\r\n    RequestType: new SelectField({\r\n      displayName: \"Request Type\",\r\n      options: [\"New\", \"Broken/Lost/Stolen\", \"Accessories\"],\r\n      isRequired: true,\r\n    }),\r\n    PlanType: new SelectField({\r\n      displayName: \"Plan Type\",\r\n      options: [\"Domestic\", \"Global\"],\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"User\", \"EmployeeType\", \"RequestType\", \"PlanType\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_mobile_phone\",\r\n    title: \"st_mobile_phone\",\r\n    fields: Mobile.Views.All,\r\n  };\r\n\r\n  static uid = \"mobile\";\r\n}\r\n", "import { DateField, dateFieldTypes, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class MotorPool extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    DateAndTime: new DateField({\r\n      displayName: \"Date and Time\",\r\n      type: dateFieldTypes.datetime,\r\n      isRequired: true,\r\n    }),\r\n    DriverPOC: new TextField({\r\n      displayName: \"Driver POC\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"DateAndTime\", \"DriverPOC\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_motor_pool\",\r\n    title: \"st_motor_pool\",\r\n    fields: MotorPool.Views.All,\r\n  };\r\n\r\n  static uid = \"motor_pool\";\r\n}\r\n", "import {\r\n  DateField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextField,\r\n} from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\nimport { ConstrainedEntity } from \"../primitives/ConstrainedEntity.js\";\r\n\r\nimport { currentUser } from \"../infrastructure/Authorization.js\";\r\n\r\nexport class Overtime extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    FullName: new PeopleField({\r\n      displayName: \"Contractor\",\r\n      isRequired: true,\r\n    }),\r\n    ManagerGov: new PeopleField({\r\n      displayName: \"Gov Manager\",\r\n      isRequired: true,\r\n    }),\r\n    ManagerGTM: new PeopleField({\r\n      displayName: \"COR/GTM\",\r\n      isRequired: true,\r\n    }),\r\n    Office: new SelectField({\r\n      displayName: \"Department\",\r\n      options: currentUser()\r\n        .RequestingOffices()\r\n        .map((office) => office.Title),\r\n      isRequired: true,\r\n    }),\r\n    RequisitionNumber: new TextField({\r\n      displayName: \"Requisition Number/Task Order\",\r\n      isRequired: true,\r\n    }),\r\n    Task: new TextField({\r\n      displayName: \"Project Task\",\r\n      isRequired: true,\r\n    }),\r\n    Hours: new TextField({\r\n      displayName: \"Overtime Hours Total\",\r\n      isRequired: true,\r\n    }),\r\n    ContractorType: new SelectField({\r\n      displayName: \"Contractor Type\",\r\n      options: [\"SCA\", \"Non-SCA\"],\r\n      isRequired: true,\r\n    }),\r\n    DatesRaw: new BlobField({\r\n      displayName: \"Overtime Dates\",\r\n      isRequired: true,\r\n      width: 12,\r\n      multiple: true,\r\n      entityType: ko.observable(DatesBlob),\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"FullName\",\r\n      \"ManagerGov\",\r\n      \"ManagerGTM\",\r\n      \"Office\",\r\n      \"RequisitionNumber\",\r\n      \"Task\",\r\n      \"Hours\",\r\n      \"ContractorType\",\r\n      \"DatesRaw\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_overtime\",\r\n    title: \"st_overtime\",\r\n    fields: Overtime.Views.All,\r\n  };\r\n\r\n  static uid = \"overtime\";\r\n}\r\n\r\nclass DatesBlob extends ConstrainedEntity {\r\n  constructor() {\r\n    super();\r\n  }\r\n  FieldMap = {\r\n    date: new DateField({\r\n      displayName: \"Date\",\r\n      isRequired: true,\r\n    }),\r\n    hours: new TextField({\r\n      displayName: \"# of Hours\",\r\n      isRequired: true,\r\n    }),\r\n    label: new TextField({\r\n      displayName: \"Note/Label\",\r\n      isRequired: false,\r\n    }),\r\n  };\r\n}\r\n", "import { DateField, dateFieldTypes, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class Presentation extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    PresentationDate: new DateField({\r\n      displayName: \"Presentation Date and Time\",\r\n      type: dateFieldTypes.datetime,\r\n      isRequired: true,\r\n    }),\r\n    Location: new TextField({\r\n      displayName: \"Location\",\r\n      isRequired: true,\r\n    }),\r\n    Duration: new TextField({\r\n      displayName: \"Duration\",\r\n      isRequired: true,\r\n    }),\r\n    POC: new TextField({\r\n      displayName: \"POC\",\r\n      isRequired: true,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"PresentationDate\", \"Location\", \"Duration\", \"POC\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_presentation\",\r\n    title: \"st_presentation\",\r\n    fields: Presentation.Views.All,\r\n  };\r\n\r\n  static uid = \"presentation\";\r\n}\r\n", "import { SelectField, TextField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\nimport { ConstrainedEntity } from \"../primitives/ConstrainedEntity.js\";\r\n\r\nexport class Requisition extends BaseServiceDetail {\r\n  constructor(request) {\r\n    super(request);\r\n    this.Request = request;\r\n    // registerServiceTypeActionComponent({\r\n    //   uid: \"requisition\",\r\n    //   componentName: \"items-table-edit\",\r\n    //   moduleName: \"ItemsTable\",\r\n    //   templateName: \"ItemsTableEdit\",\r\n    // });\r\n    // registerServiceTypeActionComponent({\r\n    //   uid: \"requisition\",\r\n    //   componentName: \"items-table-view\",\r\n    //   moduleName: \"ItemsTable\",\r\n    //   templateName: \"ItemsTableView\",\r\n    // });\r\n\r\n    // console.log(\"TypeOpts\", this.TypeOpts);\r\n    // console.log(\"TypeOpts Static\", this);\r\n  }\r\n\r\n  Type = ko.observable();\r\n  Quantity = ko.observable();\r\n  Items = ko.observableArray();\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    RequisitionType: new SelectField({\r\n      displayName: \"Requisition Type\",\r\n      isRequired: false,\r\n      options: [\"Requisition\", \"De-Obligation\", \"Re-Alignment\"],\r\n    }),\r\n    Quantity: new TextField({\r\n      displayName: \"Quantity of requisitions\",\r\n      isRequired: false,\r\n    }),\r\n    ItemsBlob: new BlobField({\r\n      displayName: \"Procurement Items\",\r\n      isRequired: false,\r\n      width: 12,\r\n      multiple: true,\r\n      entityType: ko.observable(RequisitionItem),\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"RequisitionType\", \"Quantity\", \"ItemsBlob\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_requisition\",\r\n    title: \"st_requisition\",\r\n    fields: Requisition.Views.All,\r\n  };\r\n\r\n  static uid = \"requisition\";\r\n}\r\n\r\nclass RequisitionItem extends ConstrainedEntity {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  FieldMap = {\r\n    title: new TextField({ displayName: \"Title\", isRequired: true }),\r\n    // vendor: new TextField({ displayName: \"Vendor\", isRequired: true }),\r\n    // description: new TextField({\r\n    //   displayName: \"Description\",\r\n    //   isRequired: true,\r\n    // }),\r\n    // quantity: new TextField({\r\n    //   displayName: \"Quantity\",\r\n    //   isRequired: true,\r\n    //   attr: { type: \"number\" },\r\n    // }),\r\n    // unit: new TextField({\r\n    //   displayName: \"Unit\",\r\n    //   isRequired: true,\r\n    // }),\r\n    // price: new TextField({ displayName: \"Price\", isRequired: true }),\r\n    // Amount: new TextField({ displayName: \"Amount\", isRequired: true }),\r\n  };\r\n}\r\n", "import { DateField, dateFieldTypes, SelectField } from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\n/* \r\nComponents and registration are only necessary if we have custom views in our ./views folder\r\nRemove if using the default views (don't forget to remove the reference in our entity request!)\r\n*/\r\n// const components = {\r\n//   view: \"svc-template-view\",\r\n//   edit: \"svc-template-edit\",\r\n//   new: \"svc-template-edit\",\r\n// };\r\n\r\n// registerServiceTypeViewComponents({ uid: \"template\", components });\r\n\r\nexport class SDMAdminRequest extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  /* A Service Type must define a fieldmap: \r\n    Each key corresponds to the SP Column system name\r\n    Each Value should be a predefined field, or should \r\n    expose a get() and set() function that will be used to\r\n    write and read the value from SharePoint. */\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Category: new SelectField({\r\n      displayName: \"Category\",\r\n      options: [\"Category 1\", \"Category 2\", \"Category 3\"],\r\n      isRequired: false,\r\n    }),\r\n    DatePromised: new DateField({\r\n      displayName: \"Date Promised\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: false,\r\n    }),\r\n    DateCompleted: new DateField({\r\n      displayName: \"Date Completed\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: false,\r\n    }),\r\n  };\r\n\r\n  // components = components;\r\n\r\n  /* Optional views when querying the EntitySet. \r\n    By default, all declared columns are used.\r\n    When a view is passed, only the specified columns are loaded. */\r\n  static Views = {\r\n    All: [\"ID\", \"Title\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_sdm_admin_request\",\r\n    title: \"st_sdm_admin_request\",\r\n    fields: SDMAdminRequest.Views.All,\r\n  };\r\n\r\n  static uid = \"sdm_admin_request\";\r\n}\r\n", "import {\r\n  CheckboxField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  PeopleField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nexport class TierIRequest extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  /* A Service Type must define a fieldmap: \r\n    Each key corresponds to the SP Column system name\r\n    Each Value should be a predefined field, or should \r\n    expose a get() and set() function that will be used to\r\n    write and read the value from SharePoint. */\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Subject: new TextField({\r\n      displayName: \"Title\",\r\n      instructions: `Brief one line summary identifying the issue.<br>\r\n      (Team Name - Action Name - Brief description of Issue)`,\r\n      isRequired: true,\r\n    }),\r\n    EmployeeId: new TextField({\r\n      displayName: \"Employee ID\",\r\n      instructions: `Required if applicable. Please do NOT include employee SSN.`,\r\n      isRequired: true,\r\n    }),\r\n    AnalystPOC: new PeopleField({\r\n      displayName: \"Analyst POC\",\r\n      instructions: \"Name of the incident reporter.\",\r\n      isRequired: true,\r\n    }),\r\n    QWINumber: new TextField({\r\n      displayName: \"QWI Number\",\r\n      instructions: `(example: GFS-WI-APP-###)`,\r\n      isRequired: true,\r\n    }),\r\n    QWIStep: new TextField({\r\n      displayName: \"QWI Step\",\r\n      instructions: `What step in the QWI were you not able to complete successfully?`,\r\n      isRequired: true,\r\n    }),\r\n    IssueDate: new DateField({\r\n      displayName: \"Issue Date/Pay-Period of Action\",\r\n      type: dateFieldTypes.date,\r\n      instructions: `(Needed to allow determination of software version being used)`,\r\n      isRequired: true,\r\n    }),\r\n    DISAction: new TextField({\r\n      displayName: \"DIS Action\",\r\n      instructions: `Required if applicable - if associated with a particular employee, this will be applicable`,\r\n      isRequired: true,\r\n    }),\r\n    DISRequestCode: new TextField({\r\n      displayName: \"DIS Request Code\",\r\n      instructions: `Required if applicable - if associated with a particular action in DIS, this will be applicable`,\r\n      isRequired: true,\r\n    }),\r\n    PayImpacting: new CheckboxField({\r\n      displayName: \"Pay Impacting\",\r\n      instructions: `Does the action impact an employee's pay if the issue is not resolved immediately? Please provide any necessary information in the instructions.`,\r\n    }),\r\n    ImpactCount: new TextField({\r\n      displayName: \"Number of Employees Impacted\",\r\n      isRequired: true,\r\n    }),\r\n    ResolutionDate: new DateField({\r\n      displayName: \"Required Date for Resolution\",\r\n      instructions: `Enter date required for resolution. What is the last day this action needs to be successfully completed before the employee's pay is negatively impacted?`,\r\n      type: dateFieldTypes.date,\r\n      isRequired: false,\r\n    }),\r\n    PayrollOpIssue: new CheckboxField({\r\n      displayName: \"Payroll Operational Issue - Yes/No\",\r\n      instructions: `Process did not finish or unexpected processing results - from OPS`,\r\n    }),\r\n    NewRequirement: new TextField({\r\n      displayName:\r\n        \"New Requirement or request to modify existing functionality?\",\r\n      instructions: `What changed or is expected to change?`,\r\n      isRequired: false,\r\n    }),\r\n    CompliancePolicy: new TextField({\r\n      displayName: \"Compliance and Policy\",\r\n      instructions: `Did policy change? Is GFACS not compliant?`,\r\n      isRequired: false,\r\n    }),\r\n    SecurityRoleChange: new TextField({\r\n      displayName: \"Security Role Change?\",\r\n      isRequired: false,\r\n    }),\r\n    DataUpdateRequest: new TextField({\r\n      displayName: \"Data Update/Execution Form (EF) request\",\r\n      instructions: `What needs to be update? Specific fields, dates? When is it needed by?`,\r\n      isRequired: false,\r\n    }),\r\n    QueryRequest: new TextAreaField({\r\n      displayName: \"Query Request\",\r\n      instructions: `What needs to be update? Specific fields, dates? When is it needed by?`,\r\n      isRequired: false,\r\n    }),\r\n    DatabaseIssues: new TextAreaField({\r\n      displayName: \"Database operation/output issues\",\r\n      instructions: `e.g. error message clarification`,\r\n      isRequired: false,\r\n    }),\r\n  };\r\n\r\n  /* Optional views when querying the EntitySet. \r\n    By default, all declared columns are used.\r\n    When a view is passed, only the specified columns are loaded. */\r\n  static Views = {\r\n    All: [\"ID\", \"Title\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_sdm_tier_I\",\r\n    title: \"st_sdm_tier_I\",\r\n    fields: TierIRequest.Views.All,\r\n  };\r\n\r\n  static uid = \"sdm_tier_I\";\r\n}\r\n", "import {\r\n  CheckboxField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextField,\r\n} from \"../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"./BaseServiceDetail.js\";\r\n\r\nimport { currentUser } from \"../infrastructure/Authorization.js\";\r\n\r\nexport class Telework extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  OfficeOptions = currentUser()\r\n    .RequestingOffices()\r\n    .map((office) => office.Title);\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    FullName: new PeopleField({\r\n      displayName: \"Contractor\",\r\n      isRequired: true,\r\n    }),\r\n    ManagerDept: new PeopleField({\r\n      displayName: \"Dept Manager\",\r\n      isRequired: false,\r\n    }),\r\n    ManagerTechnical: new PeopleField({\r\n      displayName: \"Government Technical Monitor\",\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(() => !this.FieldMap.NoGTM.Value()),\r\n    }),\r\n    NoGTM: new CheckboxField({\r\n      displayName: \"Check here if no GTM for this contract\",\r\n    }),\r\n    COR: new PeopleField({\r\n      displayName: \"COR\",\r\n      isRequired: true,\r\n    }),\r\n    Office: new SelectField({\r\n      displayName: \"Office\",\r\n      options: this.OfficeOptions,\r\n      isRequired: true,\r\n    }),\r\n    RequisitionOrder: new TextField({\r\n      displayName: \"Requisition Number/Task Order\",\r\n      isRequired: true,\r\n    }),\r\n    LaborCategory: new TextField({\r\n      displayName: \"Labor Category (LCAT)\",\r\n      isRequired: true,\r\n    }),\r\n    ContractorType: new SelectField({\r\n      displayName: \"Contractor Type\",\r\n      options: [\"SCA\", \"Non-SCA\"],\r\n      isRequired: true,\r\n    }),\r\n    TeleworkType: new SelectField({\r\n      displayName: \"Telework Type\",\r\n      options: [\"Core\", \"Situational\"],\r\n      isRequired: true,\r\n    }),\r\n    MaxEligibility: new SelectField({\r\n      displayName: \"Max Eligibility\",\r\n      options: [\"80%\", \"60%\", \"40%\", \"20%\", \"None\"],\r\n      isRequired: true,\r\n    }),\r\n    DaysWeek1: new SelectField({\r\n      displayName: \"Week 1\",\r\n      options: [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"],\r\n      multiple: true,\r\n      isRequired: false,\r\n    }),\r\n    DaysWeek2: new SelectField({\r\n      displayName: \"Week 2\",\r\n      options: [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n      ],\r\n      multiple: true,\r\n      isRequired: false,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"FullName\",\r\n      \"ManagerDept\",\r\n      \"ManagerTechnical\",\r\n      \"NoGTM\",\r\n      \"COR\",\r\n      \"Office\",\r\n      \"RequisitionOrder\",\r\n      \"LaborCategory\",\r\n      \"ContractorType\",\r\n      \"TeleworkType\",\r\n      \"MaxEligibility\",\r\n      \"DaysWeek1\",\r\n      \"DaysWeek2\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_telework\",\r\n    title: \"st_telework\",\r\n    fields: Telework.Views.All,\r\n  };\r\n\r\n  static uid = \"telework\";\r\n}\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const chOvertimeViewTemplate = html`\r\n  <div data-bind=\"using: FieldMap\">\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"\r\n        visible: FullName.Visible,\r\n        component: {name: FullName.components.view, params: FullName}, \r\n        class: FullName.width\"\r\n      ></div>\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"\r\n        visible: GovManager.Visible,\r\n        component: {name: GovManager.components.view, params: GovManager}, \r\n        class: GovManager.width\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"py-2\">\r\n      <h6 class=\"\">Overtime Dates (within month estimate):</h6>\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"col pb-2\"\r\n          data-bind=\"\r\n        visible: DateStart.Visible,\r\n        component: {name: DateStart.components.view, params: DateStart}, \r\n        class: DateStart.width\"\r\n        ></div>\r\n        <div\r\n          class=\"col pb-2\"\r\n          data-bind=\"\r\n        visible: DateEnd.Visible,\r\n        component: {name: DateEnd.components.view, params: DateEnd}, \r\n        class: DateEnd.width\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"\r\n        visible: Hours.Visible,\r\n        component: {name: Hours.components.view, params: Hours}, \r\n        class: Hours.width\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div\r\n      class=\"col pb-2\"\r\n      data-bind=\"\r\n    visible: APM.Visible,\r\n    component: {name: APM.components.view, params: APM}, \r\n    class: APM.width\"\r\n    ></div>\r\n    <div\r\n      class=\"col pb-2\"\r\n      data-bind=\"\r\n  visible: GTM.Visible,\r\n  component: {name: GTM.components.view, params: GTM}, \r\n  class: GTM.width\"\r\n    ></div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div\r\n      class=\"col pb-2\"\r\n      data-bind=\"\r\n    visible: COR.Visible,\r\n    component: {name: COR.components.view, params: COR}, \r\n    class: COR.width\"\r\n    ></div>\r\n  </div>\r\n  <!-- ko if: ContractorSupplementField.Value()?.Title -->\r\n  <div class=\"py-3\">\r\n    <h5 class=\"text-secondary\">Contractor Supplemental Information</h5>\r\n    <div\r\n      data-bind=\"component: {name: supplementComponents.view, params: {Entity: ContractorSupplementField.Value()} }\"\r\n    ></div>\r\n  </div>\r\n  <!-- /ko -->\r\n`;\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const chOvertimeEditTemplate = html`\r\n  <div data-bind=\"using: FieldMap\">\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"\r\n        visible: FullName.Visible,\r\n        component: {name: FullName.components.edit, params: FullName}, \r\n        class: FullName.width\"\r\n      ></div>\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"\r\n        visible: GovManager.Visible,\r\n        component: {name: GovManager.components.edit, params: GovManager}, \r\n        class: GovManager.width\"\r\n      ></div>\r\n    </div>\r\n    <h6>Overtime Dates (within month estimate):</h6>\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"\r\n        visible: DateStart.Visible,\r\n        component: {name: DateStart.components.edit, params: DateStart}, \r\n        class: DateStart.width\"\r\n      ></div>\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"\r\n        visible: DateEnd.Visible,\r\n        component: {name: DateEnd.components.edit, params: DateEnd}, \r\n        class: DateEnd.width\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"\r\n        visible: Hours.Visible,\r\n        component: {name: Hours.components.edit, params: Hours}, \r\n        class: Hours.width\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div\r\n      class=\"col pb-2\"\r\n      data-bind=\"\r\n    visible: APM.Visible,\r\n    component: {name: APM.components.edit, params: APM}, \r\n    class: APM.width\"\r\n    ></div>\r\n    <div\r\n      class=\"col pb-2\"\r\n      data-bind=\"\r\n  visible: GTM.Visible,\r\n  component: {name: GTM.components.edit, params: GTM}, \r\n  class: GTM.width\"\r\n    ></div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div\r\n      class=\"col pb-2\"\r\n      data-bind=\"\r\n    visible: COR.Visible,\r\n    component: {name: COR.components.edit, params: COR}, \r\n    class: COR.width\"\r\n    ></div>\r\n  </div>\r\n  <!-- ko if: ContractorSupplementField.Value -->\r\n  <div\r\n    data-bind=\"component: {name: supplementComponents.view, params: {Entity: ContractorSupplementField.Value()} }\"\r\n  ></div>\r\n  <!-- /ko -->\r\n`;\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const apmActionsTemplate = html`\r\n  <div class=\"card m-1\">\r\n    <div class=\"card-body\">\r\n      <h6>Please provide the GTM and COR:</h6>\r\n      <!-- ko if: HasLoaded -->\r\n      <div data-bind=\"using: newEntity\">\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col pb-2\"\r\n            data-bind=\"component: {name: GTM.components[$parent.DisplayMode()], params: GTM}\"\r\n          ></div>\r\n          <div\r\n            class=\"col pb-2\"\r\n            data-bind=\"component: {name: COR.components[$parent.DisplayMode()], params: COR}\"\r\n          ></div>\r\n        </div>\r\n        <!-- Only show the addtional fields after GTM and COR have been provided -->\r\n        <!-- ko if:  $parent.ShowSupplementComponent-->\r\n        <div\r\n          data-bind=\"component: {name: supplementComponents[$parent.DisplayMode()], params: {Entity: ContractorSupplementField.Value() }}\"\r\n        ></div>\r\n        <!-- /ko -->\r\n        <div>\r\n          <!-- ko if: $parent.Editing -->\r\n          <!-- ko if: $parent.IsCompleted -->\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            type=\"button\"\r\n            data-bind=\"click: $parent.update, enable: ContractorSupplementField.Value().IsValid\"\r\n          >\r\n            Update\r\n          </button>\r\n          <button\r\n            class=\"btn btn-outline-danger\"\r\n            type=\"button\"\r\n            data-bind=\"click: () => $parent.Editing(false)\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <!-- /ko -->\r\n          <!-- ko ifnot: $parent.IsCompleted -->\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            type=\"button\"\r\n            data-bind=\"click: $parent.submit, enable: ContractorSupplementField.Value().IsValid\"\r\n          >\r\n            Save and Approve\r\n          </button>\r\n          <!-- /ko -->\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn fluid btn-danger\"\r\n            data-bind=\"click: $parent.showReject\"\r\n          >\r\n            Reject\r\n          </button>\r\n          <!-- /ko -->\r\n          <!-- ko ifnot: $parent.Editing -->\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            type=\"button\"\r\n            data-bind=\"click: () => $parent.Editing(true)\"\r\n          >\r\n            Edit\r\n          </button>\r\n          <!-- /ko -->\r\n        </div>\r\n      </div>\r\n      <!-- /ko -->\r\n    </div>\r\n  </div>\r\n  <dialog class=\"\" data-bind=\"attr: {id: rejectModalId}\">\r\n    <div class=\"d-flex flex-column justify-content-between h-100\">\r\n      <h4>Please Provide a Rejection Reason:</h4>\r\n      <div class=\"alert alert-warning mb-3\">\r\n        Note: Rejecting this request will close the record! Closed requests\r\n        cannot be re-opened!\r\n      </div>\r\n      <textarea\r\n        class=\"form-control mb-3 flex-grow-1\"\r\n        data-bind=\"textInput: RejectReason\"\r\n      ></textarea>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger me-2\"\r\n          data-bind=\"click: reject, enable: RejectReason\"\r\n        >\r\n          Reject\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n          data-bind=\"click: cancelReject\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </dialog>\r\n`;\r\n", "import { getAppContext } from \"../../../infrastructure/ApplicationDbContext.js\";\r\nimport { ContractorSupplement } from \"../../index.js\";\r\n\r\nimport { ValidationError } from \"../../../primitives/ValidationError.js\";\r\nimport { CH_Overtime } from \"../CHOvertimeDetail.js\";\r\nimport { assignmentStates } from \"../../../entities/Assignment.js\";\r\nimport { ApprovalActions } from \"../../../components/index.js\";\r\nimport { apmActionsTemplate } from \"./APMActionsTemplate.js\";\r\n\r\nexport class CH_OvertimeAPMActions extends ApprovalActions {\r\n  constructor(params) {\r\n    super(params);\r\n    if (window.DEBUG) console.log(\"Hello from APM Actions module.\");\r\n    this._context = getAppContext();\r\n\r\n    this.ServiceType = params.request.RequestBodyBlob?.Value();\r\n    this.Errors = params.errors;\r\n    // this.ServiceType.Entity().GTM.subscribe(this.gtmWatcher);\r\n    this.Request = params.request;\r\n\r\n    this.newEntity = new CH_Overtime();\r\n    this.newEntity.fromJSON(this.ServiceType.toJSON());\r\n    this.init();\r\n  }\r\n  newEntity = null;\r\n\r\n  HasLoaded = ko.observable(false);\r\n\r\n  Editing = ko.observable(true);\r\n\r\n  DisplayMode = ko.pureComputed(() => {\r\n    return this.Editing() ? \"edit\" : \"view\";\r\n  });\r\n\r\n  init = async () => {\r\n    // await ApplicationDbContext.Set(CH_Overtime).LoadEntity(this.newEntity);\r\n    // this.newEntity.Request = this.Request;\r\n    // Create a clone of the service type entity\r\n    // Object.assign(this.newEntity, this.ServiceType.Entity());\r\n    // this.newEntity = new CH_Overtime(params.request);\r\n    // this.newEntity.ID = this.ServiceType.Entity().ID;\r\n    // this.newEntity.Request = params.request;\r\n\r\n    if (window.DEBUG) console.log(\"setting supplement\");\r\n    await this.newEntity.setRequestContext(this.Request);\r\n    // await new Promise();\r\n    // await this.newEntity.ContractorSupplementField.ensure();\r\n    if (!this.newEntity.ContractorSupplementField.Value())\r\n      this.newEntity.ContractorSupplementField.Value(\r\n        new ContractorSupplement({\r\n          Title: this.Request.Title,\r\n          Request: this.Request,\r\n        })\r\n      );\r\n\r\n    const isValid = this.validate(false);\r\n    if (this.assignment.Status != assignmentStates.InProgress)\r\n      this.Editing(false);\r\n    this.IsCompleted(!isValid.length);\r\n    this.HasLoaded(true);\r\n  };\r\n\r\n  hasBeenValidated = ko.observable(false);\r\n  hasBeenSaved = ko.observable(false);\r\n  IsCompleted = ko.observable(false);\r\n\r\n  validate = (showErrors = true) => {\r\n    if (!this.newEntity) return [];\r\n    const errors = [];\r\n\r\n    if (this.newEntity.GTM.validate(showErrors).length) {\r\n      errors.push(\r\n        new ValidationError(\r\n          errorSource,\r\n          \"required-field\",\r\n          \"Please provide a GTM.\"\r\n        )\r\n      );\r\n    }\r\n\r\n    if (this.newEntity.COR.validate(showErrors).length) {\r\n      errors.push(\r\n        new ValidationError(\r\n          errorSource,\r\n          \"required-field\",\r\n          \"Please provide a COR.\"\r\n        )\r\n      );\r\n    }\r\n\r\n    if (\r\n      this.newEntity.ContractorSupplementField.Value().validate(showErrors)\r\n        .length\r\n    ) {\r\n      errors.push(\r\n        new ValidationError(\r\n          errorSource,\r\n          \"required-field\",\r\n          \"Please provide the contractor supplemental information.\"\r\n        )\r\n      );\r\n    }\r\n\r\n    this.Errors(\r\n      this.Errors()\r\n        .filter((e) => e.source != errorSource)\r\n        .concat(errors)\r\n    );\r\n    return errors;\r\n  };\r\n\r\n  // gtmWatcher = (user) => {\r\n  //   if (!this.GTM()) {\r\n  //     this.GTM(user);\r\n  //   }\r\n  // };\r\n\r\n  ShowSupplementComponent = ko.pureComputed(\r\n    () => this.newEntity.GTM.IsValid() && this.newEntity.COR.IsValid()\r\n  );\r\n\r\n  submit = async () => {\r\n    this.hasBeenValidated(true);\r\n    if (this.validate().length) return;\r\n\r\n    this.newEntity.ContractorSupplementField.Value().Request = this.Request;\r\n\r\n    await this.newEntity.ContractorSupplement.create(\r\n      this.newEntity.ContractorSupplementField.Value()\r\n    );\r\n\r\n    // await ApplicationDbContext.Set(CH_Overtime).UpdateEntity(\r\n    //   this.newEntity,\r\n    //   CH_Overtime.Views.APMUpdate\r\n    // );\r\n\r\n    // this.ServiceType.refreshEntity();\r\n\r\n    this.Request.RequestBodyBlob.Value(this.newEntity);\r\n\r\n    await this._context.Requests.UpdateEntity(this.Request, [\r\n      \"RequestBodyBlob\",\r\n    ]);\r\n\r\n    if (this.assignment.Status != assignmentStates.Approved);\r\n    await this.completeAssignment(this.assignment, assignmentStates.Approved);\r\n\r\n    this.hasBeenSaved(true);\r\n    this.IsCompleted(true);\r\n  };\r\n\r\n  update = async () => {\r\n    this.hasBeenValidated(true);\r\n    if (this.validate().length) return;\r\n\r\n    this.Request.RequestBodyBlob.Value(this.newEntity);\r\n\r\n    await this._context.Requests.UpdateEntity(this.Request, [\r\n      \"RequestBodyBlob\",\r\n    ]);\r\n\r\n    await this.newEntity.ContractorSupplement.update(\r\n      ContractorSupplement.Views.APMUpdate\r\n    );\r\n    // this.ServiceType.refreshEntity();\r\n    this.hasBeenSaved(true);\r\n    this.Editing(false);\r\n  };\r\n\r\n  static name = \"APMActions\";\r\n  static template = apmActionsTemplate;\r\n}\r\n\r\nconst errorSource = \"apm-actions\";\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const govManagerActionsTemplate = html`\r\n  <div class=\"card m-1\">\r\n    <div class=\"card-body\">\r\n      <h6>Please provide the APM and GTM (opt):</h6>\r\n      <!-- ko if: Editing -->\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"col pb-2\"\r\n          data-bind=\"component: {name: APM.components.edit, params: APM}\"\r\n        ></div>\r\n        <div\r\n          class=\"col pb-2\"\r\n          data-bind=\"component: {name: GTM.components.edit, params: GTM}\"\r\n        ></div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn fluid btn-primary\"\r\n        data-bind=\"click: submit\"\r\n      >\r\n        Save and Approve\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn fluid btn-danger\"\r\n        data-bind=\"click: showReject\"\r\n      >\r\n        Reject\r\n      </button>\r\n      <!-- /ko -->\r\n      <!-- ko ifnot: Editing-->\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"col pb-2\"\r\n          data-bind=\"component: {name: APM.components.view, params: APM}\"\r\n        ></div>\r\n        <div\r\n          class=\"col pb-2\"\r\n          data-bind=\"component: {name: GTM.components.view, params: GTM}\"\r\n        ></div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn fluid btn-primary\"\r\n        data-bind=\"click: () => Editing(true)\"\r\n      >\r\n        Update\r\n      </button>\r\n      <!-- /ko -->\r\n    </div>\r\n  </div>\r\n  <dialog class=\"\" data-bind=\"attr: {id: rejectModalId}\">\r\n    <div class=\"d-flex flex-column justify-content-between h-100\">\r\n      <h4>Please Provide a Rejection Reason:</h4>\r\n      <div class=\"alert alert-warning mb-3\">\r\n        Note: Rejecting this request will close the record! Closed requests\r\n        cannot be re-opened!\r\n      </div>\r\n      <textarea\r\n        class=\"form-control mb-3 flex-grow-1\"\r\n        data-bind=\"textInput: RejectReason\"\r\n      ></textarea>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger me-2\"\r\n          data-bind=\"click: reject, enable: RejectReason\"\r\n        >\r\n          Reject\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n          data-bind=\"click: cancelReject\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </dialog>\r\n`;\r\n", "import { getAppContext } from \"../../../infrastructure/ApplicationDbContext.js\";\r\n\r\nimport { ValidationError } from \"../../../primitives/ValidationError.js\";\r\nimport { PeopleField } from \"../../../fields/index.js\";\r\n\r\nimport { assignmentStates } from \"../../../entities/Assignment.js\";\r\nimport { getApmOrg, getGtmOrg } from \"../CHOvertimeDetail.js\";\r\nimport { ApprovalActions } from \"../../../components/index.js\";\r\nimport { govManagerActionsTemplate } from \"./GovManagerActionsTemplate.js\";\r\n\r\nexport class CH_OvertimeGovManagerActions extends ApprovalActions {\r\n  constructor(params) {\r\n    super(params);\r\n    this._context = getAppContext();\r\n\r\n    this.ServiceType = params.request.RequestBodyBlob?.Value();\r\n    this.Errors = params.errors;\r\n    this.Request = params.request;\r\n\r\n    // this.Errors.push({\r\n    //   source: errorSource,\r\n    //   description: \"Has not been validated\",\r\n    // });\r\n    this.apmWatcher(this.ServiceType?.APM.get());\r\n    this.gtmWatcher(this.ServiceType?.GTM.get());\r\n    const isValid = this.validate(false);\r\n\r\n    // this.newEntity = new CH_Overtime();\r\n    // this.newEntity.fromJSON(this.ServiceType.toJSON());\r\n\r\n    // If the assignment has been completed\r\n    // or the state is valid\r\n    if (this.assignment.Status != assignmentStates.InProgress)\r\n      this.Editing(false);\r\n  }\r\n\r\n  Editing = ko.observable(true);\r\n\r\n  APM = new PeopleField({\r\n    displayName: \"APM\",\r\n    isRequired: true,\r\n    spGroupName: ko.pureComputed(() => {\r\n      const apmOrg = ko.unwrap(getApmOrg);\r\n\r\n      return apmOrg?.UserGroup?.Title;\r\n    }),\r\n    // instructions: ko.observable(),\r\n    // pickerOptions: ko.pureComputed(() => {\r\n    //   const apmOrg = this.apmGroup();\r\n\r\n    //   if (apmOrg?.UserGroup?.ID) {\r\n    //     return {\r\n    //       SharePointGroupID: apmOrg.UserGroup.ID,\r\n    //     };\r\n    //   }\r\n    //   return {};\r\n    // }),\r\n  });\r\n\r\n  GTM = new PeopleField({\r\n    displayName: \"GTM\",\r\n    isRequired: false,\r\n    spGroupName: ko.pureComputed(() => {\r\n      const gtmOrg = ko.unwrap(getGtmOrg);\r\n      return gtmOrg?.UserGroup?.Title;\r\n    }),\r\n  });\r\n\r\n  hasBeenValidated = ko.observable(false);\r\n  hasBeenSaved = ko.observable(false);\r\n\r\n  validate = (showErrors = true) => {\r\n    if (!this.ServiceType) return [];\r\n    const errors = [];\r\n    if (this.APM.validate(showErrors).length) {\r\n      errors.push(\r\n        new ValidationError(\r\n          errorSource,\r\n          \"gov-manager-actions\",\r\n          \"Please provide a valid APM.\"\r\n        )\r\n      );\r\n    }\r\n\r\n    this.Errors(\r\n      this.Errors()\r\n        .filter((e) => e.source != errorSource)\r\n        .concat(errors)\r\n    );\r\n    return errors;\r\n  };\r\n\r\n  apmWatcher = (user) => {\r\n    if (!this.APM.get()) {\r\n      this.APM.set(user);\r\n      // this.validate();\r\n    }\r\n  };\r\n\r\n  gtmWatcher = (user) => {\r\n    if (!this.GTM.get()) {\r\n      this.GTM.set(user);\r\n    }\r\n  };\r\n\r\n  submit = async () => {\r\n    this.hasBeenValidated(true);\r\n    if (this.validate().length) return;\r\n    console.log(this);\r\n\r\n    // this.ServiceType.Entity().APM(this.APM());\r\n    // this.ServiceType.Entity().GTM(this.GTM());\r\n    this.ServiceType.APM.set(this.APM.get());\r\n\r\n    if (this.GTM.get()) {\r\n      this.ServiceType.GTM.set(this.GTM.get());\r\n    } else if (this.ServiceType.GTM.get()) {\r\n      // The user is trying to clear the field\r\n      this.ServiceType.GTM.set(null);\r\n    }\r\n\r\n    // await ApplicationDbContext.Set(CH_Overtime).UpdateEntity(updatedEntity);\r\n    await this._context.Requests.UpdateEntity(this.Request, [\r\n      \"RequestBodyBlob\",\r\n    ]);\r\n    // this.ServiceType.refreshEntity();\r\n\r\n    if (this.assignment.Status != assignmentStates.Approved)\r\n      await this.completeAssignment(this.assignment, assignmentStates.Approved);\r\n\r\n    this.Editing(false);\r\n    this.hasBeenSaved(true);\r\n  };\r\n\r\n  static name = \"GovManagerActions\";\r\n  static template = govManagerActionsTemplate;\r\n}\r\n\r\nconst errorSource = \"gov-manager-actions\";\r\n", "import {\r\n  DateField,\r\n  dateFieldTypes,\r\n  LookupField,\r\n  PeopleField,\r\n  TextField,\r\n} from \"../../fields/index.js\";\r\n\r\nimport { requestOrgStore } from \"../../entities/RequestOrg.js\";\r\n\r\nimport ApplicationDbContext, {\r\n  getAppContext,\r\n} from \"../../infrastructure/ApplicationDbContext.js\";\r\nimport {\r\n  currentUser,\r\n  permissions,\r\n} from \"../../infrastructure/Authorization.js\";\r\nimport { ContractorSupplement } from \"../ContractorSupplementDetail.js\";\r\n\r\nimport { defaultComponents } from \"../../primitives/ConstrainedEntity.js\";\r\n\r\nimport { registerComponentFromConstructor } from \"../../infrastructure/RegisterComponents.js\";\r\n\r\nimport { chOvertimeViewTemplate } from \"./views/View.js\";\r\nimport { chOvertimeEditTemplate } from \"./views/Edit.js\";\r\n\r\nimport {\r\n  ConstrainedEntityEditModule,\r\n  ConstrainedEntityViewModule,\r\n} from \"../../components/index.js\";\r\nimport { BaseServiceDetail } from \"../BaseServiceDetail.js\";\r\nimport { CH_OvertimeAPMActions } from \"./components/APMActions.js\";\r\nimport { CH_OvertimeGovManagerActions } from \"./components/GovManagerActions.js\";\r\n\r\nconst components = {\r\n  view: \"svc-ch_overtime-view\",\r\n  edit: \"svc-ch_overtime-edit\",\r\n  new: \"svc-ch_overtime-edit\",\r\n};\r\n\r\n// Register action components\r\nregisterComponentFromConstructor(CH_OvertimeAPMActions);\r\nregisterComponentFromConstructor(CH_OvertimeGovManagerActions);\r\n\r\n// It makes sense to keep these here, rather than moving them to the store\r\n// since they are pretty service type/instance specific.\r\nexport const getApmOrg = ko.pureComputed(() => {\r\n  return requestOrgStore().find(\r\n    (org) => org.Title.toUpperCase() == \"CGFS/APMS\"\r\n  );\r\n});\r\n\r\nexport const getGtmOrg = ko.pureComputed(() =>\r\n  requestOrgStore().find((org) => org.Title.toUpperCase() == \"CGFS/GTMS\")\r\n);\r\n\r\nexport const getCorOrg = ko.pureComputed(() =>\r\n  requestOrgStore().find((org) => org.Title.toUpperCase() == \"CGFS/CORS\")\r\n);\r\n\r\nclass CH_OvertimeViewModule extends ConstrainedEntityViewModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = components.view;\r\n  static template = chOvertimeViewTemplate;\r\n}\r\n\r\nclass CH_OvertimeEditModule extends ConstrainedEntityEditModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = components.edit;\r\n  static template = chOvertimeEditTemplate;\r\n}\r\n\r\nregisterComponentFromConstructor(CH_OvertimeEditModule);\r\nregisterComponentFromConstructor(CH_OvertimeViewModule);\r\n\r\nexport class CH_Overtime extends BaseServiceDetail {\r\n  constructor(requestContext) {\r\n    super(requestContext);\r\n    // if (requestContext.Request) this.Request = requestContext.Request;\r\n  }\r\n\r\n  setRequestContext = async (request) => {\r\n    this.Request = request;\r\n    await this.ContractorSupplement.findByRequest(this.Request);\r\n  };\r\n\r\n  RequestSubmitted = ko.pureComputed(() => this.Request?.Pipeline?.Stage());\r\n\r\n  RequestStage2 = ko.pureComputed(\r\n    () => this.Request?.Pipeline?.Stage()?.Step == 2\r\n  );\r\n\r\n  Contractor = new PeopleField({\r\n    displayName: \"Contractor\",\r\n    isRequired: true,\r\n  });\r\n  GovManager = new PeopleField({\r\n    displayName: \"Gov Manager\",\r\n    isRequired: true,\r\n  });\r\n  GTM = new PeopleField({\r\n    displayName: \"GTM\",\r\n    isRequired: this.RequestStage2,\r\n    Visible: this.RequestSubmitted,\r\n    spGroupName: ko.pureComputed(() => {\r\n      const gtmOrg = ko.unwrap(getGtmOrg);\r\n      return gtmOrg?.UserGroup?.Title;\r\n    }),\r\n  });\r\n  APM = new PeopleField({\r\n    displayName: \"APM\",\r\n    isRequired: this.RequestSubmitted,\r\n    Visible: this.RequestSubmitted,\r\n    spGroupName: ko.pureComputed(() => {\r\n      const apmOrg = ko.unwrap(getApmOrg);\r\n\r\n      return apmOrg?.UserGroup?.Title;\r\n    }),\r\n  });\r\n  COR = new PeopleField({\r\n    displayName: \"COR\",\r\n    isRequired: this.RequestStage2,\r\n    Visible: this.RequestSubmitted,\r\n    spGroupName: ko.pureComputed(() => {\r\n      const org = ko.unwrap(getCorOrg);\r\n\r\n      return org?.UserGroup?.Title;\r\n    }),\r\n  });\r\n\r\n  ContractorSupplementField = new LookupField({\r\n    displayName: \"Contractor Supplement\",\r\n    Visible: ko.observable(false),\r\n    type: ContractorSupplement,\r\n    lookupCol: \"LaborCategory\",\r\n    isRequired: false,\r\n    multiple: false,\r\n  });\r\n\r\n  ContractorSupplement = {\r\n    set: getAppContext().Set(ContractorSupplement),\r\n    findByRequest: async (request) => {\r\n      const contractorSupplementResult =\r\n        await this.ContractorSupplement.set.FindByColumnValue(\r\n          [{ column: \"Title\", op: \"eq\", value: request.Title }],\r\n          {},\r\n          {},\r\n          ContractorSupplement.Views.All,\r\n          false\r\n        );\r\n\r\n      const supplement = contractorSupplementResult?.results?.pop();\r\n      if (!supplement) {\r\n        return;\r\n      }\r\n\r\n      this.ContractorSupplementField.Value(supplement);\r\n    },\r\n    update: async (fields = null) => {\r\n      // TODO: update permissions\r\n      await this.ContractorSupplement.set.UpdateEntity(\r\n        this.ContractorSupplementField.Value(),\r\n        fields\r\n      );\r\n    },\r\n    VisibleOnForm: ko.pureComputed(() => {}),\r\n    create: async (\r\n      contractorSupplement = this.ContractorSupplementField.Value()\r\n    ) => {\r\n      // this.ContractorSupplement.entity.Request = this.Request;\r\n      const relFolderPath = this.Request.getRelativeFolderPath();\r\n      const folderPerms = this.ContractorSupplement.getPermissions();\r\n      //Create the folder\r\n      const listFolderId = await this.ContractorSupplement.set.UpsertFolderPath(\r\n        relFolderPath\r\n      );\r\n\r\n      // Break the Permissions\r\n      await this.ContractorSupplement.set.SetFolderPermissions(\r\n        relFolderPath,\r\n        folderPerms\r\n      );\r\n\r\n      contractorSupplement.Contractor.set(this.Contractor.get());\r\n      // Create the item\r\n      await this.ContractorSupplement.set.AddEntity(\r\n        contractorSupplement,\r\n        relFolderPath,\r\n        this.Request\r\n      );\r\n      this.ContractorSupplementField.Value(contractorSupplement);\r\n      // await ApplicationDbContext.Set(CH_Overtime).UpdateEntity(this, [\r\n      //   \"ContractorSupplement\",\r\n      // ]);\r\n    },\r\n    getPermissions: () => {\r\n      // APM, GTM, Budget, PA, and COR have access\r\n      const budgetGroup = requestOrgStore().find(\r\n        (org) => org.Title.toUpperCase() == \"CGFS/EX/BUDGET\"\r\n      )?.UserGroup;\r\n\r\n      const exGroup = requestOrgStore().find(\r\n        (org) => org.Title.toUpperCase() == \"CGFS/EX\"\r\n      )?.UserGroup;\r\n\r\n      const corGroup = getCorOrg()?.UserGroup;\r\n\r\n      const user = currentUser();\r\n\r\n      return [\r\n        [user, permissions.RestrictedContribute],\r\n        [this.APM.get(), permissions.RestrictedContribute],\r\n        [this.GTM.get(), permissions.RestrictedContribute],\r\n        [this.COR.get(), permissions.RestrictedContribute],\r\n        [budgetGroup, permissions.RestrictedContribute],\r\n        [exGroup, permissions.RestrictedContribute],\r\n        [corGroup, permissions.RestrictedContribute],\r\n      ];\r\n    },\r\n  };\r\n\r\n  supplementComponents = defaultComponents;\r\n\r\n  FieldMap = {\r\n    FullName: this.Contractor,\r\n    GovManager: this.GovManager,\r\n    GTM: this.GTM,\r\n    APM: this.APM,\r\n    COR: this.COR,\r\n    DateStart: new DateField({\r\n      displayName: \"Start Date\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n    }),\r\n    DateEnd: new DateField({\r\n      displayName: \"End Date (Within Month Range)\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n    }),\r\n    Hours: new TextField({\r\n      displayName: \"Overtime Hours (Not to Exceed)\",\r\n      isRequired: true,\r\n      attr: { type: \"number\" },\r\n    }),\r\n    // ContractorSupplement: this.ContractorSupplementField,\r\n  };\r\n\r\n  components = components;\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"FullName\",\r\n      \"GovManager\",\r\n      \"GTM\",\r\n      \"APM\",\r\n      \"COR\",\r\n      \"DateStart\",\r\n      \"DateEnd\",\r\n      \"Hours\",\r\n      \"ContractorSupplement\",\r\n      \"Request\",\r\n    ],\r\n    APMUpdate: [\"COR\", \"GTM\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_ch_overtime\",\r\n    title: \"st_ch_overtime\",\r\n    isServiceType: true,\r\n    fields: CH_Overtime.Views.All,\r\n  };\r\n\r\n  // static Set = ApplicationDbContext.Set(CH_Overtime);\r\n\r\n  static uid = \"ch_overtime\";\r\n}\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const diplomaticPassportEditTemplate = html`\r\n  <div>\r\n    <div class=\"row row-cols-2\" data-bind=\"using: FieldMap\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: DocumentType.components.edit, params: DocumentType}\"\r\n      ></div>\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: RequestType.components.edit, params: RequestType}\"\r\n      ></div>\r\n    </div>\r\n    <!-- ko if: TypesSelected -->\r\n    <div class=\"row row-cols-2\" data-bind=\"using: FieldMap\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: JobTitle.components.edit, params: JobTitle}\"\r\n      ></div>\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: Grade.components.edit, params: Grade}\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"row row-cols-2\" data-bind=\"using: FieldMap\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: Supervisor.components.edit, params: Supervisor}\"\r\n      ></div>\r\n    </div>\r\n    <h4>Travel Information</h4>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: TravelFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.edit, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <h4>Personal Information</h4>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: PersonalFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.edit, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <!-- ko if: ShowPassportInfo -->\r\n    <h4>Passport Information</h4>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: PassportFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.edit, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <div\r\n      class=\"col col-12 pb-2\"\r\n      data-bind=\"component: {name: FieldMap.Justification.components.edit, params: FieldMap.Justification}\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </div>\r\n`;\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const diplomaticPassportViewTemplate = html`\r\n  <div>\r\n    <div class=\"row row-cols-2\" data-bind=\"using: FieldMap\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: DocumentType.components.view, params: DocumentType}\"\r\n      ></div>\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: RequestType.components.view, params: RequestType}\"\r\n      ></div>\r\n    </div>\r\n    <!-- ko if: TypesSelected -->\r\n    <div class=\"row row-cols-2\" data-bind=\"using: FieldMap\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: JobTitle.components.view, params: JobTitle}\"\r\n      ></div>\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: Grade.components.view, params: Grade}\"\r\n      ></div>\r\n    </div>\r\n    <h4>Travel Information</h4>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: TravelFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.view, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <h4>Personal Information</h4>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: PersonalFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.view, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <!-- ko if: ShowPassportInfo -->\r\n    <h4>Passport Information</h4>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: PassportFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.view, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <div\r\n      class=\"col col-12 pb-2\"\r\n      data-bind=\"component: {name: FieldMap.Justification.components.view, params: FieldMap.Justification}\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </div>\r\n`;\r\n", "import {\r\n  DateField,\r\n  dateFieldTypes,\r\n  PeopleField,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"../BaseServiceDetail.js\";\r\n\r\nimport { registerComponentFromConstructor } from \"../../infrastructure/RegisterComponents.js\";\r\nimport {\r\n  ConstrainedEntityEditModule,\r\n  ConstrainedEntityViewModule,\r\n} from \"../../components/index.js\";\r\nimport { diplomaticPassportEditTemplate } from \"./views/Edit.js\";\r\nimport { diplomaticPassportViewTemplate } from \"./views/View.js\";\r\n\r\nconst documentTypes = {\r\n  Passport: \"Passport\",\r\n  Visa: \"Visa\",\r\n};\r\n\r\nconst requestTypes = {\r\n  New: \"New\",\r\n  Renewal: \"Renewal\",\r\n};\r\n\r\nconst components = {\r\n  view: \"svc-diplomatic_passport-view\",\r\n  edit: \"svc-diplomatic_passport-edit\",\r\n  new: \"svc-diplomatic_passport-edit\",\r\n};\r\n\r\nclass DiplomaticPassportEditModule extends ConstrainedEntityEditModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = components.edit;\r\n  static template = diplomaticPassportEditTemplate;\r\n}\r\n\r\nclass DiplomaticPassportViewModule extends ConstrainedEntityViewModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = components.view;\r\n  static template = diplomaticPassportViewTemplate;\r\n}\r\n\r\nregisterComponentFromConstructor(DiplomaticPassportEditModule);\r\nregisterComponentFromConstructor(DiplomaticPassportViewModule);\r\n\r\nexport class DiplomaticPassportVisa extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  TypesSelected = ko.pureComputed(\r\n    () =>\r\n      this.FieldMap.RequestType.Value() && this.FieldMap.DocumentType.Value()\r\n  );\r\n\r\n  ShowPassportInfo = ko.pureComputed(() => {\r\n    const requestType = this.FieldMap.RequestType.Value();\r\n    const documentType = this.FieldMap.DocumentType.Value();\r\n\r\n    if (!requestType || !documentType) return false;\r\n    if (\r\n      documentType == documentTypes.Passport &&\r\n      requestType == requestTypes.New\r\n    )\r\n      return false;\r\n    return true;\r\n  });\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    DocumentType: new SelectField({\r\n      displayName: \"Document Type\",\r\n      options: Object.values(documentTypes),\r\n      isRequired: true,\r\n    }),\r\n    RequestType: new SelectField({\r\n      displayName: \"Request Type\",\r\n      options: Object.values(requestTypes),\r\n      isRequired: true,\r\n    }),\r\n    Supervisor: new PeopleField({\r\n      displayName: \"Supervisor\",\r\n      isRequired: true,\r\n    }),\r\n    Grade: new TextField({\r\n      displayName: \"Grade/Rank\",\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    JobTitle: new TextField({\r\n      displayName: \"Job Title\",\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    DestinationCity: new TextField({\r\n      displayName: \"Destination City\",\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    DestinationCountry: new TextField({\r\n      displayName: \"Destination Country\",\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    Departure: new DateField({\r\n      displayName: \"Departure\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    Return: new DateField({\r\n      displayName: \"Return\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    BirthLocation: new TextField({\r\n      displayName: \"State/Country of Birth\",\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    DateOfBirth: new DateField({\r\n      displayName: \"Date of Birth\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    Gender: new TextField({\r\n      displayName: \"Gender\",\r\n      isRequired: true,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n    PassportDateIssued: new DateField({\r\n      displayName: \"Issue Date (of most recent Passport)\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n      Visible: this.ShowPassportInfo,\r\n    }),\r\n    PassportDateExpiration: new DateField({\r\n      displayName: \"Expiration Date (of most recent Passport)\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: true,\r\n      Visible: this.ShowPassportInfo,\r\n    }),\r\n    FullName: new TextField({\r\n      displayName: \"Full Name (as it appears on passport)\",\r\n      isRequired: true,\r\n      Visible: this.ShowPassportInfo,\r\n    }),\r\n    PassportNum: new TextField({\r\n      displayName: \"Passport #\",\r\n      isRequired: true,\r\n      Visible: this.ShowPassportInfo,\r\n    }),\r\n    Justification: new TextAreaField({\r\n      displayName: \"Justification (if passport is expedited)\",\r\n      isRequired: false,\r\n      width: 12,\r\n      Visible: this.TypesSelected,\r\n    }),\r\n  };\r\n\r\n  TravelFields = ko.pureComputed(() => [\r\n    this.FieldMap.DestinationCountry,\r\n    this.FieldMap.DestinationCity,\r\n    this.FieldMap.Departure,\r\n    this.FieldMap.Return,\r\n  ]);\r\n\r\n  PersonalFields = ko.pureComputed(() => [\r\n    this.FieldMap.DateOfBirth,\r\n    this.FieldMap.BirthLocation,\r\n    this.FieldMap.Gender,\r\n  ]);\r\n\r\n  PassportFields = ko.pureComputed(() => [\r\n    this.FieldMap.PassportDateIssued,\r\n    this.FieldMap.PassportDateExpiration,\r\n    this.FieldMap.FullName,\r\n    this.FieldMap.PassportNum,\r\n  ]);\r\n\r\n  components = components;\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_diplomatic_passport\",\r\n    title: \"st_diplomatic_passport\",\r\n    fields: DiplomaticPassportVisa.Views.All,\r\n  };\r\n\r\n  static uid = \"diplomatic_passport\";\r\n}\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const fiscalIrregEditTemplate = html`\r\n  <div>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.edit, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"row row-cols-1\" data-bind=\"if: ShowShortageDocs\">\r\n      <div class=\"col\">\r\n        <h4>Supporting Documentation</h4>\r\n        <!-- ko if: USDValue.Value() > 500 -->\r\n        <ul>\r\n          <li>FI report of investigation.</li>\r\n          <li>\r\n            Principle Officer recommendation for shortages greater than $500.\r\n          </li>\r\n          <li>\r\n            GFS-365 Cashier Daily Reconciliation Statement showing\r\n            accountability out of balance.\r\n          </li>\r\n          <li>Class B Cashier memo to FMO reporting shortage.</li>\r\n        </ul>\r\n        <!-- /ko -->\r\n        <!-- ko ifnot: USDValue.Value() > 500 -->\r\n        <ul>\r\n          <li>FI report of investigation.</li>\r\n          <li>\r\n            Principle Officer determination for shortages less than equal to\r\n            $500.\r\n          </li>\r\n          <li>\r\n            For FI shortages of $500 or less with relief granted: DS-2076\r\n            voucher charging the FI loss to the post allotment.\r\n          </li>\r\n          <li>\r\n            For FI shortages of $500 or less with relief not granted and the\r\n            accountable officer has made restitution: memorandum to the cashier\r\n            acknowledging that restitution was made.\r\n          </li>\r\n          <li>\r\n            Subsequent GFS-365 statement showing cashier accountability back in\r\n            balance.\r\n          </li>\r\n        </ul>\r\n        <h5>Counterfeit Currency</h5>\r\n        <ul>\r\n          <li>Class B Cashier memo to FMO reporting counterfeit currency.</li>\r\n          <li>\r\n            Secret Service Or Bank report/statement confirming counterfeit\r\n            currency.\r\n          </li>\r\n          <li>Photocopies of the counterfeit bills (front and back).</li>\r\n        </ul>\r\n        <!-- /ko -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import {\r\n  DateField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextField,\r\n  dateFieldTypes,\r\n} from \"../../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"../BaseServiceDetail.js\";\r\n\r\nimport { ConstrainedEntityEditModule } from \"../../components/index.js\";\r\nimport { registerComponentFromConstructor } from \"../../infrastructure/RegisterComponents.js\";\r\nimport { defaultComponents } from \"../../primitives/index.js\";\r\nimport { fiscalIrregEditTemplate } from \"./views/Edit.js\";\r\n\r\nconst components = {\r\n  ...defaultComponents,\r\n  edit: \"svc-fiscal-irreg-edit\",\r\n  new: \"svc-fiscal-irreg-edit\",\r\n};\r\n\r\nclass FiscalIrregularitiesEditModule extends ConstrainedEntityEditModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n  static name = components.edit;\r\n  static template = fiscalIrregEditTemplate;\r\n}\r\n\r\nregisterComponentFromConstructor(FiscalIrregularitiesEditModule);\r\n\r\nexport class FiscalIrregularities extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  CaseNumber = new TextField({\r\n    displayName: \"Case Number\",\r\n    isRequired: false,\r\n  });\r\n\r\n  PostLocation = new TextField({\r\n    displayName: \"Post Location\",\r\n    isRequired: true,\r\n  });\r\n\r\n  PointOfContact = new PeopleField({\r\n    displayName: \"Point(s) of Contact\",\r\n    isRequired: true,\r\n    multiple: true,\r\n  });\r\n\r\n  CableMRN = new TextField({\r\n    displayName: \"Cable MRN\",\r\n    isRequired: false,\r\n  });\r\n\r\n  CableDate = new DateField({\r\n    displayName: \"Cable Date\",\r\n    type: dateFieldTypes.date,\r\n    isRequired: false,\r\n  });\r\n\r\n  USDValue = new TextField({\r\n    displayName: \"US Dollar Value\",\r\n    isRequired: true,\r\n    attr: { type: \"number\", min: \"0\" },\r\n  });\r\n\r\n  FIType = new SelectField({\r\n    displayName: \"Type of Irregularity\",\r\n    options: [\"Shortage\", \"Overage\"],\r\n    isRequired: true,\r\n  });\r\n\r\n  ShowShortageDocs = ko.pureComputed(() => {\r\n    return this.USDValue.Value() && this.FIType.Value() == \"Shortage\";\r\n  });\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    CaseNumber: this.CaseNumber,\r\n    PostLocation: this.PostLocation,\r\n    PointOfContact: this.PointOfContact,\r\n    CableMRN: this.CableMRN,\r\n    CableDate: this.CableDate,\r\n    USDValue: this.USDValue,\r\n    FIType: this.FIType,\r\n  };\r\n\r\n  components = components;\r\n\r\n  static uid = \"fp_fiscal_irreg\";\r\n}\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const itSoftwareViewTemplate = html`\r\n  <div>\r\n    <!-- ko if: ShowCreateProcurementButton -->\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary w-100\"\r\n      data-bind=\"click: createProcurement\"\r\n    >\r\n      Create Procurement\r\n    </button>\r\n    <!-- /ko -->\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.view, params: $data}\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { ResolverModule, html } from \"../../../components/index.js\";\r\nimport { getAppContext } from \"../../../infrastructure/ApplicationDbContext.js\";\r\nimport { RequestEntity, serviceTypeStore } from \"../../../entities/index.js\";\r\nimport { currentUser } from \"../../../infrastructure/Authorization.js\";\r\n\r\nconst createProcurementTemplate = html`\r\n  <!-- ko if: assignment.Status != assignmentStates.Completed -->\r\n  <div class=\"card m-1\">\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <h6>You have been designated as an action office resolver:</h6>\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <div>\r\n            Assignee: <span data-bind=\"text: assignment.Assignee?.Title\"></span>\r\n          </div>\r\n          <div>\r\n            Request Org:\r\n            <span data-bind=\"text: assignment.RequestOrg?.Title\"></span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            If necessary, create a procurement request, then click confirm to\r\n            proceed!\r\n          </p>\r\n          <div class=\"d-flex justify-content-start\">\r\n            <button\r\n              class=\"btn btn-primary\"\r\n              data-bind=\"click: createProcurement\"\r\n              title=\"Create new procurement from this request\"\r\n            >\r\n              Create Procurement\r\n            </button>\r\n\r\n            <button\r\n              class=\"ms-3 btn btn-success\"\r\n              title=\"Confirm email has been sent\"\r\n              data-bind=\"click: completeHandler\"\r\n            >\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /ko -->\r\n  <!-- ko if: assignment.Status == assignmentStates.Completed -->\r\n  <div class=\"alert alert-success\">\r\n    <strong>Thank you for confirming!</strong>\r\n  </div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class CreateProcurementAction extends ResolverModule {\r\n  constructor(params) {\r\n    super(params);\r\n    this.request = params.request;\r\n    this.requestBody = params.request.RequestBodyBlob.Value();\r\n  }\r\n\r\n  createProcurement = async () => {\r\n    // 1. Generate the description of the new request\r\n    let procurementDescription = \"<ul>\";\r\n    Object.values(this.requestBody.FieldMap).forEach((field) => {\r\n      if (field) {\r\n        procurementDescription += `<li>${\r\n          field.displayName\r\n        }: ${field.toString()}</li>`;\r\n      }\r\n    });\r\n    procurementDescription += \"</ul>\";\r\n\r\n    // 2. Create a new request of the procurement\r\n    const procurementServiceTypeDef = serviceTypeStore().find(\r\n      (service) => service.UID == \"procurement\"\r\n    );\r\n\r\n    const newRequest = RequestEntity.CreateByServiceType({\r\n      ServiceType: procurementServiceTypeDef,\r\n    });\r\n\r\n    // 3. Populate fields\r\n    newRequest.FieldMap.RequestDescription.set(procurementDescription);\r\n    newRequest.FieldMap.RequestingOffice.set(\r\n      this.request.FieldMap.RequestingOffice.get()\r\n    );\r\n\r\n    newRequest.FieldMap.Requestor.set(this.request.FieldMap.Requestor.get());\r\n    newRequest.FieldMap.RequestorEmail(this.request.FieldMap.RequestorEmail());\r\n    newRequest.FieldMap.RequestorPhone(this.request.FieldMap.RequestorPhone());\r\n\r\n    newRequest.FieldMap.RequestorOfficeSymbol.set(\r\n      this.request.FieldMap.RequestorOfficeSymbol.get()\r\n    );\r\n\r\n    // 4. Copy files\r\n    const sourcePath = this.request.getRelativeFolderPath();\r\n    const targetPath = await newRequest.Attachments.createFolder();\r\n\r\n    const _context = getAppContext();\r\n    try {\r\n      await _context.Attachments.CopyFolderContents(sourcePath, targetPath);\r\n      newRequest.Attachments.refresh();\r\n    } catch (e) {\r\n      console.error(\"Error copying files: \", e);\r\n    }\r\n    // 5. View Request\r\n    window.WorkOrder.App.NewRequest({ request: newRequest });\r\n  };\r\n\r\n  static name = \"create-procurement\";\r\n  static template = createProcurementTemplate;\r\n}\r\n", "import { TextField, SelectField } from \"../../fields/index.js\";\r\n\r\nimport { defaultComponents } from \"../../primitives/ConstrainedEntity.js\";\r\n\r\nimport { BaseServiceDetail } from \"../BaseServiceDetail.js\";\r\nimport { ConstrainedEntityViewModule } from \"../../components/index.js\";\r\nimport { itSoftwareViewTemplate } from \"./views/View.js\";\r\nimport { registerComponentFromConstructor } from \"../../infrastructure/RegisterComponents.js\";\r\nimport { CreateProcurementAction } from \"./components/CreateProcurementAction.js\";\r\n\r\nregisterComponentFromConstructor(CreateProcurementAction);\r\n\r\nexport class ITSoftware extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  CostThreshold = ko.pureComputed(\r\n    () => parseInt(this.FieldMap.Cost.Value()) > 500\r\n  );\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    Name: new TextField({\r\n      displayName: \"Software Name\",\r\n      isRequired: true,\r\n    }),\r\n    Quantity: new TextField({\r\n      displayName: \"Quantity\",\r\n      isRequired: true,\r\n    }),\r\n    POCName: new TextField({\r\n      displayName: \"POC\",\r\n      isRequired: true,\r\n    }),\r\n    Cost: new TextField({\r\n      displayName: \"Cost (USD)\",\r\n      isRequired: true,\r\n    }),\r\n    RequestType: new SelectField({\r\n      displayName: \"Request Type\",\r\n      options: [\"New\", \"Maintenance Renewal\"],\r\n      isRequired: true,\r\n    }),\r\n    PurchaseFrequency: new SelectField({\r\n      displayName: \"Purchase Frequency\",\r\n      options: [\"One Time\", \"Recurring\"],\r\n      isRequired: this.CostThreshold,\r\n    }),\r\n    ApprovedPurchase: new SelectField({\r\n      displayName: \"Approved Purchase\",\r\n      options: [\"Yes\", \"No\"],\r\n      isRequired: this.CostThreshold,\r\n    }),\r\n    FundingSource: new SelectField({\r\n      displayName: \"Funding Source\",\r\n      options: [\"Project\", \"Contract\", \"Other\"],\r\n      isRequired: this.CostThreshold,\r\n    }),\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Request\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_it_software\",\r\n    title: \"st_it_software\",\r\n    fields: ITSoftware.Views.All,\r\n  };\r\n\r\n  static uid = \"it_software\";\r\n}\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const propSpaceEditTemplate = html`\r\n  <div>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.edit, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"alert alert-warning\" data-bind=\"visible: ShowEndofLoanAlert\">\r\n      <h4>End of Loan Return of Items</h4>\r\n      All property which was borrowed must be returned to the Bureau by the\r\n      employee when the property is no longer needed for the use for which it\r\n      was originally provided 14 FAM 425 3-4. The employee must email the\r\n      CGFS/EX/ADMIN team at\r\n      <a href=\"mailto:CGFS_EX_ADMIN@state.gov\">CGFS_EX_ADMIN@state.gov</a> to\r\n      coordinate return. Reminder, any lost or damaged property is the\r\n      responsibility of the borrowing employee. Any lost or damaged property\r\n      must be immediately reported to the CGFS/EX/ADMIN team.\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const propSpaceViewTemplate = html`\r\n  <div>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.view, params: $data}\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"alert alert-warning\" data-bind=\"visible: ShowEndofLoanAlert\">\r\n      <h4>End of Loan Return of Items</h4>\r\n      All property which was borrowed must be returned to the Bureau by the\r\n      employee when the property is no longer needed for the use for which it\r\n      was originally provided 14 FAM 425 3-4. The employee must email the\r\n      CGFS/EX/ADMIN team at\r\n      <a href=\"mailto:CGFS_EX_ADMIN@state.gov\">CGFS_EX_ADMIN@state.gov</a> to\r\n      coordinate return. Reminder, any lost or damaged property is the\r\n      responsibility of the borrowing employee. Any lost or damaged property\r\n      must be immediately reported to the CGFS/EX/ADMIN team.\r\n    </div>\r\n  </div>\r\n`;\r\n", "import {\r\n  ConstrainedEntityEditModule,\r\n  ConstrainedEntityViewModule,\r\n} from \"../../components/index.js\";\r\nimport { TextField, SelectField } from \"../../fields/index.js\";\r\nimport { registerComponentFromConstructor } from \"../../infrastructure/RegisterComponents.js\";\r\nimport { BaseServiceDetail } from \"../BaseServiceDetail.js\";\r\nimport { propSpaceEditTemplate } from \"./views/Edit.js\";\r\nimport { propSpaceViewTemplate } from \"./views/View.js\";\r\n\r\nconst components = {\r\n  view: \"svc-prop_space-view\",\r\n  edit: \"svc-prop_space-edit\",\r\n  new: \"svc-prop_space-edit\",\r\n};\r\n\r\nclass PropertySpaceEditModule extends ConstrainedEntityEditModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = components.edit;\r\n  static template = propSpaceEditTemplate;\r\n}\r\n\r\nclass PropertySpaceViewModule extends ConstrainedEntityViewModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = components.view;\r\n  static template = propSpaceViewTemplate;\r\n}\r\n\r\nregisterComponentFromConstructor(PropertySpaceEditModule);\r\nregisterComponentFromConstructor(PropertySpaceViewModule);\r\n\r\nexport class PropertySpace extends BaseServiceDetail {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  serviceTypes = {\r\n    Property: \"Property\",\r\n    Space: \"Space\",\r\n  };\r\n\r\n  // property logic\r\n  propertySvcTypes = {\r\n    Inventory: \"Inventory Request\",\r\n    Move: \"Property move from one space to another\",\r\n    Excess: \"Property excess request\",\r\n    Loanable: \"Loanable Property\",\r\n  };\r\n\r\n  propertyTypeOptions = [\r\n    \"Backpack\",\r\n    \"Computer Monitor\",\r\n    \"Computer Speakers\",\r\n    \"Headset\",\r\n    \"Keyboard\",\r\n    \"Mouse\",\r\n    \"PIV Card Reader\",\r\n    \"Web Camera\",\r\n  ];\r\n\r\n  // Space Logic\r\n\r\n  spaceSvcTypes = {\r\n    Move: \"Moving from one space to another\",\r\n    New: \"Request for new office space\",\r\n  };\r\n\r\n  ShowEndofLoanAlert = ko.pureComputed(() => {\r\n    return (\r\n      this.FieldMap.PropOrSpace.Value() == this.serviceTypes.Property &&\r\n      this.FieldMap.PropRequestType.Value() == this.propertySvcTypes.Loanable\r\n    );\r\n  });\r\n\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    PropOrSpace: new SelectField({\r\n      displayName: \" Type\",\r\n      options: Object.values(this.serviceTypes),\r\n      isRequired: true,\r\n    }),\r\n    //Property\r\n    PropRequestType: new SelectField({\r\n      displayName: \"Property Request Type\",\r\n      options: Object.values(this.propertySvcTypes),\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(\r\n        () => this.FieldMap.PropOrSpace.Value() == this.serviceTypes.Property\r\n      ),\r\n    }),\r\n    LocationChoice: new SelectField({\r\n      displayName: \"Location\",\r\n      options: [\"On Premise\", \"Off Premise\"],\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(() => {\r\n        return (\r\n          this.FieldMap.PropOrSpace.Value() == this.serviceTypes.Property &&\r\n          this.FieldMap.PropRequestType.Value() ==\r\n            this.propertySvcTypes.Inventory\r\n        );\r\n      }),\r\n    }),\r\n    // Space\r\n    SpaceRequestType: new SelectField({\r\n      displayName: \"Space Request Type\",\r\n      options: Object.values(this.spaceSvcTypes),\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(\r\n        () => this.FieldMap.PropOrSpace.Value() == this.serviceTypes.Space\r\n      ),\r\n    }),\r\n    NumberEmployees: new TextField({\r\n      displayName: \"Number of Employees\",\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(\r\n        () =>\r\n          this.FieldMap.PropOrSpace.Value() == this.serviceTypes.Space &&\r\n          this.FieldMap.SpaceRequestType.Value() == this.spaceSvcTypes.New\r\n      ),\r\n    }),\r\n    Timeframe: new TextField({\r\n      displayName: \"New Location\",\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(\r\n        () => this.FieldMap.PropOrSpace.Value() == this.serviceTypes.Space\r\n      ),\r\n    }),\r\n    // Shared\r\n    CurrentLocation: new TextField({\r\n      displayName: \"Current Location\",\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(() => {\r\n        const svcType = this.FieldMap.PropOrSpace.Value();\r\n        if (!svcType) return false;\r\n\r\n        if (svcType == this.serviceTypes.Property) {\r\n          return (\r\n            this.FieldMap.PropRequestType.Value() ==\r\n              this.propertySvcTypes.Move ||\r\n            this.FieldMap.PropRequestType.Value() ==\r\n              this.propertySvcTypes.Excess\r\n          );\r\n        }\r\n\r\n        if (svcType == this.serviceTypes.Space) {\r\n          return (\r\n            this.FieldMap.SpaceRequestType.Value() == this.spaceSvcTypes.Move\r\n          );\r\n        }\r\n      }),\r\n    }),\r\n    NewLocation: new TextField({\r\n      displayName: \"New Location\",\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(() => {\r\n        const svcType = this.FieldMap.PropOrSpace.Value();\r\n        if (!svcType) return false;\r\n\r\n        if (svcType == this.serviceTypes.Property) {\r\n          return (\r\n            this.FieldMap.PropRequestType.Value() == this.propertySvcTypes.Move\r\n          );\r\n        }\r\n\r\n        if (svcType == this.serviceTypes.Space) {\r\n          return (\r\n            this.FieldMap.SpaceRequestType.Value() == this.spaceSvcTypes.Move\r\n          );\r\n        }\r\n      }),\r\n    }),\r\n    NumberItems: new TextField({\r\n      displayName: \"Number of Items\",\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(() => {\r\n        const svcType = this.FieldMap.PropOrSpace.Value();\r\n        if (!svcType) return false;\r\n        if (svcType == this.serviceTypes.Property)\r\n          return this.FieldMap.PropRequestType.Value();\r\n        return (\r\n          this.FieldMap.SpaceRequestType.Value() == this.spaceSvcTypes.Move\r\n        );\r\n      }),\r\n    }),\r\n    // Property Bottom\r\n    //TODO: Minor - This is using a single line of text instead of a lookup, formatting is weird\r\n    PropertyType: new SelectField({\r\n      displayName: \"Type of Property\",\r\n      options: this.propertyTypeOptions,\r\n      multiple: true,\r\n      isRequired: true,\r\n      Visible: ko.pureComputed(() => {\r\n        return (\r\n          this.FieldMap.PropOrSpace.Value() == this.serviceTypes.Property &&\r\n          this.FieldMap.PropRequestType.Value()\r\n        );\r\n      }),\r\n    }),\r\n  };\r\n\r\n  components = components;\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"PropOrSpace\",\r\n      \"PropRequestType\",\r\n      \"LocationChoice\",\r\n      \"SpaceRequestType\",\r\n      \"NumberEmployees\",\r\n      \"Timeframe\",\r\n      \"CurrentLocation\",\r\n      \"NewLocation\",\r\n      \"NumberItems\",\r\n      \"PropertyType\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_property_space\",\r\n    title: \"st_property_space\",\r\n    fields: PropertySpace.Views.All,\r\n  };\r\n\r\n  static uid = \"property_space\";\r\n}\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const templateViewTemplate = html`\r\n  <div>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.view, params: $data}\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { html } from \"../../../components/BaseComponent.js\";\r\nexport const templateEditTemplate = html`\r\n  <div>\r\n    <div class=\"row row-cols-2\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"col pb-2\"\r\n        data-bind=\"component: {name: components.edit, params: $data}\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import {\r\n  BlobField,\r\n  CheckboxField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  LookupField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../../fields/index.js\";\r\n\r\nimport { BaseServiceDetail } from \"../BaseServiceDetail.js\";\r\n\r\nimport { RequestOrg, requestOrgStore } from \"../../entities/RequestOrg.js\";\r\nimport { ServiceType, serviceTypeStore } from \"../../entities/ServiceType.js\";\r\nimport { registerComponentFromConstructor } from \"../../infrastructure/RegisterComponents.js\";\r\nimport { templateViewTemplate } from \"./views/View.js\";\r\nimport { templateEditTemplate } from \"./views/Edit.js\";\r\nimport {\r\n  ConstrainedEntityEditModule,\r\n  ConstrainedEntityViewModule,\r\n} from \"../../components/index.js\";\r\n\r\n/* \r\nComponents and registration are only necessary if we have custom views in our ./views folder\r\nRemove if using the default views (don't forget to remove the reference in our entity request!)\r\n*/\r\nconst components = {\r\n  view: \"svc-template-view\",\r\n  edit: \"svc-template-edit\",\r\n  new: \"svc-template-edit\",\r\n};\r\n\r\n// registerServiceTypeViewComponents({ uid: \"template\", components });\r\n\r\nconst getApmOrg = ko.pureComputed(() => {\r\n  return requestOrgStore().find(\r\n    (org) => org.Title.toUpperCase() == \"CGFS/APMS\"\r\n  );\r\n});\r\n\r\nclass TemplateRequestViewModule extends ConstrainedEntityViewModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = components.view;\r\n  static template = templateViewTemplate;\r\n}\r\n\r\nclass TemplateRequestEditModule extends ConstrainedEntityEditModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = components.edit;\r\n  static template = templateEditTemplate;\r\n}\r\n\r\nregisterComponentFromConstructor(TemplateRequestEditModule);\r\nregisterComponentFromConstructor(TemplateRequestViewModule);\r\n\r\nexport class TemplateRequest extends BaseServiceDetail {\r\n  constructor(entityParams) {\r\n    super(entityParams);\r\n  }\r\n\r\n  /* A Service Type must define a fieldmap: \r\n    Each key corresponds to the SP Column system name\r\n    Each Value should be a predefined field, or should \r\n    expose a get() and set() function that will be used to\r\n    write and read the value from SharePoint. */\r\n  FieldMap = {\r\n    ...this.FieldMap,\r\n    SamplePeople: new PeopleField({\r\n      displayName: \"Supervisor\",\r\n      isRequired: false,\r\n    }),\r\n    SampleMultiPeople: new PeopleField({\r\n      displayName: \"Multiple People\",\r\n      isRequired: false,\r\n      multiple: true,\r\n    }),\r\n    SampleGroupPeople: new PeopleField({\r\n      displayName: \"Group People\",\r\n      isRequired: false,\r\n    }),\r\n    SampleSelect: new SelectField({\r\n      displayName: \" Type\",\r\n      options: [\"FTE\", \"Contractor\"],\r\n      isRequired: false,\r\n    }),\r\n    SampleText: new TextField({\r\n      displayName: \"FullName\",\r\n      isRequired: false,\r\n    }),\r\n    SampleTextArea: new TextAreaField({\r\n      displayName: \"NotificationDates\",\r\n      isRequired: false,\r\n    }),\r\n    SampleDate: new DateField({\r\n      displayName: \"ExpirationDate\",\r\n      type: dateFieldTypes.date,\r\n      isRequired: false,\r\n    }),\r\n    SampleCheckbox: new CheckboxField({\r\n      displayName: \"SpecialOrder\",\r\n    }),\r\n    SampleLookup: new LookupField({\r\n      displayName: \"Request Org\",\r\n      type: RequestOrg,\r\n      lookupCol: \"Title\",\r\n      Options: requestOrgStore,\r\n      isRequired: false,\r\n      multiple: false,\r\n    }),\r\n    SampleMultiLookup: new LookupField({\r\n      displayName: \"Service Types\",\r\n      type: ServiceType,\r\n      lookupCol: \"Title\",\r\n      Options: serviceTypeStore,\r\n      isRequired: false,\r\n      multiple: true,\r\n    }),\r\n  };\r\n\r\n  components = components;\r\n\r\n  /* Optional views when querying the EntitySet. \r\n    By default, all declared columns are used.\r\n    When a view is passed, only the specified columns are loaded. */\r\n  static Views = {\r\n    All: [\"ID\", \"Title\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"st_template\",\r\n    title: \"st_template\",\r\n    fields: TemplateRequest.Views.All,\r\n  };\r\n\r\n  static uid = \"template\";\r\n}\r\n", "import { assetsPath } from \"../env.js\";\r\nimport ApplicationDbContext from \"../infrastructure/ApplicationDbContext.js\";\r\nimport { systemRoles } from \"../infrastructure/Authorization.js\";\r\nimport * as ServiceTypeDetails from \"../servicetypes/index.js\";\r\n\r\nconst getServiceDetailByUID = (uid) => {\r\n  let result = null;\r\n  for (const detail in ServiceTypeDetails) {\r\n    //console.log(ServiceTypeDetails[detail].uid);\r\n    if (ServiceTypeDetails[detail].uid == uid) {\r\n      result = ServiceTypeDetails[detail];\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTemplateElementId = (uid) => `tmpl-${uid}`;\r\n\r\nconst getServiceTypePathByUid = (uid) => `${assetsPath}/servicetypes/${uid}/`;\r\n\r\nexport const getTemplateFilePath = (uid) =>\r\n  getServiceTypePathByUid(uid) + `${uid}-template.html`;\r\n\r\nexport const getModuleFilePath = (uid) =>\r\n  getServiceTypePathByUid(uid) + `Entity.js`;\r\n\r\nexport const serviceTypeStore = ko.observableArray();\r\n\r\nexport class ServiceType {\r\n  constructor(serviceType) {\r\n    this.ID = serviceType.ID;\r\n    this.Title = serviceType.Title;\r\n    this.LookupValue = serviceType.Title;\r\n\r\n    this.Loaded = false;\r\n    Object.assign(this, serviceType);\r\n  }\r\n\r\n  getRepositoryListName = () => `st_${this.UID}`;\r\n\r\n  getListDef = () => {\r\n    if (!this.HasTemplate) {\r\n      return null;\r\n    }\r\n    const listName = this.getRepositoryListName();\r\n    return { title: listName, name: listName };\r\n  };\r\n\r\n  _listRef = null;\r\n\r\n  getListRef = () => {\r\n    if (!this.HasTemplate) {\r\n      return null;\r\n    }\r\n    if (!this._initialized) {\r\n      throw new Error(\"Accessing constructor before initialization\");\r\n    }\r\n    // Memoization\r\n    if (!this._listRef)\r\n      this._listRef = ApplicationDbContext.Set(this._constructor);\r\n    return this._listRef;\r\n  };\r\n\r\n  _constructor = null;\r\n\r\n  instantiateEntity = async (requestContext) => {\r\n    if (!this.HasTemplate || !this.UID) {\r\n      return null;\r\n    }\r\n\r\n    if (!this._initialized) {\r\n      await this.initializeEntity();\r\n    }\r\n\r\n    return this._constructor ? new this._constructor(requestContext) : null;\r\n  };\r\n\r\n  _initialized = false;\r\n  initializeEntity = async () => {\r\n    if (this._initialized) return;\r\n    if (!this.HasTemplate || !this.UID) {\r\n      return;\r\n    }\r\n    if (this._constructor) {\r\n      console.warn(\"Service type was already initialized\");\r\n      this._initialized = true;\r\n      return;\r\n    }\r\n    // this.ServiceType.IsLoading(true);\r\n    let serviceModule = null;\r\n    try {\r\n      serviceModule = getServiceDetailByUID(this.UID);\r\n      // serviceModule = await import(getModuleFilePath(this.UID));\r\n      if (!serviceModule) {\r\n        console.error(\"Could not find service module\", this);\r\n      }\r\n      this._constructor = serviceModule;\r\n    } catch (e) {\r\n      console.error(\"Cannot import service type module\", e, this);\r\n    } finally {\r\n      this._initialized = true;\r\n    }\r\n  };\r\n\r\n  // TODO: Minor - this should be in a servicetype manager service\r\n  userCanInitiate = (user) => {\r\n    if (!this.Active) return false;\r\n    if (user.hasSystemRole(systemRoles.Admin)) return true;\r\n    if (this.RequestingOrgs.length > 0) {\r\n      return (\r\n        this.RequestingOrgs.find((ro) => user.isInRequestOrg(ro)) !== undefined\r\n      );\r\n    }\r\n    return true;\r\n  };\r\n\r\n  attachmentsRequiredCntString = () => {\r\n    if (!this.AttachmentsRequiredCnt) return \"no\";\r\n    if (this.AttachmentsRequiredCnt < 0) return \"multiple\";\r\n    return this.AttachmentsRequiredCnt;\r\n  };\r\n\r\n  static FindInStore = function (serviceType) {\r\n    if (!serviceType || !serviceType.ID) return null;\r\n    return serviceTypeStore().find((service) => service.ID == serviceType.ID);\r\n  };\r\n\r\n  // TODO: Major - ReportingRequestOrgs\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"Active\",\r\n      \"HasTemplate\",\r\n      \"DescriptionTitle\",\r\n      \"DescriptionRequired\",\r\n      \"DescriptionFieldInstructions\",\r\n      \"Description\",\r\n      \"Icon\",\r\n      \"AttachmentsRequiredCnt\",\r\n      \"AttachmentDescription\",\r\n      \"DaysToCloseBusiness\",\r\n      \"UID\",\r\n      \"ReportingOrgs\",\r\n      \"RequestingOrgs\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"ConfigServiceTypes\",\r\n    title: \"ConfigServiceTypes\",\r\n    fields: ServiceType.Views.All,\r\n  };\r\n}\r\n", "import { TextAreaField, TextField } from \"../fields/index.js\";\r\nimport { ConstrainedEntity } from \"../primitives/index.js\";\r\n\r\nexport class RequestIngest extends ConstrainedEntity {\r\n  constructor({ ID, Title }) {\r\n    super();\r\n    this.ID = ID;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n  }\r\n\r\n  From = new TextField({\r\n    displayName: \"From\",\r\n  });\r\n\r\n  To = new TextField({\r\n    displayName: \"To\",\r\n  });\r\n\r\n  CC = new TextField({\r\n    displayName: \"CC\",\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Subject\",\r\n  });\r\n\r\n  Body = new TextAreaField({\r\n    displayName: \"Body\",\r\n    isRichText: true,\r\n  });\r\n\r\n  FieldMap = {\r\n    To: this.To,\r\n    From: this.From,\r\n    CC: this.CC,\r\n    Title: this.Title,\r\n    Body: this.Body,\r\n  };\r\n\r\n  getStagedAttachmentsFolderPath = () => \"Staged/\" + this.ID;\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"From\", \"To\", \"CC\", \"Body\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"RequestIngest\",\r\n    title: \"RequestIngest\",\r\n    fields: RequestIngest.Views.All,\r\n  };\r\n}\r\n", "import { SPList, copyFileAsync } from \"./SAL.js\";\r\nimport { Assignment } from \"../entities/Assignment.js\";\r\nimport { Notification } from \"../entities/Notification.js\";\r\nimport { RequestEntity } from \"../entities/Request.js\";\r\nimport { Holiday } from \"../entities/Holiday.js\";\r\nimport { PipelineStage } from \"../entities/PipelineStage.js\";\r\nimport { RequestOrg } from \"../entities/RequestOrg.js\";\r\nimport { ServiceType } from \"../entities/ServiceType.js\";\r\nimport { Action } from \"../entities/Action.js\";\r\nimport { Attachment } from \"../entities/Attachment.js\";\r\nimport { Comment } from \"../entities/Comment.js\";\r\nimport { RequestIngest } from \"../entities/RequestIngest.js\";\r\n\r\nconst DEBUG = false;\r\n\r\nlet context = null;\r\n\r\nexport function CreateAppContext() {\r\n  if (context) {\r\n    return;\r\n  }\r\n  context = new ApplicationDbContext();\r\n}\r\n\r\nexport function getAppContext() {\r\n  return context;\r\n}\r\n\r\nexport const lookupType = {\r\n  value: \"LookupValue\",\r\n  id: \"LookupID\",\r\n};\r\n\r\nconst virtualSets = new Map();\r\n\r\nclass DbContext {\r\n  constructor() {}\r\n\r\n  CopyFileAsync = async function (source, dest) {\r\n    return copyFileAsync(source, dest);\r\n  };\r\n\r\n  virtualSets = new Map();\r\n\r\n  Set = (entityType) => {\r\n    const key = entityType.ListDef.name;\r\n\r\n    // If we have a defined entityset, return that\r\n    const set = Object.values(this)\r\n      .filter((val) => val.constructor.name == EntitySet.name)\r\n      .find((set) => set.ListDef?.name == key);\r\n    if (set) return set;\r\n\r\n    if (!this.virtualSets.has(key)) {\r\n      const newSet = new EntitySet(entityType);\r\n      this.virtualSets.set(key, newSet);\r\n      return newSet;\r\n    }\r\n    return this.virtualSets.get(key);\r\n  };\r\n}\r\n\r\nexport default class ApplicationDbContext extends DbContext {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  Actions = new EntitySet(Action);\r\n\r\n  Assignments = new EntitySet(Assignment);\r\n\r\n  Attachments = new EntitySet(Attachment);\r\n\r\n  Comments = new EntitySet(Comment);\r\n\r\n  Notifications = new EntitySet(Notification);\r\n\r\n  Requests = new EntitySet(RequestEntity);\r\n\r\n  RequestIngests = new EntitySet(RequestIngest);\r\n\r\n  ConfigHolidays = new EntitySet(Holiday);\r\n\r\n  ConfigRequestOrgs = new EntitySet(RequestOrg);\r\n\r\n  ConfigPipelines = new EntitySet(PipelineStage);\r\n\r\n  ConfigServiceTypes = new EntitySet(ServiceType);\r\n}\r\n\r\nclass EntitySet {\r\n  constructor(entityType) {\r\n    if (!entityType.ListDef) {\r\n      console.error(\"Missing entityType listdef for\", entityType);\r\n      return;\r\n    }\r\n\r\n    // Check if the object we passed in defines a ListDef\r\n    this.entityType = entityType;\r\n\r\n    try {\r\n      const allFieldsSet = new Set();\r\n      entityType.Views?.All?.map((field) => allFieldsSet.add(field));\r\n      const newEntity = new this.entityType({ ID: null, Title: null });\r\n      if (newEntity.FieldMap) {\r\n        Object.keys(newEntity.FieldMap).map((field) => allFieldsSet.add(field));\r\n      }\r\n      // const fieldMapKeysSet = new Set(...);\r\n      // entityType.Views.All.map((field) => fieldMapKeysSet.add(field));\r\n      this.AllDeclaredFields = [...allFieldsSet];\r\n    } catch (e) {\r\n      console.warn(\"Could not instantiate\", entityType), console.warn(e);\r\n      this.AllDeclaredFields = entityType.Views?.All ?? [];\r\n    }\r\n\r\n    this.ListDef = entityType.ListDef;\r\n    this.Views = entityType.Views;\r\n    this.Title = entityType.ListDef.title;\r\n    this.Name = entityType.ListDef.name;\r\n\r\n    this.ListRef = new SPList(entityType.ListDef);\r\n\r\n    this.entityConstructor =\r\n      this.entityType.FindInStore || this.entityType.Create || this.entityType;\r\n  }\r\n\r\n  // Queries\r\n  // TODO: Feature - Queries should return options to read e.g. toList, first, toCursor\r\n  FindById = async (id, fields = this.AllDeclaredFields) => {\r\n    const result = await this.ListRef.findByIdAsync(id, fields);\r\n    if (!result) return null;\r\n    const newEntity = new this.entityType(result);\r\n    mapObjectToEntity(result, newEntity);\r\n    return newEntity;\r\n  };\r\n\r\n  /**\r\n   * Takes an array of columns and filter values with an optional comparison operator\r\n   * @param {[{column, op?, value}]} columnFilters\r\n   * @param {*} param1\r\n   * @param {*} param2\r\n   * @param {*} fields\r\n   * @param {*} includeFolders\r\n   * @returns\r\n   */\r\n  FindByColumnValue = async (\r\n    columnFilters,\r\n    { orderByColumn, sortAsc },\r\n    { count = null },\r\n    fields = this.AllDeclaredFields,\r\n    includeFolders = false\r\n  ) => {\r\n    // if we pass in a count, we are expecting a cursor result\r\n    const returnCursor = count != null;\r\n    count = count ?? 5000;\r\n    // else, we should apply a count of 5000 and keep fetching\r\n\r\n    const results = await this.ListRef.findByColumnValueAsync(\r\n      columnFilters,\r\n      { orderByColumn, sortAsc },\r\n      { count },\r\n      fields,\r\n      includeFolders\r\n    );\r\n\r\n    let cursor = {\r\n      _next: results._next,\r\n      results: results.results.map((item) => {\r\n        const newEntity = new this.entityConstructor(item);\r\n        mapObjectToEntity(item, newEntity);\r\n        return newEntity;\r\n      }),\r\n    };\r\n\r\n    if (returnCursor) {\r\n      return cursor;\r\n    }\r\n\r\n    const resultObj = {\r\n      results: cursor.results,\r\n    };\r\n\r\n    while (cursor._next) {\r\n      cursor = await this.LoadNextPage(cursor);\r\n      resultObj.results.concat(cursor.results);\r\n    }\r\n\r\n    return resultObj;\r\n  };\r\n\r\n  LoadNextPage = async (cursor) => {\r\n    const results = await this.ListRef.loadNextPage(cursor);\r\n    return {\r\n      _next: results._next,\r\n      results: results.results.map((item) => {\r\n        const newEntity = new this.entityType(item);\r\n        mapObjectToEntity(item, newEntity);\r\n        return newEntity;\r\n      }),\r\n    };\r\n  };\r\n  /**\r\n   * Return all items in list\r\n   */\r\n  ToList = async (fields = this.Views.All) => {\r\n    const results = await this.ListRef.getListItemsAsync({ fields });\r\n    return results.map((item) => {\r\n      const newEntity = new this.entityType(item);\r\n      mapObjectToEntity(item, newEntity);\r\n      return newEntity;\r\n    });\r\n  };\r\n\r\n  LoadEntity = async function (entity) {\r\n    if (!entity.ID) {\r\n      console.error(\"entity missing Id\", entity);\r\n      return false;\r\n    }\r\n    const item = await this.ListRef.findByIdAsync(\r\n      entity.ID,\r\n      this.ListDef.fields\r\n    );\r\n    if (!item) {\r\n      console.warn(\"ApplicationDbContext Could not find entity\", entity);\r\n      return false;\r\n    }\r\n    mapObjectToEntity(item, entity);\r\n    return true;\r\n  };\r\n\r\n  // Mutators\r\n  AddEntity = async function (entity, folderPath, request = null) {\r\n    const creationfunc = mapEntityToObject.bind(this);\r\n    const writeableEntity = creationfunc(entity);\r\n\r\n    if (request) {\r\n      writeableEntity.Title = request.Title;\r\n      writeableEntity.Request = request;\r\n    }\r\n    if (DEBUG) console.log(writeableEntity);\r\n    const newId = await this.ListRef.createListItemAsync(\r\n      writeableEntity,\r\n      folderPath\r\n    );\r\n    mapObjectToEntity({ ID: newId }, entity);\r\n    return;\r\n  };\r\n\r\n  UpdateEntity = async function (entity, fields = null) {\r\n    const writeableEntity = mapEntityToObject.bind(this)(entity, fields);\r\n    writeableEntity.ID =\r\n      typeof entity.ID == \"function\" ? entity.ID() : entity.ID;\r\n    if (DEBUG) console.log(writeableEntity);\r\n    return this.ListRef.updateListItemAsync(writeableEntity);\r\n  };\r\n\r\n  RemoveEntity = async function (entity) {\r\n    if (!entity.ID) return false;\r\n    await this.ListRef.deleteListItemAsync(entity.ID);\r\n    return true;\r\n  };\r\n\r\n  // Permissions\r\n  SetItemPermissions = async function (entityId, valuePairs, reset = false) {\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].getKey(), vp[1]]);\r\n    return this.ListRef.setItemPermissionsAsync(entityId, salValuePairs, reset);\r\n  };\r\n\r\n  GetItemPermissions = function (id) {\r\n    return this.ListRef.getItemPermissionsAsync(id);\r\n  };\r\n\r\n  // Folder Methods\r\n  GetFolderUrl = function (relFolderPath = \"\") {\r\n    return this.ListRef.getServerRelativeFolderPath(relFolderPath);\r\n  };\r\n\r\n  GetItemsByFolderPath = async function (\r\n    folderPath,\r\n    fields = this.AllDeclaredFields\r\n  ) {\r\n    //return this.ListRef.getFolderContentsAsync(folderPath, fields);\r\n    const results = await this.ListRef.getFolderContentsAsync(\r\n      folderPath,\r\n      fields\r\n    );\r\n    return results.map((result) => {\r\n      const newEntity = new this.entityType(result);\r\n      mapObjectToEntity(result, newEntity);\r\n      return newEntity;\r\n    });\r\n  };\r\n\r\n  UpsertFolderPath = async function (folderPath) {\r\n    return this.ListRef.upsertFolderPathAsync(folderPath);\r\n  };\r\n\r\n  DeleteFolderByPath = function (folderPath) {\r\n    return this.ListRef.deleteFolderByPathAsync(folderPath);\r\n  };\r\n\r\n  // Permissions\r\n  SetFolderReadOnly = async function (relFolderPath) {\r\n    return this.ListRef.setFolderReadonlyAsync(relFolderPath);\r\n  };\r\n\r\n  SetFolderPermissions = async function (folderPath, valuePairs, reset = true) {\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].getKey(), vp[1]]);\r\n    return this.ListRef.setFolderPermissionsAsync(\r\n      folderPath,\r\n      salValuePairs,\r\n      reset\r\n    );\r\n  };\r\n\r\n  EnsureFolderPermissions = async function (relFolderPath, valuePairs) {\r\n    // Slightly more expensive operation to verify a user has the required permissions\r\n    // before adding them. This will cut down on the number of unique permissions in the\r\n    // system since a user may already have the permission via group membership.\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].LoginName ?? vp[0].Title, vp[1]]);\r\n    return this.ListRef.ensureFolderPermissionsAsync(\r\n      relFolderPath,\r\n      salValuePairs\r\n    );\r\n  };\r\n\r\n  // Other Functions\r\n  UploadFileToFolderAndUpdateMetadata = async function (\r\n    file,\r\n    filename,\r\n    folderPath,\r\n    updates,\r\n    progress\r\n  ) {\r\n    const itemId = await this.ListRef.uploadFileToFolderAndUpdateMetadata(\r\n      file,\r\n      filename,\r\n      folderPath,\r\n      updates,\r\n      progress\r\n    );\r\n    const item = await this.ListRef.getById(itemId, this.AllDeclaredFields);\r\n    const newEntity = new this.entityConstructor(item);\r\n    mapObjectToEntity(item, newEntity);\r\n    return newEntity;\r\n  };\r\n\r\n  UploadNewDocument = async function (folderPath, args) {\r\n    return this.ListRef.uploadNewDocumentAsync(\r\n      folderPath,\r\n      \"Attach a New Document\",\r\n      args\r\n    );\r\n  };\r\n\r\n  CopyFolderContents = async function (sourceFolder, targetFolder) {\r\n    return this.ListRef.copyFilesAsync(sourceFolder, targetFolder);\r\n  };\r\n\r\n  CopyFileAsync = async function (sourceServerRelativeUrl, siteDestUrl) {\r\n    return this.ListRef.copyFileAsync(sourceServerRelativeUrl, siteDestUrl);\r\n  };\r\n\r\n  CopyAttachmentFromPath = async function (\r\n    sourceServerRelativeUrl,\r\n    entity,\r\n    filename = null\r\n  ) {\r\n    return this.ListRef.copyAttachmentFromPath(\r\n      sourceServerRelativeUrl,\r\n      entity,\r\n      filename\r\n    );\r\n  };\r\n\r\n  // Form Methods\r\n  ShowForm = async function (name, title, args) {\r\n    return new Promise((resolve, reject) =>\r\n      this.ListRef.showModal(name, title, args, resolve)\r\n    );\r\n  };\r\n\r\n  EnsureList = async function () {};\r\n}\r\n\r\nexport function mapObjectToEntity(inputObject, targetEntity) {\r\n  if (!inputObject || !targetEntity) return;\r\n  // Takes an object and attempts to map it to the target entity\r\n  Object.keys(inputObject).forEach((key) => {\r\n    mapValueToEntityProperty(key, inputObject[key], targetEntity);\r\n  });\r\n}\r\n\r\nfunction mapValueToEntityProperty(propertyName, inputValue, targetEntity) {\r\n  //1. Check if the targetEntity has a fieldmapping for this property\r\n  if (targetEntity.FieldMap && targetEntity.FieldMap[propertyName]) {\r\n    mapObjectToViewField(inputValue, targetEntity.FieldMap[propertyName]);\r\n    return;\r\n  }\r\n  // 2. This is just a regular property, set it\r\n  if (\r\n    targetEntity[propertyName] &&\r\n    typeof targetEntity[propertyName] == \"function\"\r\n  ) {\r\n    targetEntity[propertyName](inputValue);\r\n    return;\r\n  }\r\n  targetEntity[propertyName] = inputValue;\r\n  return;\r\n}\r\n\r\nfunction mapObjectToViewField(inVal, fieldMap) {\r\n  // Fieldmap has Three options for setting,\r\n  // 1. observable - the fieldmap represents an observable\r\n  // 2. setter - the fieldmap exposes a setter\r\n  // 3. factory/obs - the fieldmap exposes a factory and an observable to put the result.\r\n\r\n  if (typeof fieldMap == \"function\") {\r\n    fieldMap(inVal);\r\n    return;\r\n  }\r\n\r\n  if (typeof fieldMap != \"object\") {\r\n    fieldMap = inVal;\r\n    return;\r\n  }\r\n\r\n  if (fieldMap.set && typeof fieldMap.set == \"function\") {\r\n    fieldMap.set(inVal);\r\n    return;\r\n  }\r\n\r\n  if (fieldMap.obs) {\r\n    if (!inVal) {\r\n      fieldMap.obs(null);\r\n      return;\r\n    }\r\n    // If the input value is an array, then we are putting an array into the observable.\r\n    const outVal = Array.isArray(inVal)\r\n      ? inVal.map((item) => generateObject(item, fieldMap))\r\n      : generateObject(inVal, fieldMap);\r\n\r\n    fieldMap.obs(outVal);\r\n    return;\r\n  }\r\n\r\n  fieldMap = inVal;\r\n  //throw \"Error setting fieldmap?\";\r\n}\r\n\r\nfunction generateObject(inVal, fieldMap) {\r\n  // If the fieldMap provides a factory, use that, otherwise return the value\r\n  return fieldMap.factory ? fieldMap.factory(inVal) : inVal;\r\n}\r\n\r\nexport function mapEntityToObject(input, selectedFields = null) {\r\n  const entity = {};\r\n  // We either predefine the fields in the ListDef, or provide a complete fieldmap\r\n  const allWriteableFieldsSet = new Set([]);\r\n  if (this?.ListDef?.fields) {\r\n    this.ListDef.fields.forEach((field) => allWriteableFieldsSet.add(field));\r\n  }\r\n  if (input.FieldMap) {\r\n    Object.keys(input.FieldMap).forEach((field) =>\r\n      allWriteableFieldsSet.add(field)\r\n    );\r\n  }\r\n  const allWriteableFields = [...allWriteableFieldsSet];\r\n\r\n  const fields =\r\n    selectedFields ??\r\n    (input.FieldMap ? Object.keys(input.FieldMap) : null) ??\r\n    Object.keys(input);\r\n\r\n  fields\r\n    .filter((field) => allWriteableFields.includes(field))\r\n    .map((field) => {\r\n      if (input.FieldMap && input.FieldMap[field]) {\r\n        entity[field] = mapViewFieldToValue(input.FieldMap[field]);\r\n        return;\r\n      }\r\n      entity[field] = input[field];\r\n    });\r\n\r\n  return entity;\r\n}\r\n\r\nfunction mapViewFieldToValue(fieldMap) {\r\n  // Fieldmap has Three options for getting,\r\n  // 1. observable - the fieldmap represents an observable or other function that returns a value\r\n  // 2. get - the fieldmap is an object that exposes a getter function\r\n  // 3. factory/obs - the fieldmap is an object exposes a factory and an observable.\r\n  if (typeof fieldMap == \"function\") {\r\n    return fieldMap();\r\n  }\r\n  if (fieldMap.get && typeof fieldMap.get == \"function\") {\r\n    return fieldMap.get();\r\n  }\r\n\r\n  if (fieldMap.obs) {\r\n    return fieldMap.obs();\r\n  }\r\n\r\n  return fieldMap;\r\n\r\n  // console.error(\"Error setting fieldMap\", fieldMap);\r\n  // throw \"Error getting fieldmap\";\r\n}\r\n\r\n// export const _context = new ApplicationDbContext();\r\n", "import { BaseField } from \"./index.js\";\r\nimport {\r\n  mapObjectToEntity,\r\n  mapEntityToObject,\r\n} from \"../infrastructure/ApplicationDbContext.js\";\r\nimport { BlobModule } from \"../components/Fields/index.js\";\r\n\r\nexport default class BlobField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.entityType = params.entityType;\r\n    this.multiple = params.multiple;\r\n\r\n    if (this.multiple) {\r\n      this.Value = ko.observableArray();\r\n    }\r\n\r\n    if (ko.isObservable(this.entityType)) {\r\n      this.entityType.subscribe(this.updateEntityTypeHandler);\r\n      // this.Value.subscribe(this.updateEntityTypeHandler);\r\n    }\r\n    this.updateEntityTypeHandler(ko.unwrap(this.entityType));\r\n  }\r\n\r\n  toString = ko.pureComputed(() => `${this.Value()?.length ?? \"0\"} items`);\r\n\r\n  toJSON = ko.pureComputed(() => {\r\n    if (!this.multiple) return this.Value()?.toJSON();\r\n    return this.Value().map((value) => value.toJSON());\r\n  });\r\n\r\n  fromJSON = (input) => {\r\n    if (!input) return;\r\n    if (!this.multiple) {\r\n      this.Value()?.fromJSON(input);\r\n      return;\r\n    }\r\n    this.Value.removeAll();\r\n    input.map((obj) => {\r\n      const newEntity = new this.entityConstructor();\r\n      newEntity.fromJSON(obj);\r\n      this.Value.push(newEntity);\r\n    });\r\n  };\r\n\r\n  // TypedValues = ko.observableArray();\r\n  // TypedValue = ko.observable();\r\n\r\n  // Value = ko.pureComputed(() =>\r\n  //   this.multiple ? this.TypedValues() : this.TypedValue()\r\n  // );\r\n\r\n  get = () => {\r\n    return JSON.stringify(this.toJSON());\r\n  };\r\n\r\n  blob;\r\n  set = (val) => {\r\n    if (window.DEBUG) console.log(val);\r\n    this.blob = val;\r\n    if (val?.constructor == BlobField) {\r\n      // this.fromJSON(val.toJSON());\r\n      return;\r\n    }\r\n    this.fromJSON(JSON.parse(val));\r\n  };\r\n\r\n  get entityConstructor() {\r\n    return ko.utils.unwrapObservable(this.entityType);\r\n  }\r\n\r\n  // use purecomputed for memoization, fields shouldn't change\r\n  Cols = ko.pureComputed(() => {\r\n    const entityType = ko.unwrap(this.entityType);\r\n    if (!entityType) return [];\r\n\r\n    const newEntity = new this.entityConstructor();\r\n\r\n    return newEntity.FormFields();\r\n  });\r\n\r\n  // ColKeys = ko.pureComputed(() =>\r\n  //   new this.entityConstructor()?.FormFieldKeys()\r\n  // );\r\n\r\n  // Support multiple items\r\n  NewItem = ko.observable();\r\n\r\n  submit = () => {\r\n    const errors = this.NewItem()?.validate();\r\n    if (errors.length) return;\r\n\r\n    this.Value.push(this.NewItem());\r\n\r\n    this.NewItem(new this.entityConstructor());\r\n  };\r\n\r\n  add = (item) => this.Value.push(item);\r\n  remove = (item) => this.Value.remove(item);\r\n\r\n  updateEntityTypeHandler = (newType) => {\r\n    if (!newType) return;\r\n\r\n    if (!this.multiple) {\r\n      this.Value(new this.entityConstructor());\r\n    } else {\r\n      this.NewItem(new this.entityConstructor());\r\n    }\r\n    if (this.blob) this.fromJSON(JSON.parse(this.blob));\r\n\r\n    // this.applyValueToTypedValues();\r\n  };\r\n\r\n  applyValueToTypedValues = () => {\r\n    if (!this.Value() || !this.TypedValue()) return;\r\n\r\n    if (!this.multiple) {\r\n      mapObjectToEntity(this.Value(), this.TypedValue());\r\n      return;\r\n    }\r\n\r\n    const typedItems = this.Value()?.map((item) => {\r\n      const newEntity = new this.entityConstructor();\r\n      mapObjectToEntity(item, newEntity);\r\n      return newEntity;\r\n    });\r\n    this.TypedValues(typedItems);\r\n  };\r\n\r\n  // Errors = ko.pureComputed(() => {\r\n  //   if (!this.Visible()) return [];\r\n  //   // const isRequired = ko.unwrap(this.isRequired);\r\n  //   const isRequired =\r\n  //     typeof this.isRequired == \"function\"\r\n  //       ? this.isRequired()\r\n  //       : this.isRequired;\r\n  //   if (!isRequired) return [];\r\n  //   const currentValue = this.multiple ? this.TypedValues() : this.TypedValue();\r\n  //   return currentValue\r\n  //     ? []\r\n  //     : [\r\n  //         new ValidationError(\r\n  //           \"text-field\",\r\n  //           \"required-field\",\r\n  //           (typeof this.displayName == \"function\"\r\n  //             ? this.displayName()\r\n  //             : this.displayName) + ` is required!`\r\n  //         ),\r\n  //       ];\r\n  // });\r\n\r\n  components = BlobModule;\r\n}\r\n", "import { BaseField } from \"./index.js\";\r\nimport { CheckboxModule } from \"../components/Fields/index.js\";\r\n\r\nexport default class CheckboxField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  components = CheckboxModule;\r\n}\r\n", "import { DateModule, dateFieldTypes } from \"../components/Fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport { dateFieldTypes } from \"../components/Fields/index.js\";\r\n\r\n/**\r\n * This field needs to convert between locale and UTC Dates stored on the server;\r\n */\r\n\r\nexport default class DateField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.type = params.type ?? dateFieldTypes.date;\r\n  }\r\n\r\n  toString = ko.pureComputed(() => {\r\n    // if this is datetime vs date we expect different things\r\n    switch (this.type) {\r\n      case dateFieldTypes.date:\r\n        return this.toLocaleDateString();\r\n      case dateFieldTypes.datetime:\r\n        return this.toLocaleString();\r\n      default:\r\n        return \"\";\r\n    }\r\n  });\r\n\r\n  toSortableDateString = () => this.Value()?.format(\"yyyy-MM-dd\");\r\n  toLocaleDateString = () => this.Value()?.toLocaleDateString();\r\n  toLocaleString = () => this.Value()?.toLocaleString();\r\n\r\n  get = ko.pureComputed(() => {\r\n    if (!this.Value() || isNaN(this.Value().valueOf())) {\r\n      return null;\r\n    }\r\n\r\n    return this.Value().toISOString();\r\n  });\r\n\r\n  set = (newDate) => {\r\n    if (!newDate) return null;\r\n    if (newDate.constructor.getName() != \"Date\") {\r\n      // console.warn(\"Attempting to set date\", newDate);\r\n      newDate = new Date(newDate);\r\n    }\r\n    if (newDate.getTimezoneOffset()) {\r\n    }\r\n    this.Value(newDate);\r\n  };\r\n\r\n  components = DateModule;\r\n}\r\n", "import { LookupModule } from \"../components/Fields/index.js\";\r\nimport { getAppContext } from \"../infrastructure/ApplicationDbContext.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport default class LookupField extends BaseField {\r\n  constructor({\r\n    displayName,\r\n    type: entityType,\r\n    isRequired = false,\r\n    Visible,\r\n    Options = null,\r\n    optionsText = null,\r\n    multiple = false,\r\n    lookupCol = null,\r\n  }) {\r\n    super({ Visible, displayName, isRequired });\r\n    // Support passing in options\r\n    // if options are not passed, assume this is a search input\r\n    Options ? (this.Options = Options) : (this.isSearch = true);\r\n\r\n    this.multiple = multiple;\r\n    this.Value = multiple ? ko.observableArray() : ko.observable();\r\n\r\n    this.entityType = entityType;\r\n    // this.entitySet = getAppContext().Set(entityType);\r\n    this.lookupCol = lookupCol ?? \"Title\";\r\n    this.optionsText = optionsText ?? ((item) => item[this.lookupCol]);\r\n  }\r\n\r\n  _entitySet;\r\n  get entitySet() {\r\n    if (!this._entitySet)\r\n      this._entitySet = getAppContext().Set(this.entityType);\r\n    return this._entitySet;\r\n  }\r\n\r\n  isSearch = false;\r\n\r\n  Options = ko.observableArray();\r\n  IsLoading = ko.observable(false);\r\n  HasLoaded = ko.observable(false);\r\n\r\n  // TODO: Started this, should really go in the entity base class if we're doing active record\r\n  // create = async () => {\r\n  //   const newItems = this.multiple ? this.Value() : [this.Value()]\r\n  //   newItems.map(item => this.entitySet.AddEntity(newItems))\r\n  // }\r\n\r\n  refresh = async () => {\r\n    if (!!!this.Value()) {\r\n      return;\r\n    }\r\n    this.IsLoading(true);\r\n    if (!this.multiple) {\r\n      await this.entitySet.LoadEntity(this.Value());\r\n      this.IsLoading(false);\r\n      this.HasLoaded(true);\r\n      return;\r\n    }\r\n\r\n    await Promise.all(\r\n      this.Value().map(\r\n        async (entity) => await this.entitySet.LoadEntity(entity)\r\n      )\r\n    );\r\n    this.IsLoading(false);\r\n    this.HasLoaded(true);\r\n  };\r\n\r\n  ensure = async () => {\r\n    if (this.HasLoaded()) return;\r\n    if (this.IsLoading()) {\r\n      return new Promise((resolve, reject) => {\r\n        const isLoadingSubscription = this.IsLoading.subscribe((isLoading) => {\r\n          if (!isLoading) {\r\n            isLoadingSubscription.dispose();\r\n            resolve();\r\n          }\r\n        });\r\n      });\r\n    }\r\n    await this.refresh();\r\n  };\r\n\r\n  toString = ko.pureComputed(() => {\r\n    if (!!!this.Value()) {\r\n      return \"\";\r\n    }\r\n    if (this.multiple) {\r\n      return this.Value()\r\n        .map((val) => getEntityPropertyAsString(val, this.lookupCol))\r\n        .join(\", \");\r\n    }\r\n    return getEntityPropertyAsString(this.Value(), this.lookupCol);\r\n  });\r\n\r\n  get = () => {\r\n    if (!this.Value()) return;\r\n    if (this.multiple) {\r\n      return this.Value().map((entity) => {\r\n        return {\r\n          ID: entity.ID,\r\n          LookupValue: entity.LookupValue,\r\n          Title: entity.Title,\r\n        };\r\n      });\r\n    }\r\n    const entity = this.Value();\r\n    return {\r\n      ID: entity.ID,\r\n      LookupValue: entity.LookupValue,\r\n      Title: entity.Title,\r\n    };\r\n  };\r\n  set = (val) => {\r\n    if (!val) {\r\n      this.Value(val);\r\n      return;\r\n    }\r\n    if (this.multiple) {\r\n      const valArr = Array.isArray(val) ? val : val.results ?? val.split(\"#;\");\r\n\r\n      this.Value(valArr.map((value) => this.findOrCreateNewEntity(value)));\r\n      return;\r\n    }\r\n\r\n    this.Value(this.findOrCreateNewEntity(val));\r\n    if (val && !this.toString()) {\r\n      this.ensure();\r\n    }\r\n  };\r\n\r\n  findOrCreateNewEntity = (val) => {\r\n    if (this.entityType.FindInStore) {\r\n      const foundEntity = this.entityType.FindInStore(val);\r\n      if (foundEntity) return foundEntity;\r\n      console.warn(\r\n        `Could not find entity in store: ${this.entityType.name}`,\r\n        val\r\n      );\r\n    }\r\n\r\n    if (this.entityType.Create) {\r\n      return this.entityType.Create(val);\r\n    }\r\n\r\n    return new this.entityType(val);\r\n  };\r\n\r\n  components = LookupModule;\r\n}\r\n\r\n// Should fully constrain all entities, this is ridiculous\r\nfunction getEntityPropertyAsString(entity, column) {\r\n  if (entity.FieldMap && entity.FieldMap[column]) {\r\n    const field = entity.FieldMap[column];\r\n    if (typeof field == \"function\") {\r\n      return field();\r\n    }\r\n\r\n    if (field.toString && typeof field.toString == \"function\") {\r\n      return field.toString();\r\n    }\r\n\r\n    if (field.get && typeof field.get == \"function\") {\r\n      return field.get();\r\n    }\r\n\r\n    if (field.obs) {\r\n      return field.obs();\r\n    }\r\n\r\n    return field;\r\n  }\r\n  return entity[column] ?? \"\";\r\n}\r\n", "import { sortByTitle } from \"../common/EntityUtilities.js\";\r\nimport { PeopleModule } from \"../components/Fields/PeopleModule.js\";\r\nimport { People } from \"../entities/People.js\";\r\nimport { getUsersByGroupName } from \"../infrastructure/Authorization.js\";\r\nimport { ensureUserByKeyAsync } from \"../infrastructure/SAL.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nconst components = {\r\n  view: \"people-view\",\r\n  edit: \"people-edit\",\r\n  new: \"people-edit\",\r\n};\r\n\r\nexport default class PeopleField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    // this.pickerOptions = params.pickerOptions ?? {};\r\n    this.spGroupName = params.spGroupName ?? null;\r\n    this.multiple = params.multiple ?? false;\r\n    // this.pickerOptions = params.pickerOptions ?? {};\r\n\r\n    this.Value = this.multiple ? ko.observableArray() : ko.observable();\r\n\r\n    if (ko.isObservable(this.spGroupName)) {\r\n      this.spGroupName.subscribe(this.spGroupNameChangedHandler);\r\n    }\r\n    if (ko.unwrap(this.spGroupName)) {\r\n      this.spGroupNameChangedHandler(ko.unwrap(this.spGroupName));\r\n    }\r\n  }\r\n\r\n  spGroupId = ko.observable();\r\n  userOpts = ko.observableArray();\r\n  expandUsers = ko.observable(false);\r\n\r\n  spGroupNameChangedHandler = async (groupName) => {\r\n    if (!groupName) {\r\n      this.userOpts.removeAll();\r\n      this.spGroupId(null);\r\n    }\r\n\r\n    const group = await ensureUserByKeyAsync(groupName);\r\n    this.spGroupId(group.ID);\r\n    const users = await getUsersByGroupName(groupName);\r\n    this.userOpts(users.sort(sortByTitle));\r\n  };\r\n\r\n  pickerOptions = ko.pureComputed(() => {\r\n    const groupId = ko.unwrap(this.spGroupId);\r\n\r\n    const opts = {\r\n      AllowMultipleValues: this.multiple,\r\n    };\r\n\r\n    if (groupId) opts.SharePointGroupID = groupId;\r\n\r\n    return opts;\r\n  });\r\n\r\n  toString = ko.pureComputed(() => {\r\n    if (!this.multiple) return this.Value()?.Title;\r\n\r\n    return this.Value()?.map((user) => user.Title);\r\n  });\r\n\r\n  set = (val) => {\r\n    if (!this.multiple) {\r\n      this.Value(People.Create(val));\r\n      return;\r\n    }\r\n\r\n    if (!val) {\r\n      this.Value.removeAll();\r\n      return;\r\n    }\r\n\r\n    const vals = val.results ?? val;\r\n\r\n    if (!vals.length) {\r\n      this.Value.removeAll();\r\n      return;\r\n    }\r\n    this.Value(vals.map((u) => People.Create(u)));\r\n  };\r\n\r\n  components = PeopleModule;\r\n}\r\n", "import { SelectModule } from \"../components/Fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport default class SelectField extends BaseField {\r\n  constructor({\r\n    displayName,\r\n    isRequired = false,\r\n    Visible,\r\n    options,\r\n    multiple = false,\r\n    optionsText,\r\n    instructions,\r\n  }) {\r\n    super({ Visible, displayName, isRequired, instructions });\r\n    ko.isObservable(options) ? (this.Options = options) : this.Options(options);\r\n    this.multiple = multiple;\r\n    this.Value = multiple ? ko.observableArray() : ko.observable();\r\n    this.optionsText = optionsText;\r\n  }\r\n\r\n  toString = ko.pureComputed(() =>\r\n    this.multiple ? this.Value().join(\", \") : this.Value()\r\n  );\r\n\r\n  get = () => this.Value();\r\n\r\n  set = (val) => {\r\n    if (val && this.multiple) {\r\n      if (Array.isArray(val)) {\r\n        this.Value(val);\r\n      } else {\r\n        this.Value(val.results ?? val.split(\";#\"));\r\n      }\r\n      return;\r\n    }\r\n    this.Value(val);\r\n  };\r\n\r\n  Options = ko.observableArray();\r\n\r\n  components = SelectModule;\r\n}\r\n", "import { TextModule } from \"../components/Fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\n// import ValidationError from \"../primitives/ValidationError.js\";\r\n\r\nexport default class TextField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.attr = params.attr ?? {};\r\n  }\r\n\r\n  components = TextModule;\r\n}\r\n", "import {\r\n  TextAreaField,\r\n  TextField,\r\n  PeopleField,\r\n  DateField,\r\n  LookupField,\r\n  SelectField,\r\n} from \"../fields/index.js\";\r\nimport { currentUser } from \"../infrastructure/Authorization.js\";\r\nimport { RequestEntity } from \"./Request.js\";\r\n\r\nexport class Notification {\r\n  constructor() {}\r\n\r\n  static Create({ To = \"\", CC = \"\", Title = \"\", Body = \"\", Request = null }) {\r\n    const notification = new Notification();\r\n    notification.ToString.Value(To);\r\n    notification.CCString.Value(CC);\r\n    notification.Title.Value(Title);\r\n    notification.Body.Value(Body);\r\n    notification.Request.Value(Request);\r\n\r\n    return notification;\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Subject\",\r\n    isRequired: true,\r\n  });\r\n\r\n  ToString = new TextField({\r\n    displayName: \"To\",\r\n    isRequired: true,\r\n    instructions:\r\n      \"Use ; to separate emails (e.g. smithj@state.gov;carls@state.gov;)\",\r\n  });\r\n\r\n  To = new PeopleField({\r\n    displayName: \"To (people)\",\r\n    multiple: true,\r\n  });\r\n\r\n  CCString = new TextField({\r\n    displayName: \"CC\",\r\n    isRequired: true,\r\n    instructions:\r\n      \"Use ; to separate emails (e.g. smithj@state.gov;carls@state.gov;)\",\r\n  });\r\n\r\n  CC = new PeopleField({\r\n    displayName: \"CC (people)\",\r\n    multiple: true,\r\n  });\r\n\r\n  BCCString = new TextField({\r\n    displayName: \"BCC\",\r\n    isRequired: false,\r\n  });\r\n\r\n  BCC = new PeopleField({\r\n    displayName: \"BCC (people)\",\r\n    multiple: true,\r\n  });\r\n\r\n  sendAsOpts = ko.pureComputed(() => {\r\n    const user = ko.unwrap(currentUser);\r\n    if (!user) return [];\r\n    const opts = user\r\n      ?.ActionOffices()\r\n      .map((ao) => ao.PreferredEmail)\r\n      .filter((email) => email);\r\n\r\n    // if (user.Email) opts.unshift(user.Email);\r\n    return opts ?? [];\r\n  });\r\n\r\n  SendAs = new SelectField({\r\n    displayName: \"Send From (optional)\",\r\n    options: this.sendAsOpts,\r\n    instructions: \"*only pre-approved mailboxes are supported.\",\r\n  });\r\n\r\n  Body = new TextAreaField({\r\n    displayName: \"Body\",\r\n    isRichText: true,\r\n  });\r\n\r\n  Sent = new DateField({\r\n    displayName: \"Sent On\",\r\n  });\r\n\r\n  Request = new LookupField({\r\n    type: RequestEntity,\r\n  });\r\n\r\n  FieldMap = {\r\n    Title: this.Title,\r\n    ToString: this.ToString,\r\n    To: this.To,\r\n    CCString: this.CCString,\r\n    CC: this.CC,\r\n    BCCString: this.BCCString,\r\n    BCC: this.BCC,\r\n    SendAs: this.SendAs,\r\n    Body: this.Body,\r\n    Sent: this.Sent,\r\n  };\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"To\",\r\n      \"ToString\",\r\n      \"CC\",\r\n      \"CCString\",\r\n      \"BCC\",\r\n      \"Body\",\r\n      \"Sent\",\r\n      \"Request\",\r\n      \"DateToSend\",\r\n      \"FileRef\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Notifications\",\r\n    title: \"Notifications\",\r\n    fields: this.Views.All,\r\n  };\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\n\r\nexport const pendingRequestsIngestTemplate = html`\r\n  <!-- ko if: PendingRows().length -->\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div\r\n        class=\"card-title d-flex justify-content-between align-items-center accordion-header\"\r\n      >\r\n        <h4\r\n          class=\"mx-0 px-2 flex-grow-1 pointer accordion-title collapsed d-flex align-items-center justify-content-between\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#pending-ingest-body\"\r\n        >\r\n          (<span data-bind=\"text: PendingRows().length\"></span>) Pending\r\n          Conversion\r\n          <i class=\"indicator fa fa-caret-down\"></i>\r\n        </h4>\r\n      </div>\r\n      <div id=\"pending-ingest-body\" class=\"accordion-collapse collapse\">\r\n        <table class=\"table table-sm hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Subject</th>\r\n              <th>Convert To</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody data-bind=\"foreach: PendingRows\">\r\n            <tr data-bind=\"\">\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-link\"\r\n                  title=\"Toggle additional details\"\r\n                  data-bind=\"text: requestIngest.Title.toString(), \r\n                    toggles: ShowBody\"\r\n                ></button>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  data-bind=\"options: $parent.ConvertToOptions, \r\n            optionsText: 'Title',\r\n            optionsCaption: 'Select...',\r\n            value: ConvertTo\"\r\n                ></select>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  title=\"Delete Item\"\r\n                  class=\"btn btn-link\"\r\n                  data-bind=\"click: $parent.deleteItem\"\r\n                >\r\n                  <span class=\"fas fa-trash pointer\"></span>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <!-- ko if: ShowBody -->\r\n            <!-- ko using: requestIngest -->\r\n            <tr>\r\n              <td colspan=\"3\">\r\n                <div class=\"d-flex justify-content-start gap-5 w-full\">\r\n                  <div\r\n                    data-bind=\"component: {\r\n                      name: To.components.view, \r\n                      params: To}\"\r\n                  ></div>\r\n                  <div\r\n                    data-bind=\"component: {\r\n                      name: CC.components.view, \r\n                      params: CC}\"\r\n                  ></div>\r\n                  <div\r\n                    data-bind=\"component: {\r\n                      name: From.components.view, \r\n                      params: From}\"\r\n                  ></div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colspan=\"3\">\r\n                <div\r\n                  style=\"max-height: 75vh\"\r\n                  class=\"overflow-auto\"\r\n                  data-bind=\"component: {\r\n                    name: Body.components.view, \r\n                    params: Body}\"\r\n                ></div>\r\n              </td>\r\n            </tr>\r\n            <!-- /ko -->\r\n            <!-- /ko -->\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /ko -->\r\n`;\r\n", "import {\r\n  Attachment,\r\n  serviceTypeStore,\r\n  RequestEntity,\r\n} from \"../../entities/index.js\";\r\n\r\nimport { currentUser } from \"../../infrastructure/Authorization.js\";\r\nimport { getAppContext } from \"../../infrastructure/ApplicationDbContext.js\";\r\n\r\nimport { BaseComponent } from \"../index.js\";\r\nimport { pendingRequestsIngestTemplate } from \"./PendingRequestIngestsTemplate.js\";\r\n\r\nimport { requestIngests } from \"../../stores/Requests.js\";\r\n\r\nexport class PendingRequestIngestsModule extends BaseComponent {\r\n  PendingRows = ko.pureComputed(() => {\r\n    // return [];\r\n    return requestIngests().map((item) => new RequestIngestItem(item));\r\n  });\r\n\r\n  ConvertToOptions = ko.pureComputed(() =>\r\n    serviceTypeStore().filter((serviceType) =>\r\n      serviceType.userCanInitiate(currentUser())\r\n    )\r\n  );\r\n\r\n  deleteItem = async ({ requestIngest }) => {\r\n    const context = getAppContext();\r\n\r\n    // Delete attachments\r\n    const folderPath = requestIngest.getStagedAttachmentsFolderPath();\r\n    await context.Attachments.DeleteFolderByPath(folderPath);\r\n\r\n    // Delete item\r\n    await context.RequestIngests.RemoveEntity(requestIngest);\r\n\r\n    requestIngests(await context.RequestIngests.ToList());\r\n  };\r\n\r\n  static name = \"pending-request-ingests\";\r\n  static template = pendingRequestsIngestTemplate;\r\n}\r\n\r\nclass RequestIngestItem {\r\n  constructor(requestIngest) {\r\n    this.requestIngest = requestIngest;\r\n\r\n    this.ConvertTo.subscribe(this.onConvertToChangeHandler);\r\n  }\r\n\r\n  ShowBody = ko.observable(false);\r\n\r\n  ConvertTo = ko.observable();\r\n\r\n  onConvertToChangeHandler = (convertTo) => {\r\n    if (!convertTo) return null;\r\n    this.ConvertTo(null);\r\n    this.ShowBody(false);\r\n    console.log(\"converting to...\", convertTo);\r\n    convertToServiceType(convertTo, this.requestIngest);\r\n  };\r\n}\r\n\r\nasync function convertToServiceType(serviceType, requestIngest) {\r\n  await serviceType.initializeEntity();\r\n\r\n  const newRequest = new RequestEntity({\r\n    ServiceType: serviceType,\r\n  });\r\n\r\n  const emailBody = requestIngest.Body.Value();\r\n  // Attempt any service type specific mapping\r\n  if (newRequest.RequestBodyBlob?.Value()?.fromEmail) {\r\n    newRequest.RequestBodyBlob?.Value()?.fromEmail(emailBody);\r\n  }\r\n\r\n  // Set the email content as the body\r\n  newRequest.RequestDescription.Value(emailBody);\r\n\r\n  // Check if there are any attachments\r\n  const context = getAppContext();\r\n  const requestIngestAttachmentPath =\r\n    requestIngest.getStagedAttachmentsFolderPath();\r\n\r\n  const attachmentCount = await context.Attachments.GetItemsByFolderPath(\r\n    requestIngestAttachmentPath,\r\n    Attachment.Views.All\r\n  );\r\n\r\n  if (attachmentCount.length) {\r\n    console.log(\"Copying attachments\");\r\n    const folderPath = await newRequest.Attachments.createFolder();\r\n    await context.Attachments.CopyFolderContents(\r\n      requestIngestAttachmentPath,\r\n      folderPath\r\n    );\r\n\r\n    await newRequest.Attachments.refresh();\r\n  }\r\n\r\n  window.WorkOrder.App.NewRequest({ request: newRequest });\r\n}\r\n", "export function makeDataTable(tableId) {\r\n  tableId = tableId.startsWith(\"#\") ? tableId : \"#\" + tableId;\r\n  return new DataTable(tableId, {\r\n    dom:\r\n      \"<'ui stackable grid'\" +\r\n      \"<'row'\" +\r\n      \"<'eight wide column'l>\" +\r\n      \"<'right aligned eight wide column'f>\" +\r\n      \">\" +\r\n      \"<'row dt-table'\" +\r\n      \"<'sixteen wide column'tr>\" +\r\n      \">\" +\r\n      \"<'row'\" +\r\n      \"<'six wide column'i>\" +\r\n      \"<'d-flex justify-content-center'B>\" +\r\n      \"<'right aligned six wide column'p>\" +\r\n      \">\" +\r\n      \">\",\r\n    buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"],\r\n    order: [[0, \"desc\"]],\r\n    iDisplayLength: 25,\r\n    deferRender: true,\r\n    bDestroy: true,\r\n    // columnDefs: [{ width: \"10%\", targets: 0 }],\r\n    initComplete: function () {\r\n      this.api()\r\n        .columns()\r\n        .every(function () {\r\n          var column = this;\r\n          var tbl = $(column.header()).closest(\"table\");\r\n          // Set the row we want our filter to show up in\r\n          // var filterCell = tbl.find(\"thead tr:eq(1) th\").eq(column.index());\r\n          var filterCell = $(column.footer());\r\n\r\n          var select = $(\r\n            '<search-select class=\"\"><option value=\"\"></option></search-select>'\r\n          );\r\n          switch (filterCell.attr(\"data-filter\")) {\r\n            case \"select-filter\":\r\n              select.attr(\"multiple\", \"true\");\r\n            case \"single-select-filter\":\r\n              select.appendTo(filterCell.empty()).on(\"change\", function () {\r\n                var vals = this.selectedOptions.map((opt) => opt.value);\r\n                if (!vals) {\r\n                  vals = [];\r\n                } else {\r\n                  vals = vals.map(function (value) {\r\n                    return value\r\n                      ? \"^\" + $.fn.dataTable.util.escapeRegex(value) + \"$\"\r\n                      : null;\r\n                  });\r\n                }\r\n                var val = vals.join(\"|\");\r\n                column.search(val, true, false).draw();\r\n              });\r\n              // Populate our select option values based on column cells.\r\n              let options = \"\";\r\n              column\r\n                .data()\r\n                .unique()\r\n                .sort()\r\n                .each(function (optionText, j) {\r\n                  // first try to parse html\r\n                  try {\r\n                    let parsedElement = $(optionText);\r\n\r\n                    if (parsedElement.is(\"a\")) {\r\n                      optionText = parsedElement.text();\r\n                    }\r\n                  } catch (e) {\r\n                    //Nothing to do here, it's not valid html\r\n                  }\r\n\r\n                  options += `<option value=\"${optionText}\" title=\"${optionText}\">${optionText}</option>`;\r\n                });\r\n\r\n              select.append(options);\r\n              break;\r\n            case \"search-filter\":\r\n              $(\r\n                '<div class=\"\">' +\r\n                  '<input class=\"form-control\" type=\"text\" placeholder=\"Search...\" style=\"width: 100%\"/>' +\r\n                  \"</div>\"\r\n              )\r\n                .appendTo(filterCell.empty())\r\n                .on(\"keyup change clear\", function () {\r\n                  const inputSearchText =\r\n                    this.getElementsByTagName(\"input\")[0].value;\r\n                  if (column.search() !== inputSearchText) {\r\n                    column.search(inputSearchText).draw();\r\n                  }\r\n                });\r\n              break;\r\n            case \"bool-filter\":\r\n              // Does this row contain data?\r\n              var checkbox = $('<input type=\"checkbox\"></input>')\r\n                .appendTo(filterCell.empty())\r\n                .change(function () {\r\n                  if (this.checked) {\r\n                    column.search(\"true\").draw();\r\n                  } else {\r\n                    column.search(\"\").draw();\r\n                  }\r\n                });\r\n              break;\r\n            default:\r\n          }\r\n          if (filterCell.attr(\"clear-width\")) {\r\n            // Clear width to contents\r\n            tbl.find(\"thead tr:eq(0) th\").eq(column.index()).width(\"\");\r\n          }\r\n        });\r\n    },\r\n  });\r\n}\r\n", "import { Assignment, assignmentStates } from \"../entities/Assignment.js\";\r\nimport { requestStates } from \"../constants/index.js\";\r\nimport { requestsByStatusMap } from \"./Requests.js\";\r\nimport { getAppContext } from \"../infrastructure/ApplicationDbContext.js\";\r\nimport { currentUser } from \"../infrastructure/Authorization.js\";\r\n\r\nclass AssignmentsSet {\r\n  constructor() {}\r\n  IsLoading = ko.observable();\r\n  HasLoaded = ko.observable(false);\r\n\r\n  AllOpenRequests = requestsByStatusMap.get(requestStates.open).List;\r\n\r\n  MyAssignedRequests = ko.pureComputed(() =>\r\n    this.AllOpenRequests().filter(\r\n      (request) =>\r\n        request.Assignments.CurrentStage.list.UserActionAssignments().length\r\n    )\r\n  );\r\n\r\n  MyActiveAssignments = ko.pureComputed(() =>\r\n    this.MyAssignedRequests()\r\n      .flatMap((request) =>\r\n        request.Assignments.CurrentStage.list.UserActionAssignments()\r\n      )\r\n      .filter(\r\n        (assignment) =>\r\n          assignment.Status == assignmentStates.InProgress &&\r\n          assignment.userIsDirectlyAssigned(currentUser())\r\n      )\r\n  );\r\n\r\n  // List = ko.pureComputed(() =>\r\n  //   this.AllOpenRequests().flatMap(request.Assignments.list.All())\r\n  // );\r\n  List = ko.observableArray();\r\n\r\n  getByRequest = (request) => {\r\n    return this.List().filter(\r\n      (assignment) => assignment.Request.ID == request.ID\r\n    );\r\n  };\r\n\r\n  getOpenByRequest = ko.pureComputed(() => {\r\n    const openAssignments = [];\r\n    const openRequests =\r\n      requestsByStatusMap.get(requestStates.open)?.List() ?? [];\r\n\r\n    //const openRequestIds = openRequests.map(request => request.ID)\r\n\r\n    const inProgress = this.List().filter(\r\n      (assignment) => assignment.Status == assignmentStates.InProgress\r\n    );\r\n\r\n    openRequests.map((request) => {\r\n      openAssignments.push(\r\n        ...assignmentsStore.getByRequest(request).filter((assignment) => {\r\n          return (\r\n            assignment.Status == assignmentStates.InProgress &&\r\n            assignment.userIsDirectlyAssigned(currentUser())\r\n          );\r\n        })\r\n      );\r\n    });\r\n    return openAssignments;\r\n    //assignmentsStore.getOpenByUser(currentUser());\r\n  });\r\n\r\n  getOpenByUser = (user) =>\r\n    ko.pureComputed(() =>\r\n      this.List().filter(\r\n        (assignment) =>\r\n          assignment.Status == assignmentStates.InProgress &&\r\n          assignment.userIsDirectlyAssigned(user)\r\n      )\r\n    );\r\n\r\n  remove = (assignmentToRemove) => {\r\n    this.List.remove((assignment) => assignment.ID == assignmentToRemove);\r\n  };\r\n\r\n  load = async () => {\r\n    this.IsLoading(true);\r\n    const start = new Date();\r\n\r\n    const allAssignments = await getAppContext().Assignments.FindByColumnValue(\r\n      [{ column: \"Status\", op: \"eq\", value: assignmentStates.InProgress }],\r\n      { orderByColumn: \"Title\", sortAsc: false },\r\n      {},\r\n      Assignment.Views.Dashboard,\r\n      false\r\n    );\r\n\r\n    this.List(allAssignments.results);\r\n\r\n    const end = new Date();\r\n    if (window.DEBUG)\r\n      console.log(\r\n        `All Assignments loaded: ${allAssignments.results.length} cnt in ${\r\n          end - start\r\n        }`\r\n      );\r\n    this.HasLoaded(true);\r\n    this.IsLoading(false);\r\n  };\r\n\r\n  init = async () => {\r\n    if (this.HasLoaded()) {\r\n      return;\r\n    }\r\n    if (this.IsLoading()) {\r\n      return new Promise((resolve, reject) => {\r\n        this.isLoadingSubscription = this.IsLoading.subscribe((isLoading) => {\r\n          this.isLoadingSubscription.dispose();\r\n          resolve();\r\n        });\r\n      });\r\n    }\r\n    await this.load();\r\n  };\r\n\r\n  dispose = () => {\r\n    if (this.isLoadingSubscription) this.isLoadingSubscription.dispose();\r\n  };\r\n}\r\n\r\nexport const assignmentsStore = new AssignmentsSet();\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const closedRequestsTableTemplate = html`\r\n  <div data-bind=\"\">\r\n    <div class=\"d-flex justify-content-between\">\r\n      <h2 class=\"mx-0\" data-bind=\"text: filter.Title\"></h2>\r\n      <i class=\"fa fa-sync pointer\" data-bind=\"click: refresh\"></i>\r\n    </div>\r\n\r\n    <!-- <input type=\"checkbox\" data-bind=\"checked: ShowAssignees\" /> -->\r\n    <!-- <div>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary\"\r\n      data-bind=\"click: loadAssignments\"\r\n    >\r\n      Show Assignees\r\n    </button>\r\n  </div> -->\r\n    <table\r\n      class=\"table table-striped table-hover w-100\"\r\n      data-bind=\"attr: {id: getTableElementId() } \"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>Order ID</th>\r\n          <th>Service Type</th>\r\n          <th>Requesting Office</th>\r\n          <th>Requestor</th>\r\n          <th>Submitted Date</th>\r\n          <th>Est. Completion Date</th>\r\n          <th>Closed Date</th>\r\n        </tr>\r\n      </thead>\r\n      <!-- ko if: IsLoading -->\r\n      <tbody data-bind=\"\">\r\n        <tr class=\"\">\r\n          <td colspan=\"7\" class=\"p-0\">\r\n            <progress class=\"w-100\"></progress>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      <!-- /ko -->\r\n      <!-- ko ifnot: IsLoading -->\r\n      <tbody data-bind=\"childrenComplete: tableBodyComplete\">\r\n        <!-- ko foreach: FilteredRequests -->\r\n        <tr class=\"pointer\" data-bind=\"click: $root.ViewRequest\">\r\n          <td data-bind=\"text: Title\"></td>\r\n          <td data-bind=\"text: RequestType.Title\"></td>\r\n          <td data-bind=\"text: RequestorInfo.Office()?.Title\"></td>\r\n          <td data-bind=\"text: RequestorInfo.Requestor()?.Title\"></td>\r\n          <td data-bind=\"text: Dates.Submitted.toSortableDateString()\"></td>\r\n          <td data-bind=\"text: Dates.EstClosed.toSortableDateString()\"></td>\r\n          <td data-bind=\"text: Dates.Closed.toSortableDateString()\"></td>\r\n        </tr>\r\n        <!-- /ko -->\r\n      </tbody>\r\n      <!-- /ko -->\r\n      <tfoot>\r\n        <tr>\r\n          <th clear-width data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- <button class=\"btn btn-primary\" data-bind=\"click: loadMore\">\r\n    Load More...\r\n  </button> -->\r\n`;\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const openOfficeRequestsTableTemplate = html`\r\n  <div data-bind=\"\">\r\n    <div class=\"d-flex justify-content-between\">\r\n      <h2 class=\"mx-0\" data-bind=\"text: filter.Title\"></h2>\r\n      <i class=\"fa fa-sync pointer\" data-bind=\"click: refresh\"></i>\r\n    </div>\r\n    <!-- <input type=\"checkbox\" data-bind=\"checked: ShowAssignees\" /> -->\r\n    <!-- <div>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary\"\r\n      data-bind=\"click: loadAssignments\"\r\n    >\r\n      Show Assignees\r\n    </button>\r\n  </div> -->\r\n    <table\r\n      class=\"table table-striped table-hover w-100\"\r\n      data-bind=\"attr: {id: getTableElementId() } \"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>Order ID</th>\r\n          <th>Service Type</th>\r\n          <th>Current Stage</th>\r\n          <th>Requesting Office</th>\r\n          <th>Requestor</th>\r\n          <th>Submitted Date</th>\r\n          <th>Est. Completion Date</th>\r\n          <th>Assignments</th>\r\n        </tr>\r\n      </thead>\r\n      <!-- ko if: IsLoading -->\r\n      <tbody data-bind=\"\">\r\n        <tr class=\"\">\r\n          <td colspan=\"8\" class=\"p-0\">\r\n            <progress class=\"w-100\"></progress>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      <!-- /ko -->\r\n      <!-- ko ifnot: IsLoading -->\r\n      <tbody data-bind=\"childrenComplete: tableBodyComplete\">\r\n        <!-- ko foreach: FilteredRequests -->\r\n        <tr class=\"pointer\" data-bind=\"click: $root.ViewRequest\">\r\n          <td data-bind=\"text: Title\"></td>\r\n          <td data-bind=\"text: RequestType.Title\"></td>\r\n          <td data-bind=\"text: Pipeline.Stage()?.Title\"></td>\r\n          <td data-bind=\"text: RequestorInfo.Office()?.Title\"></td>\r\n          <td data-bind=\"text: RequestorInfo.Requestor()?.Title\"></td>\r\n          <td data-bind=\"text: Dates.Submitted.toSortableDateString()\"></td>\r\n          <td\r\n            data-bind=\"text: Dates.EstClosed.toSortableDateString(), class: $parent.requestDateBackground($data) \"\r\n          ></td>\r\n          <td>\r\n            <table class=\"table table-sm m-0\">\r\n              <tbody data-bind=\"foreach: Assignments.list.All\">\r\n                <tr>\r\n                  <td data-bind=\"text: Assignee?.Title\"></td>\r\n                  <td data-bind=\"text: Role\"></td>\r\n                  <td data-bind=\"text: Status\"></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </tr>\r\n        <!-- /ko -->\r\n      </tbody>\r\n      <!-- /ko -->\r\n      <tfoot>\r\n        <tr>\r\n          <th clear-width data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"search-filter\"></th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- <button class=\"btn btn-primary\" data-bind=\"click: loadMore\">\r\n    Load More...\r\n  </button> -->\r\n`;\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const openRequestsTableTemplate = html`\r\n  <div data-bind=\"\">\r\n    <div class=\"d-flex justify-content-between\">\r\n      <h2 class=\"mx-0\" data-bind=\"text: filter.Title\"></h2>\r\n      <i class=\"fa fa-sync pointer\" data-bind=\"click: refresh\"></i>\r\n    </div>\r\n    <table\r\n      class=\"table table-striped table-hover w-100\"\r\n      data-bind=\"attr: {id: getTableElementId() } \"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>Order ID</th>\r\n          <th>Service Type</th>\r\n          <th>Current Stage</th>\r\n          <th>Requesting Office</th>\r\n          <th>Requestor</th>\r\n          <th>Submitted Date</th>\r\n          <th>Est. Completion Date</th>\r\n        </tr>\r\n      </thead>\r\n      <!-- ko if: IsLoading -->\r\n      <tbody>\r\n        <tr class=\"\">\r\n          <td colspan=\"7\" class=\"p-0\">\r\n            <progress class=\"w-100\"></progress>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      <!-- /ko -->\r\n      <!-- ko ifnot: IsLoading -->\r\n      <tbody data-bind=\"childrenComplete: tableBodyComplete\">\r\n        <!-- ko foreach: FilteredRequests -->\r\n        <tr class=\"pointer\" data-bind=\"click: $root.ViewRequest\">\r\n          <td data-bind=\"text: Title\"></td>\r\n          <td data-bind=\"text: RequestType.Title\"></td>\r\n          <td data-bind=\"text: Pipeline.Stage()?.Title\"></td>\r\n          <td data-bind=\"text: RequestorInfo.Office()?.Title\"></td>\r\n          <td data-bind=\"text: RequestorInfo.Requestor()?.Title\"></td>\r\n          <td data-bind=\"text: Dates.Submitted.toSortableDateString()\"></td>\r\n          <td data-bind=\"text: Dates.EstClosed.toSortableDateString()\"></td>\r\n        </tr>\r\n        <!-- /ko -->\r\n      </tbody>\r\n      <!-- /ko -->\r\n      <tfoot>\r\n        <tr>\r\n          <th clear-width data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n          <th data-filter=\"select-filter\"></th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- <button class=\"btn btn-primary\" data-bind=\"click: loadMore\">\r\n    Load More...\r\n  </button> -->\r\n`;\r\n", "import { makeDataTable } from \"../../common/DataTableExtensions.js\";\r\n\r\nimport { assignmentsStore } from \"../../stores/Assignments.js\";\r\nimport { BaseComponent } from \"../index.js\";\r\nimport { closedRequestsTableTemplate } from \"./ClosedRequestsTableTemplate.js\";\r\nimport { openOfficeRequestsTableTemplate } from \"./OpenOfficeRequestsTableTemplate.js\";\r\nimport { openRequestsTableTemplate } from \"./OpenRequestsTableTemplate.js\";\r\n\r\nclass RequestsByStatusTableModule extends BaseComponent {\r\n  constructor({ activeRequestSet, filteredRequests = null, key = \"office\" }) {\r\n    super();\r\n    this.key = key;\r\n    this.ActiveSet = activeRequestSet;\r\n    this.filter = this.ActiveSet.filter;\r\n    this.FilteredRequests = filteredRequests ?? this.ActiveSet.List;\r\n    this.IsLoading = this.ActiveSet.IsLoading;\r\n    this.HasLoaded = this.ActiveSet.HasLoaded;\r\n    this.init();\r\n  }\r\n\r\n  hasInitialized = false;\r\n\r\n  requestDateBackground = (request) => {\r\n    if (new Date() > request.Dates.EstClosed.Value()) return \"table-danger\";\r\n  };\r\n\r\n  getTableElementId = () =>\r\n    \"tbl-requests-status-\" + this.key + this.filter?.toLowerCase();\r\n\r\n  refresh = async () => {\r\n    await this.ActiveSet.load();\r\n  };\r\n\r\n  // getRequestAssignments = assignmentsStore.getByRequest;\r\n\r\n  tableBodyComplete = (nodes) => {\r\n    if (this.Table) this.Table.clear().destroy();\r\n    this.Table = makeDataTable(this.getTableElementId());\r\n  };\r\n\r\n  init = async () => {\r\n    await this.ActiveSet.init();\r\n    this.hasInitialized = true;\r\n  };\r\n\r\n  dispose = () => {};\r\n}\r\n\r\nexport class OpenRequestsTableModule extends RequestsByStatusTableModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = \"open-requests-table\";\r\n  static template = openRequestsTableTemplate;\r\n}\r\n\r\nexport class OpenOfficeRequestsTableModule extends RequestsByStatusTableModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = \"open-office-requests-table\";\r\n  static template = openOfficeRequestsTableTemplate;\r\n}\r\n\r\nexport class ClosedRequestsTableModule extends RequestsByStatusTableModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static name = \"closed-requests-table\";\r\n  static template = closedRequestsTableTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const requestsByServiceTypeTemplate = html`\r\n  <select\r\n    class=\"form-select\"\r\n    data-bind=\"value: SelectedService, \r\noptions: ServiceTypes, \r\noptionsCaption: 'Select...', \r\noptionsText: 'Title'\"\r\n  ></select>\r\n  <!-- ko if: SelectedService -->\r\n  <div\r\n    data-bind=\"component: {name: 'requests-by-service-type-table', params: {key, service: SelectedService()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n`;\r\n", "import { serviceTypeStore } from \"../../entities/ServiceType.js\";\r\nimport { currentUser } from \"../../infrastructure/Authorization.js\";\r\nimport { BaseComponent } from \"../BaseComponent.js\";\r\nimport { requestsByServiceTypeTemplate } from \"./RequestsServiceTypeTemplate.js\";\r\n\r\nexport class RequestsByServiceTypeModule extends BaseComponent {\r\n  constructor(params) {\r\n    super();\r\n    this.key = params.key;\r\n  }\r\n\r\n  ServiceTypes = ko.pureComputed(() =>\r\n    serviceTypeStore().filter((serviceType) =>\r\n      serviceType.userCanInitiate(currentUser())\r\n    )\r\n  );\r\n\r\n  SelectedService = ko.observable();\r\n\r\n  static name = \"requests-by-service-type\";\r\n  static template = requestsByServiceTypeTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const requestsByServiceTypeTableTemplate = html`\r\n  <!-- ko if: HasInitialized -->\r\n  <div class=\"my-3\">\r\n    <table\r\n      class=\"table table-striped table-hover\"\r\n      data-bind=\"childrenComplete: tableHasRendered, attr: {'id': getTableElementId()}\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>Request ID</th>\r\n          <th>Requesting Office</th>\r\n          <th>Requestor</th>\r\n          <th>Request Status</th>\r\n          <!-- ko foreach: SupplementCols -->\r\n          <th data-bind=\"text: displayName\"></th>\r\n          <!-- /ko -->\r\n        </tr>\r\n      </thead>\r\n      <tbody data-bind=\"foreach: {data: AllRequests, as: 'rmap'}\">\r\n        <tr class=\"pointer\" data-bind=\"click: $root.ViewRequest\">\r\n          <td data-bind=\"text: Title\"></td>\r\n          <td data-bind=\"text: RequestorInfo.Office()?.Title\"></td>\r\n          <td data-bind=\"text: RequestorInfo.Requestor()?.Title\"></td>\r\n          <td data-bind=\"text: State.Status\"></td>\r\n          <!-- ko foreach: $parent.SupplementCols -->\r\n          <td\r\n            data-bind=\"text: rmap.RequestBodyBlob?.Value().FieldMap[key]?.toString()\"\r\n          ></td>\r\n          <!-- /ko -->\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <!-- /ko -->\r\n`;\r\n", "import { makeDataTable } from \"../../common/DataTableExtensions.js\";\r\nimport { RequestEntity } from \"../../entities/Request.js\";\r\n\r\nimport { getAppContext } from \"../../infrastructure/ApplicationDbContext.js\";\r\nimport { BaseComponent } from \"../BaseComponent.js\";\r\nimport { requestsByServiceTypeTableTemplate } from \"./RequestsServiceTypeTableTemplate.js\";\r\n\r\nexport class RequestsByServiceTypeTableModule extends BaseComponent {\r\n  constructor({ service, key }) {\r\n    super();\r\n    if (window.DEBUG) console.log(\"New Service Type Table\", service.Title);\r\n    this.ServiceType = service;\r\n    this.key = key;\r\n    this._context = getAppContext();\r\n    this.init();\r\n  }\r\n\r\n  HasInitialized = ko.observable();\r\n  AllRequests = ko.observableArray();\r\n  Supplements = ko.observableArray();\r\n\r\n  requestMap = {};\r\n\r\n  _context;\r\n\r\n  requestCols = [\r\n    \"Title\",\r\n    \"RequestingOffice\",\r\n    \"Requestor\",\r\n    \"RequestStatus\",\r\n    \"RequestDescription\",\r\n  ];\r\n\r\n  SupplementCols = ko.observableArray();\r\n\r\n  getSupplementByRequestId = (request) => {\r\n    const supplement = this.Supplements().find(\r\n      (supplement) => supplement.Request?.ID == request.ID\r\n    );\r\n    if (!supplement) return null;\r\n\r\n    return supplement;\r\n  };\r\n\r\n  getTableElementId = () =>\r\n    `tbl-requests-type-${this.key}-${this.ServiceType.UID}`;\r\n\r\n  async init() {\r\n    const requestMap = this.requestMap;\r\n    // columns\r\n\r\n    // rows\r\n    // 1. Load requests by service type\r\n    const requestsPromise = await this._context.Requests.FindByColumnValue(\r\n      [{ column: \"ServiceType\", value: this.ServiceType.ID }],\r\n      { orderByColumn: \"Title\", sortAsc: false },\r\n      {},\r\n      RequestEntity.Views.ByServiceType\r\n    ).then((requests) => {\r\n      this.AllRequests(requests.results);\r\n      requests.results.map((req) => {\r\n        requestMap[req.Title]\r\n          ? (requestMap[req.Title].request = req)\r\n          : (requestMap[req.Title] = { request: req });\r\n      });\r\n    });\r\n\r\n    // 2. Early exit, service type doesn't have additional fields.\r\n    if (!this.ServiceType._constructor) {\r\n      await requestsPromise;\r\n      this.HasInitialized(true);\r\n      return;\r\n    }\r\n\r\n    const sampleEntity = await this.ServiceType.instantiateEntity();\r\n\r\n    Object.keys(sampleEntity.FieldMap).map((key) =>\r\n      this.SupplementCols.push({\r\n        key,\r\n        displayName: sampleEntity.FieldMap[key]?.displayName ?? key,\r\n      })\r\n    );\r\n\r\n    this.HasInitialized(true);\r\n  }\r\n\r\n  tableHasRendered = () => {\r\n    this.Table = makeDataTable(this.getTableElementId());\r\n    // setTimeout(\r\n    //   () => (this.Table = makeDataTable(this.getTableElementId())),\r\n    //   20\r\n    // );\r\n  };\r\n\r\n  static name = \"requests-by-service-type-table\";\r\n  static template = requestsByServiceTypeTableTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const myAssignmentsTemplate = html`\r\n  <table\r\n    id=\"my-assignments-table\"\r\n    class=\"table table-striped table-hover w-100\"\r\n  >\r\n    <thead>\r\n      <tr>\r\n        <th>Request</th>\r\n        <th>Service Type</th>\r\n        <th>Requesting Office</th>\r\n        <th>Requestor</th>\r\n        <th>Est Closed</th>\r\n        <!-- <th>Role(s)</th> -->\r\n      </tr>\r\n    </thead>\r\n    <!-- ko if: IsLoading -->\r\n    <tbody data-bind=\"\">\r\n      <tr class=\"\">\r\n        <td colspan=\"6\" class=\"p-0\">\r\n          <progress class=\"w-100\"></progress>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: IsLoading -->\r\n    <tbody\r\n      data-bind=\"childrenComplete: myPostProcessingLogic, foreach: MyAssignedRequests\"\r\n    >\r\n      <tr class=\"pointer\" data-bind=\"click: () => $root.ViewRequest($data)\">\r\n        <td data-bind=\"text: Title\"></td>\r\n        <td data-bind=\"text: RequestType.Title\"></td>\r\n        <td data-bind=\"text: RequestorInfo.Office()?.Title\"></td>\r\n        <td data-bind=\"text: RequestorInfo.Requestor()?.Title\"></td>\r\n        <td data-bind=\"text: Dates.EstClosed.toSortableDateString()\"></td>\r\n        <!-- ko if: false -->\r\n        <td>\r\n          <!-- ko foreach: Assignments.list.CurrentUserAssignments -->\r\n          <div\r\n            class=\"position-relative my-1 py-1 alert\"\r\n            data-bind=\"class: $parents[1].assignmentStatusClass($data)\"\r\n          >\r\n            <span data-bind=\"text: Role\"> </span>\r\n          </div>\r\n          <!-- /ko -->\r\n        </td>\r\n        <!-- /ko -->\r\n      </tr>\r\n    </tbody>\r\n    <!-- /ko -->\r\n  </table>\r\n\r\n  <!-- <div>\r\n  <p>Legend:</p>\r\n  <div class=\"badge rounded-pill text-bg-warning\">In Progress</div>\r\n  <div class=\"badge rounded-pill text-bg-success\">Completed</div>\r\n  <div class=\"badge rounded-pill text-bg-secondary\">No Action</div>\r\n</div> -->\r\n`;\r\n", "import { requestStates } from \"../../constants/index.js\";\r\n\r\nimport { requestsByStatusMap } from \"../../stores/Requests.js\";\r\nimport { assignmentsStore } from \"../../stores/Assignments.js\";\r\n\r\nimport { currentUser } from \"../../infrastructure/Authorization.js\";\r\n\r\nimport { makeDataTable } from \"../../common/DataTableExtensions.js\";\r\nimport { assignmentStates } from \"../../entities/Assignment.js\";\r\nimport { BaseComponent } from \"../BaseComponent.js\";\r\nimport { myAssignmentsTemplate } from \"./MyAssignmentsTemplate.js\";\r\n\r\nexport class MyAssignmentsModule extends BaseComponent {\r\n  constructor(Assignments) {\r\n    super();\r\n    // this.listBeforeChangeSubscritption = this.MyAssignments.subscribe(\r\n    //   this.listBeforeChangeWatcher,\r\n    //   this,\r\n    //   \"beforeChange\"\r\n    // );\r\n    // this.listAfterChangeSubscription = this.MyAssignments.subscribe(\r\n    //   this.listAfterChangeWatcher\r\n    // );\r\n  }\r\n  HasLoaded = ko.observable(false);\r\n\r\n  IsLoading = requestsByStatusMap.get(requestStates.open).IsLoading;\r\n  AllOpenRequests = requestsByStatusMap.get(requestStates.open).List;\r\n\r\n  MyAssignedRequests = assignmentsStore.MyAssignedRequests;\r\n\r\n  assignmentStatusClass = (assignment) => {\r\n    switch (assignment.Status) {\r\n      case assignmentStates.InProgress:\r\n        return \"alert-warning\";\r\n      default:\r\n        return \"alert-secondary\";\r\n    }\r\n  };\r\n\r\n  assignmentBadgeText = (assignment) => {\r\n    switch (assignment.Status) {\r\n      case assignmentStates.InProgress:\r\n        return \"In Progress\";\r\n      case assignmentStates.Completed:\r\n        return \"Completed\";\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  assignmentBadgeClass = (assignment) => {\r\n    switch (assignment.Status) {\r\n      case assignmentStates.InProgress:\r\n        return \"bg-warning\";\r\n      case assignmentStates.Completed:\r\n        return \"bg-success\";\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  listBeforeChangeWatcher = () => {\r\n    if (window.DEBUG) console.log(\"destroying table\");\r\n    if (!this.Table) return;\r\n    this.Table.clear().destroy();\r\n  };\r\n\r\n  listAfterChangeWatcher = () => {\r\n    if (window.DEBUG) console.log(\"creating table\");\r\n    setTimeout(() => (this.Table = makeDataTable(\"my-assignments-table\")), 20);\r\n  };\r\n\r\n  myPostProcessingLogic = (nodes) => {\r\n    this.Table = makeDataTable(\"my-assignments-table\");\r\n  };\r\n\r\n  init = async () => {\r\n    this.HasLoaded(true);\r\n  };\r\n\r\n  dispose = () => {\r\n    this.listAfterChangeSubscription.dispose();\r\n    this.listAfterChangeSubscription.dispose();\r\n  };\r\n\r\n  static name = \"my-assignments-table\";\r\n  static template = myAssignmentsTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const requestHeaderEditTemplate = html`\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6 pb-2\">\r\n        <h6>Request Status:</h6>\r\n        <p class=\"state-draft\">Draft</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6 pb-2\">\r\n        <label\r\n          ><h6>Request ID:</h6>\r\n          <p data-bind=\"text: ObservableTitle\"></p\r\n        ></label>\r\n      </div>\r\n      <div class=\"col-6 pb-2\">\r\n        <div class=\"form-group\">\r\n          <label><h6>Requesting Org:</h6></label>\r\n          <select\r\n            class=\"form-control\"\r\n            data-bind=\"value: RequestorInfo.Office,\r\n        options: AvailableRequestorOffices,\r\n        optionsText: (ro) => ro.Title\"\r\n          ></select>\r\n          <!-- <p>\r\n            GTM:\r\n            <span\r\n              data-bind=\"text: RequestorInfo.Office()?.GTM?.LookupValue\"\r\n            ></span>\r\n          </p> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6 pb-2\">\r\n        <h6>Requestor:</h6>\r\n        <div\r\n          id=\"people-requestor\"\r\n          data-bind=\"people: RequestorInfo.Requestor\"\r\n        ></div>\r\n      </div>\r\n      <div class=\"col-6 pb-2\">\r\n        <h6>Requestor Office:</h6>\r\n        <input\r\n          class=\"form-control\"\r\n          data-bind=\"value: RequestorInfo.OfficeSymbol.Value\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6 pb-2\">\r\n        <h6>Requestor Phone:</h6>\r\n        <input\r\n          type=\"tel\"\r\n          class=\"form-control\"\r\n          data-bind=\"value: RequestorInfo.Phone\"\r\n        />\r\n      </div>\r\n      <div class=\"col-6 pb-2\">\r\n        <h6>Requestor Email:</h6>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          class=\"fluid\"\r\n          data-bind=\"value: RequestorInfo.Email\"\r\n        />\r\n      </div>\r\n      <div class=\"col-12 pb-2\">\r\n        <h6>Service Type:</h6>\r\n        <p data-bind=\"text: RequestType.Title\"></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const requestHeaderViewTemplate = html`\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <h6>Request Status:</h6>\r\n        <p\r\n          data-bind=\"text: State.Status, class: 'state-' + State.Status()?.toLowerCase()\"\r\n        ></p>\r\n      </div>\r\n      <!-- ko if: Dates.Closed.get -->\r\n      <div class=\"col-6\">\r\n        <h6>Closed:</h6>\r\n        <p data-bind=\"text: Dates.Closed.toLocaleDateString()\"></p>\r\n      </div>\r\n      <!-- /ko -->\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <h6>Request ID:</h6>\r\n        <p data-bind=\"text: ObservableTitle\"></p>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <h6>Requesting Org:</h6>\r\n        <p data-bind=\"text: RequestorInfo.Office()?.Title\"></p>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <h6>Requestor:</h6>\r\n        <p data-bind=\"text: RequestorInfo.Requestor()?.Title\"></p>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <h6>Requestor Office:</h6>\r\n        <p data-bind=\"text: RequestorInfo.OfficeSymbol.Value\"></p>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <h6>Requestor Phone:</h6>\r\n        <p data-bind=\"text: RequestorInfo.Phone\"></p>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <h6>Requestor Email:</h6>\r\n        <p data-bind=\"text: RequestorInfo.Email\"></p>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <h6>Submitted Date:</h6>\r\n        <p data-bind=\"text: Dates.Submitted.toLocaleString()\"></p>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <h6>Service Type:</h6>\r\n        <p data-bind=\"text: RequestType.Title\"></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { serviceTypeStore } from \"../../entities/ServiceType.js\";\r\n\r\nimport { currentUser } from \"../../infrastructure/Authorization.js\";\r\nimport { BaseComponent } from \"../index.js\";\r\nimport { requestHeaderEditTemplate } from \"./RequestHeaderEditTemplate.js\";\r\nimport { requestHeaderViewTemplate } from \"./RequestHeaderViewTemplate.js\";\r\n\r\nclass RequestHeaderModule extends BaseComponent {\r\n  constructor(request) {\r\n    super();\r\n    Object.assign(this, request);\r\n  }\r\n\r\n  AvailableRequestorOffices = ko.pureComputed(() => {\r\n    return currentUser()?.RequestingOffices();\r\n  });\r\n\r\n  AvailableServiceTypes = ko.pureComputed(() => {\r\n    return serviceTypeStore().filter((serviceType) =>\r\n      serviceType.userCanInitiate(currentUser())\r\n    );\r\n  });\r\n}\r\n\r\nexport class RequestHeaderViewModule extends RequestHeaderModule {\r\n  constructor(request) {\r\n    super(request);\r\n  }\r\n\r\n  static name = \"request-header-view\";\r\n  static template = requestHeaderViewTemplate;\r\n}\r\n\r\nexport class RequestHeaderEditModule extends RequestHeaderModule {\r\n  constructor(request) {\r\n    super(request);\r\n  }\r\n\r\n  static name = \"request-header-edit\";\r\n  static template = requestHeaderEditTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const pipelineTemplate = html`\r\n  <div class=\"card pipeline-module\">\r\n    <div class=\"card-body p-0\">\r\n      <div class=\"card-title d-flex m-0\" data-bind=\"\">\r\n        <div class=\"d-flex flex-column justify-content-center mx-3 p-1\">\r\n          <i class=\"fa fa-3x\" data-bind=\"class: Pipeline.Icon\"></i>\r\n        </div>\r\n        <div class=\"flex-grow-1 bg-light-gray\">\r\n          <ol class=\"p-0 m-0 mt-4 d-flex\">\r\n            <!-- ko foreach: Pipeline.Stages -->\r\n            <li\r\n              class=\"d-flex stage-item flex-column justify-content-center px-3 py-1\"\r\n              data-bind=\"class: $parent.listItemTypeClass($data),\r\n            click: $parent.setSelected\"\r\n            >\r\n              <div class=\"d-flex align-items-center\" data-bind=\"\">\r\n                <h4 style=\"color: inherit\" data-bind=\"text: Step\"></h4>\r\n                <div class=\"mx-2\"></div>\r\n                <div>\r\n                  <div class=\"fw-bold\" data-bind=\"text: Title\"></div>\r\n                  <p data-bind=\"text: $parent.listItemSubText($data)\"></p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <!-- /ko -->\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      <!-- ko if: ShowActionsArea -->\r\n      <div class=\"\">\r\n        <div class=\"p-3\">\r\n          <div data-bind=\"using: SelectedStageDetail\">\r\n            <!-- ko if: IsCurrentStage() && CurrentUserActionableAssignments().length -->\r\n            <div>\r\n              <p class=\"text-secondary\">\r\n                Please complete the following assignment actions to advance this\r\n                request.\r\n              </p>\r\n              <!-- ko foreach: CurrentUserActionableAssignments -->\r\n              <div data-bind=\"foreach: Errors\">\r\n                <div\r\n                  class=\"alert alert-warning\"\r\n                  role=\"alert\"\r\n                  data-bind=\"text: description\"\r\n                ></div>\r\n              </div>\r\n              <!-- ko using: getComponent({request: $parent.request}) -->\r\n              <div\r\n                data-bind=\"component: { name: actionComponentName, params: $data }\"\r\n              ></div>\r\n              <!-- /ko -->\r\n              <!-- /ko -->\r\n            </div>\r\n            <!-- /ko -->\r\n            <div class=\"mt-4 accordion-item\">\r\n              <div class=\"accordion-header pointer\">\r\n                <h5\r\n                  class=\"accordion-title collapsed\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#stage-assignment-body\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Stage Assignments <i class=\"indicator fa fa-caret-down\"></i>\r\n                </h5>\r\n              </div>\r\n              <div\r\n                id=\"stage-assignment-body\"\r\n                class=\"accordion-collapse collapse\"\r\n                style=\"\"\r\n              >\r\n                <p class=\"text-secondary\">\r\n                  View and manage all assignments for this stage.\r\n                </p>\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Assigned To</th>\r\n                      <th>Request Org</th>\r\n                      <th>Role</th>\r\n                      <th>Status</th>\r\n                      <th>Completed By</th>\r\n                      <th>Completed On</th>\r\n                      <!-- ko if: IsCurrentStage -->\r\n                      <th>Action</th>\r\n                      <!-- /ko -->\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <!-- ko foreach: AllStageAssignments -->\r\n                    <!-- <tr\r\n                  data-bind=\"\r\n                  css: {'pointer': isUserActionable()},\r\n                  click: toggleExpanded\r\n                  \"\r\n                > -->\r\n                    <tr>\r\n                      <td data-bind=\"text: Assignee?.Title\"></td>\r\n                      <td data-bind=\"text: RequestOrg?.Title\"></td>\r\n                      <td data-bind=\"text: Role\"></td>\r\n                      <td data-bind=\"text: Status\"></td>\r\n                      <td data-bind=\"text: ActionTaker?.Title ?? 'N/A'\"></td>\r\n                      <td\r\n                        data-bind=\"text: CompletionDate?.toLocaleString() ?? 'N/A'\"\r\n                      ></td>\r\n                      <!-- ko if: $parent.IsCurrentStage -->\r\n                      <td>\r\n                        <!-- ko if: $parent.userCanAssign -->\r\n                        <i\r\n                          class=\"fas fa-search pointer\"\r\n                          data-bind=\"click: $parent.view\"\r\n                        ></i>\r\n                        <i\r\n                          class=\"fa fa-trash pointer\"\r\n                          data-bind=\"click: $parent.remove\"\r\n                        ></i>\r\n                        <!-- /ko -->\r\n                      </td>\r\n                      <!-- /ko -->\r\n                    </tr>\r\n                    <!-- ko if: false && $parent.IsCurrentStage() && isUserActionable() && isExpanded() -->\r\n                    <tr>\r\n                      <td colspan=\"7\" data-bind=\"\"></td>\r\n                    </tr>\r\n                    <!-- /ko -->\r\n                    <!-- /ko -->\r\n                  </tbody>\r\n                </table>\r\n                <!-- ko if: userCanAssign() -->\r\n                <div\r\n                  data-bind=\"component: { name: 'new-assignment', params: {addAssignment: addNew } }\"\r\n                ></div>\r\n                <!-- /ko -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- ko if: false -->\r\n          <div>\r\n            <!-- ko using: request.Assignments.CurrentStage -->\r\n            <!-- ko if: AssignmentComponents().length -->\r\n            <div data-bind=\"foreach: Validation.Errors\">\r\n              <div\r\n                class=\"alert alert-warning\"\r\n                role=\"alert\"\r\n                data-bind=\"text: description\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"\">\r\n              <!-- ko foreach: AssignmentComponents -->\r\n              <div\r\n                data-bind=\"component: {name: actionComponentName, params: $data }\"\r\n              ></div>\r\n              <!-- /ko -->\r\n            </div>\r\n            <!-- /ko -->\r\n            <!-- /ko -->\r\n          </div>\r\n          <!-- /ko -->\r\n        </div>\r\n      </div>\r\n      <!-- /ko -->\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { actionTypes } from \"../../entities/Action.js\";\r\nimport { stageActionTypes } from \"../../entities/PipelineStage.js\";\r\nimport { requestStates } from \"../../constants/index.js\";\r\nimport { currentUser } from \"../../infrastructure/Authorization.js\";\r\nimport { BaseComponent } from \"../BaseComponent.js\";\r\nimport { pipelineTemplate } from \"./PipelineTemplate.js\";\r\n\r\nexport class PipelineModule extends BaseComponent {\r\n  constructor({ request }) {\r\n    super();\r\n    this.request = request;\r\n    this.Pipeline = request.Pipeline;\r\n\r\n    // We only want to show the open stages\r\n    this.allPipelineDetails = this.request.Pipeline.Stages()\r\n      .filter((stage) => stage.ActionType != stageActionTypes.Closed)\r\n      .map((stage) => new PipelineStageDetail({ request, stage }));\r\n\r\n    this.Pipeline.Stage.subscribe(this.SelectedStage);\r\n    this.SelectedStage(this.Pipeline.Stage());\r\n  }\r\n\r\n  ShowActionsArea = ko.pureComputed(() => this.SelectedStageDetail());\r\n\r\n  // TODO: Minor - Show the completion date of each stage\r\n  listItemShowBorderlessBottom = (stage) => {\r\n    return this.Pipeline.Stage()?.Step == stage.Step && this.ShowActionsArea();\r\n  };\r\n\r\n  listItemTypeClass = (stage) => {\r\n    if (\r\n      this.SelectedStage()?.ID == stage.ID &&\r\n      stage.ActionType != stageActionTypes.Closed\r\n    ) {\r\n      return \"bg-primary text-white pointer active\";\r\n    }\r\n\r\n    if (stage.Step < this.Pipeline.Stage()?.Step)\r\n      return \"bg-secondary text-white pointer\";\r\n\r\n    if (this.Pipeline.Stage()?.ID == stage.ID) {\r\n      switch (this.request.State.Status()) {\r\n        case requestStates.open:\r\n          return \"bg-primary-subtle pointer\";\r\n        case requestStates.cancelled:\r\n        case requestStates.rejected:\r\n          return \"bg-danger text-white pointer\";\r\n        case requestStates.fulfilled:\r\n          return \"bg-success text-white pointer\";\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  listItemSubText = (stage) => {\r\n    // return the date the stage was completed or the actiontype\r\n    const stageAction = ko.unwrap(stage?.ActionType);\r\n    if (!stageAction) return \"\";\r\n    if (stageActionTypes.Closed == stageAction) {\r\n      return stageAction;\r\n    }\r\n    const thisStepNum = stage.Step ?? 0;\r\n    const nextStepNum = thisStepNum + 1;\r\n    const nextStage = this.Pipeline.Stages()?.find(\r\n      (nStage) => nStage.Step == nextStepNum\r\n    );\r\n\r\n    const advancedAction = this.request.Actions.list.All().find((action) => {\r\n      if (nextStage.ActionType == stageActionTypes.Closed)\r\n        return action.ActionType == actionTypes.Closed;\r\n      return (\r\n        action.PipelineStage?.Step == nextStage.Step &&\r\n        action.ActionType == actionTypes.Advanced\r\n      );\r\n    });\r\n\r\n    if (!advancedAction) return stageAction;\r\n\r\n    return \"Completed: \" + advancedAction.Created?.toLocaleDateString();\r\n    // const advanced = this.request.\r\n  };\r\n\r\n  setSelected = (stage) => {\r\n    if (!this.Pipeline.Stage() || stage.Step > this.Pipeline.Stage()?.Step)\r\n      return;\r\n    this.SelectedStage(stage);\r\n  };\r\n\r\n  SelectedStage = ko.observable();\r\n\r\n  SelectedStageDetail = ko.pureComputed(\r\n    () =>\r\n      this.allPipelineDetails.find(\r\n        (detail) => detail.stage.ID == this.SelectedStage()?.ID\r\n      )\r\n    // new PipelineStageDetail({\r\n    //   request: this.request,\r\n    //   stage: this.SelectedStage(),\r\n    // })\r\n  );\r\n\r\n  StageDetail;\r\n\r\n  static name = \"pipeline-component\";\r\n  static template = pipelineTemplate;\r\n}\r\n\r\nclass PipelineStageDetail {\r\n  constructor({ request, stage }) {\r\n    this.request = request;\r\n    this.stage = stage;\r\n  }\r\n\r\n  IsCurrentStage = ko.pureComputed(\r\n    () => this.request.Pipeline.Stage()?.ID == this.stage.ID\r\n  );\r\n\r\n  AllStageAssignments = ko.pureComputed(() => {\r\n    return this.request.Assignments.list\r\n      .All()\r\n      .filter((assignment) => assignment.PipelineStage.ID == this.stage.ID);\r\n  });\r\n\r\n  CurrentUserActionableAssignments = ko.pureComputed(() =>\r\n    this.AllStageAssignments().filter((assignment) =>\r\n      assignment.isUserActionable()\r\n    )\r\n  );\r\n\r\n  view = (assignment) => this.request.Assignments.view(assignment);\r\n\r\n  remove = (assignment) => this.request.Assignments.remove(assignment);\r\n  addNew = (assignment) => this.request.Assignments.addNew(assignment);\r\n\r\n  userCanAssign = ko.pureComputed(() => {\r\n    const user = currentUser();\r\n    return this.IsCurrentStage() && user.isInRequestOrg(this.stage.RequestOrg);\r\n  });\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const quickInfoTemplate = html`\r\n  <div id=\"quick-info\" class=\"d-flex justify-content-between mb-3\">\r\n    <div class=\"action-group d-flex flex-column justify-content-end\">\r\n      <!-- ko if: ShowActionOfficeToggle -->\r\n      <div class=\"form-check form-switch\">\r\n        <label class=\"form-check-label\"\r\n          >Enable System Action Office Features\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            data-bind=\"checked: ToggleActionOfficeFeatures\"\r\n        /></label>\r\n      </div>\r\n      <!-- /ko -->\r\n      <button\r\n        class=\"btn btn-primary mb-3\"\r\n        data-bind=\"click: $root.SelectNewRequest\"\r\n        type=\"button\"\r\n      >\r\n        New Request <i class=\"fa-solid fa-plus\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"ms-auto status-cards\" style=\"min-width: 20rem\">\r\n      <div class=\"status-info open-assignments\">\r\n        <div\r\n          class=\"card info-header\"\r\n          title=\"Toggle Open Assignments\"\r\n          data-bind=\"click: toggleInfoContainer\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <img\r\n              src=\"/sites/CGFS/Style Library/apps/wo/assets/Direct Assignments.svg\"\r\n            />\r\n            <h5 data-bind=\"text: MyOpenAssignments().length\"></h5>\r\n            Open Assignments\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"info-table-container alert\"\r\n          data-bind=\"class: MyOpenAssignments().length > 0 ? 'alert-warning' : 'alert-success'\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <!-- ko ifnot: MyOpenAssignments().length -->\r\n            <p>Nothing to Show!</p>\r\n            <!-- /ko -->\r\n            <!-- ko if: MyOpenAssignments().length -->\r\n            <table class=\"table table-warning table-sm table-hover m-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Request</th>\r\n                  <th>Assignee</th>\r\n                  <th>Role</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody data-bind=\"foreach: MyOpenAssignments\">\r\n                <tr\r\n                  title=\"Go to Request\"\r\n                  class=\"pointer\"\r\n                  data-bind=\"click: () => $root.viewRequestByTitle($data.Request.Title)\"\r\n                >\r\n                  <td data-bind=\"text: Request.Title\"></td>\r\n                  <td data-bind=\"text: Assignee?.Title\"></td>\r\n                  <td data-bind=\"text: Role\"></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- /ko -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- ko if: ShowActionOfficeFeatures -->\r\n      <div class=\"status-info late-requests\">\r\n        <div\r\n          class=\"card info-header\"\r\n          title=\"Toggle Team Late Requests\"\r\n          data-bind=\"click: toggleInfoContainer\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <img\r\n              src=\"/sites/CGFS/Style Library/apps/wo/assets/Late Requests.svg\"\r\n            />\r\n            <h5 data-bind=\"text: LateRequests().length\"></h5>\r\n            Late Requests\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"info-table-container alert\"\r\n          data-bind=\"class: LateRequests().length > 0 ? 'alert-danger' : 'alert-success'\"\r\n        >\r\n          <div class=\"card-body\">\r\n            <!-- ko ifnot: LateRequests().length -->\r\n            <p>Nothing to Show!</p>\r\n            <!-- /ko -->\r\n            <!-- ko if: LateRequests().length -->\r\n            <table class=\"table table-danger table-sm table-hover m-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Request</th>\r\n                  <th>Service Type</th>\r\n                  <th>Est. Closed Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody data-bind=\"foreach: LateRequests\">\r\n                <tr\r\n                  class=\"pointer\"\r\n                  title=\"Go to Request\"\r\n                  data-bind=\"click: $root.ViewRequest\"\r\n                >\r\n                  <td data-bind=\"text: Title\"></td>\r\n                  <td data-bind=\"text: RequestType.Title\"></td>\r\n                  <td\r\n                    data-bind=\"text: Dates.EstClosed.toLocaleDateString()\"\r\n                  ></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- /ko -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"w-full\"\r\n        data-bind='component: \"pending-request-ingests\"'\r\n      ></div>\r\n      <!-- /ko -->\r\n    </div>\r\n  </div>\r\n\r\n  <style>\r\n    #quick-info {\r\n      gap: 1rem;\r\n    }\r\n\r\n    #quick-info .action-group {\r\n      min-width: 224px;\r\n      width: 224px;\r\n      padding: 1rem;\r\n    }\r\n\r\n    #quick-info .status-cards {\r\n      display: flex;\r\n      gap: 1rem;\r\n      flex-wrap: wrap;\r\n      justify-content: end;\r\n    }\r\n\r\n    #quick-info img {\r\n      width: 2.5rem;\r\n      height: 2.5rem;\r\n      background-color: white;\r\n      border-radius: 6px;\r\n      margin-bottom: 8px;\r\n      padding: 0.25rem;\r\n    }\r\n\r\n    .status-info {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: end;\r\n    }\r\n\r\n    .status-info .info-header {\r\n      height: 138px;\r\n      width: 230px;\r\n      color: white;\r\n      cursor: pointer;\r\n      z-index: 5;\r\n    }\r\n\r\n    .status-info .info-header:hover {\r\n      filter: brightness(0.9);\r\n    }\r\n\r\n    .status-info.open-assignments .info-header {\r\n      background: linear-gradient(145deg, #4d547e, #303346);\r\n    }\r\n\r\n    .status-info.late-requests .info-header {\r\n      background: linear-gradient(145deg, #fc6f7f, #ec1719);\r\n    }\r\n\r\n    .status-info .info-table-container {\r\n      /* display: none; */\r\n      border-radius: 6px;\r\n      position: relative;\r\n      left: -34px;\r\n      z-index: 4;\r\n      overflow: hidden;\r\n      max-height: 0px;\r\n      transition: max-height 0.35s ease-out;\r\n      max-width: 0px;\r\n      transition: max-width 0.35s ease-out;\r\n    }\r\n\r\n    .status-info.active .info-table-container {\r\n      padding: 1rem 1rem 1rem 50px;\r\n      max-height: 450px;\r\n      transition: max-height 0.35s ease-in;\r\n      max-width: 500px;\r\n      transition: max-width 0.35s ease-in;\r\n    }\r\n\r\n    .status-info .info-table-container .card-body {\r\n      max-height: 198px;\r\n      overflow-y: auto;\r\n      overflow-x: hidden;\r\n    }\r\n\r\n    .status-info .info-table-container table thead {\r\n      position: sticky;\r\n      top: 0;\r\n      text-wrap: nowrap;\r\n    }\r\n    /* #quick-info .status-info {\r\n    display: block;\r\n  } */\r\n  </style>\r\n`;\r\n", "import { assignmentStates } from \"../../entities/Assignment.js\";\r\nimport { requestStates } from \"../../constants/index.js\";\r\nimport { currentUser } from \"../../infrastructure/Authorization.js\";\r\n\r\nimport { requestsByStatusMap } from \"../../stores/Requests.js\";\r\nimport { assignmentsStore } from \"../../stores/Assignments.js\";\r\nimport { BaseComponent } from \"../BaseComponent.js\";\r\nimport { quickInfoTemplate } from \"./QuickInfoTemplate.js\";\r\n\r\nexport class QuickInfoModule extends BaseComponent {\r\n  constructor({ ShowActionOfficeFeatures, ToggleActionOfficeFeatures }) {\r\n    super();\r\n    this.ShowActionOfficeFeatures = ShowActionOfficeFeatures;\r\n    this.ToggleActionOfficeFeatures = ToggleActionOfficeFeatures;\r\n  }\r\n\r\n  ShowActionOfficeToggle = ko.pureComputed(() => {\r\n    return currentUser()?.IsActionOffice() && false;\r\n  });\r\n\r\n  MyOpenAssignments = assignmentsStore.MyActiveAssignments;\r\n\r\n  LateRequests = ko.pureComputed(() => {\r\n    return (\r\n      requestsByStatusMap\r\n        .get(requestStates.open)\r\n        ?.List()\r\n        ?.filter((request) => {\r\n          return request.Dates.EstClosed.Value() <= new Date();\r\n        }) ?? []\r\n    );\r\n  });\r\n\r\n  toggleInfoContainer = (data, event) => {\r\n    event.target.closest(\".status-info\").classList.toggle(\"active\");\r\n  };\r\n\r\n  static name = \"quick-info\";\r\n  static template = quickInfoTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const newAssignmentTemplate = html`\r\n  <div class=\"input-group\">\r\n    <span class=\"input-group-text\">Add New Assignment</span>\r\n    <div\r\n      class=\"people-new-assignee\"\r\n      data-bind=\"attr: {id: getAsigneeElementID()}, people: Assignee\"\r\n    ></div>\r\n    <select\r\n      name=\"\"\r\n      id=\"\"\r\n      class=\"form-select\"\r\n      data-bind=\"value: Role,\r\n      options: Roles,\r\n      optionsText: (role) => role.LookupValue,\r\n      optionsCaption: 'Select...'\"\r\n    ></select>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary\"\r\n      data-bind=\"click: submit,\r\n    enable: Role() && Assignee()\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </div>\r\n  <!-- ko if: Role -->\r\n  <div class=\"mt-2 p-1 ps-2 alert alert-info\">\r\n    <strong><span data-bind=\"text: Role().LookupValue\"></span>:</strong>\r\n    <span data-bind=\"text: Role().description\"></span>\r\n  </div>\r\n  <!-- /ko -->\r\n`;\r\n", "import { assignmentRoles } from \"../../entities/Assignment.js\";\r\nimport {\r\n  roles,\r\n  stageActionRoleMap,\r\n} from \"../../infrastructure/Authorization.js\";\r\nimport { BaseComponent } from \"../BaseComponent.js\";\r\nimport { newAssignmentTemplate } from \"./NewAssignmentTemplate.js\";\r\n\r\nexport class NewAssignmentModule extends BaseComponent {\r\n  constructor({ addAssignment, stage = null }) {\r\n    super();\r\n    this.stage = stage;\r\n    this.addAssignment = addAssignment;\r\n\r\n    this.uniqueInt = Math.floor(Math.random() * 100);\r\n    if (this.stage) {\r\n      this.Role(stageActionRoleMap[this.stage.ActionType]);\r\n    }\r\n  }\r\n\r\n  getAsigneeElementID = () => `people-new-assignee-${this.uniqueInt}`;\r\n\r\n  Assignee = ko.observable();\r\n  Role = ko.observable();\r\n\r\n  Roles = Object.values(roles);\r\n  // .map((key) => {\r\n  //   return {\r\n  //     key,\r\n  //     value: roles[key].LookupValue,\r\n  //   };\r\n  // });\r\n\r\n  submit = async () => {\r\n    const assignment = {\r\n      Role: this.Role(),\r\n      Assignee: this.Assignee(),\r\n      PipelineStage: this.stage,\r\n      RequestOrg: this.stage?.RequestOrg,\r\n    };\r\n    try {\r\n      await this.addAssignment(assignment);\r\n    } catch (e) {\r\n      console.error(\"Unable to save assignment\", e);\r\n      alert(\"Something went wrong saving the assignment\");\r\n      return;\r\n    }\r\n    this.Assignee(null);\r\n    this.Role(null);\r\n  };\r\n\r\n  static name = \"new-assignment\";\r\n  static template = newAssignmentTemplate;\r\n}\r\n", "import { html } from \"../BaseComponent.js\";\r\nexport const taskToastTemplate = html`\r\n  <div\r\n    class=\"toast show align-items-center\"\r\n    role=\"alert\"\r\n    aria-live=\"assertive\"\r\n    aria-atomic=\"true\"\r\n  >\r\n    <div class=\"d-flex\">\r\n      <div class=\"toast-body\" data-bind=\"text: FormatMessage\"></div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn-close me-1 m-auto\"\r\n        data-bs-dismiss=\"toast\"\r\n        aria-label=\"Close\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { BaseComponent } from \"../BaseComponent.js\";\r\nimport { taskToastTemplate } from \"./TaskToastTemplate.js\";\r\n\r\nexport class TaskToastModule extends BaseComponent {\r\n  constructor(task) {\r\n    Object.assign(this, task);\r\n  }\r\n\r\n  FormatMessage = ko.pureComputed(() => `${this.msg}... ${this.Status()}`);\r\n\r\n  static name = \"task-toast\";\r\n  static template = taskToastTemplate;\r\n}\r\n", "import { html } from \"../index.js\";\r\n\r\nexport const emailRequestTemplate = html`\r\n  <button\r\n    title=\"Create Email from Request\"\r\n    type=\"button\"\r\n    class=\"btn btn-link action\"\r\n    data-bind=\"click: showDialog\"\r\n  >\r\n    <i class=\"fa-solid fa-envelope\"></i>\r\n  </button>\r\n  <dialog id=\"dialog-email-request\" class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"card-title d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h3>Send Request as Email</h3>\r\n        </div>\r\n        <div class=\"d-flex justify-content-end\">\r\n          <i\r\n            class=\"fa-solid fa-xmark pointer\"\r\n            data-bind=\"click: closeDialog\"\r\n          ></i>\r\n        </div>\r\n      </div>\r\n      <div data-bind=\"with: Notification\">\r\n        <div>\r\n          <div\r\n            data-bind=\"component: {name: ToString.components.edit, params: ToString}\"\r\n          ></div>\r\n          <div\r\n            data-bind=\"component: {name: CCString.components.edit, params: CCString}\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          data-bind=\"component: {name: Title.components.edit, params: Title}\"\r\n        ></div>\r\n        <div\r\n          data-bind=\"component: {name: SendAs.components.edit, params: SendAs}\"\r\n        ></div>\r\n        <div\r\n          data-bind=\"component: {name: Body.components.edit, params: Body}\"\r\n        ></div>\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-link\"\r\n          title=\"Add a hyperlink to the request\"\r\n          data-bind=\"click: insertRequestLink\"\r\n          title=\"Insert a hyperlink to this request\"\r\n        >\r\n          <i class=\"fa-solid fa-link\"></i>\r\n          Insert Direct Link to Request\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-link\"\r\n          title=\"Add request attachments to this notification\"\r\n          data-bind=\"click: includeAttachments, enable: ShowIncludeAttachments\"\r\n          title=\"Include attachments from request\"\r\n        >\r\n          <i class=\"fa-solid fa-file-circle-plus\"></i>\r\n          Include Request Attachments\r\n        </button>\r\n      </div>\r\n      <div data-bind=\"if: Attachments().length\" class=\"attachments-section\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>File Name</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody data-bind=\"foreach: Attachments\">\r\n            <tr>\r\n              <td>\r\n                <div data-bind=\"text: Title\"></div>\r\n              </td>\r\n              <td>\r\n                <a\r\n                  target=\"_blank\"\r\n                  data-bind=\"attr: { href: FileRef }, text: FileLeafRef\"\r\n                ></a>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-link\"\r\n                  title=\"Don't include this attachment on the notification\"\r\n                >\r\n                  <i\r\n                    class=\"fa-solid fa-circle-xmark\"\r\n                    data-bind=\"click:  $parent.removeAttachment\"\r\n                  ></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"d-flex justify-content-end gap-3\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger\"\r\n          data-bind=\"click: closeDialog\"\r\n          title=\"Close cancel\"\r\n        >\r\n          <i class=\"fa-solid fa-circle-xmark\"></i>\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-success\"\r\n          data-bind=\"click: sendEmail\"\r\n          title=\"Send email\"\r\n        >\r\n          <i class=\"fa-solid fa-paper-plane\"></i>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </dialog>\r\n`;\r\n", "import { Notification } from \"../../entities/index.js\";\r\nimport CheckboxField from \"../../fields/CheckboxField.js\";\r\nimport {\r\n  createRequestDetailNotification,\r\n  submitNotification,\r\n} from \"../../infrastructure/Notifications.js\";\r\nimport { registerComponentFromConstructor } from \"../../infrastructure/RegisterComponents.js\";\r\nimport { BaseComponent, html } from \"../index.js\";\r\nimport { emailRequestTemplate } from \"./EmailRequestTemplate.js\";\r\n\r\nconst dialogId = \"dialog-email-request\";\r\n\r\nexport class EmailRequestModule extends BaseComponent {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    this.request = params.request;\r\n  }\r\n\r\n  request;\r\n  Notification = ko.observable();\r\n  Attachments = ko.observableArray();\r\n\r\n  insertRequestLink = () => {\r\n    const link = this.request.getAppLinkElement();\r\n\r\n    const body = this.Notification().Body.Value();\r\n\r\n    this.Notification().Body.Value(link + `<br>` + body);\r\n  };\r\n\r\n  ShowIncludeAttachments = ko.pureComputed(\r\n    () => this.request.Attachments.list.Active().length\r\n  );\r\n\r\n  includeAttachments = () => {\r\n    // Load attachments\r\n    const attachments = this.request.Attachments.list\r\n      .Active()\r\n      .map((attachment) => attachment);\r\n    this.Attachments(attachments);\r\n  };\r\n\r\n  removeAttachment = (attachment) => {\r\n    this.Attachments.remove(attachment);\r\n  };\r\n\r\n  sendEmail = async () => {\r\n    const notification = ko.unwrap(this.Notification);\r\n\r\n    this.closeDialog();\r\n    // TODO: Validate notification\r\n    if (!notification) return;\r\n\r\n    const attachments = ko.unwrap(this.Attachments);\r\n\r\n    const result = await submitNotification(\r\n      notification,\r\n      this.request.getRelativeFolderPath(),\r\n      attachments\r\n    );\r\n  };\r\n\r\n  init() {\r\n    const notification = createRequestDetailNotification({\r\n      request: this.request,\r\n    });\r\n\r\n    this.Notification(notification);\r\n  }\r\n\r\n  showDialog() {\r\n    this.init();\r\n    document.getElementById(dialogId)?.showModal();\r\n  }\r\n\r\n  closeDialog() {\r\n    document.getElementById(dialogId)?.close();\r\n  }\r\n\r\n  static name = \"send-request-as-email\";\r\n  static template = emailRequestTemplate;\r\n}\r\n", "import * as Components from \"../components/index.js\";\r\nexport const html = String.raw;\r\n\r\nexport function RegisterComponents() {\r\n  // register our components\r\n  for (const key in Components) {\r\n    const component = Components[key];\r\n    if (component.prototype instanceof Components.BaseComponent) {\r\n      registerComponentFromConstructor(component);\r\n    }\r\n  }\r\n}\r\n\r\nexport function registerComponentFromConstructor(constructor) {\r\n  ko.components.register(constructor.name, {\r\n    template: constructor.template,\r\n    viewModel: constructor,\r\n  });\r\n}\r\n\r\nexport function registerComponentFromPath({\r\n  name,\r\n  folder,\r\n  module: moduleFilename,\r\n  template: templateFilename,\r\n}) {\r\n  if (ko.components.isRegistered(name)) {\r\n    return;\r\n  }\r\n  ko.components.register(name, {\r\n    template: {\r\n      fromPath: `/components/${folder}/${templateFilename}.html`,\r\n    },\r\n    viewModel: {\r\n      viaLoader: `/components/${folder}/${moduleFilename}.js`,\r\n    },\r\n  });\r\n}\r\n\r\nexport function registerServiceTypeViewComponents({ uid, components }) {\r\n  // If we don't specify a view, default to the template views\r\n  Object.keys(components).forEach((view) => {\r\n    const componentName = components[view];\r\n    if (!ko.components.isRegistered(componentName)) {\r\n      ko.components.register(componentName, {\r\n        template: {\r\n          fromPath: `/servicetypes/${uid}/views/${view}.html`,\r\n          fallback: `/components/ConstrainedEntity/Default${view}.html`,\r\n        },\r\n        // viewModel: ConstrainedEntityComponents,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport function registerServiceTypeActionComponent({\r\n  uid,\r\n  componentName,\r\n  templateName = null,\r\n  moduleName = null,\r\n}) {\r\n  if (ko.components.isRegistered(componentName)) {\r\n    return;\r\n  }\r\n  ko.components.register(componentName, {\r\n    template: {\r\n      fromPath: `/servicetypes/${uid}/components/${\r\n        templateName ?? componentName\r\n      }.html`,\r\n    },\r\n    viewModel: {\r\n      viaLoader: `/servicetypes/${uid}/components/${\r\n        moduleName ?? componentName\r\n      }.js`,\r\n    },\r\n  });\r\n}\r\n", "import { serviceTypeStore } from \"../entities/ServiceType.js\";\r\nimport { RequestEntity } from \"../entities/Request.js\";\r\n\r\nimport { currentUser } from \"../infrastructure/Authorization.js\";\r\n// Show the available service types\r\nexport class NewRequestView {\r\n  templateId = \"tmpl-request-detail\";\r\n\r\n  ServiceTypeStore = serviceTypeStore;\r\n\r\n  SelectedServiceType = ko.observable();\r\n\r\n  ActiveServiceTypes = ko.pureComputed(() =>\r\n    serviceTypeStore().filter((serviceType) =>\r\n      serviceType.userCanInitiate(currentUser())\r\n    )\r\n  );\r\n\r\n  formatAttachmentDescription = () => {\r\n    const desc = this.SelectedServiceType()?.AttachmentDescription;\r\n    if (desc && Boolean(desc.trim())) {\r\n      return desc;\r\n    }\r\n    return \"<i>Not applicable.</i>\";\r\n  };\r\n\r\n  getDescriptionModal = () =>\r\n    document.getElementById(\"dialog-new-request-detail\");\r\n\r\n  selectServiceTypeHandler = (data, e) => {\r\n    this.SelectedServiceType(data);\r\n    setTimeout(() => {\r\n      e.target.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }, 460);\r\n    // const descModal = this.getDescriptionModal();\r\n    // descModal.showModal();\r\n  };\r\n\r\n  cancelCreateServiceType = () => {\r\n    this.SelectedServiceType(null);\r\n    // const descModal = this.getDescriptionModal();\r\n    // descModal.close();\r\n  };\r\n\r\n  confirmCreateServiceType = async () => {\r\n    const serviceType = this.SelectedServiceType();\r\n    this.SelectedServiceType(null);\r\n\r\n    // const descModal = this.getDescriptionModal();\r\n    // descModal.close();\r\n\r\n    await serviceType.initializeEntity();\r\n\r\n    const newRequest = RequestEntity.CreateByServiceType({\r\n      ServiceType: serviceType,\r\n    });\r\n\r\n    window.WorkOrder.App.NewRequest({ request: newRequest });\r\n  };\r\n\r\n  constructor() {\r\n    console.log(\"new\");\r\n  }\r\n}\r\n", "import { requestStates } from \"../constants/index.js\";\r\nimport { currentUser } from \"../infrastructure/Authorization.js\";\r\n\r\nimport { requestsByStatusMap } from \"../stores/Requests.js\";\r\nimport { assignmentsStore } from \"../stores/Assignments.js\";\r\n\r\nconst byServiceTypeKey = \"By Service Type\";\r\n\r\nconst tableComponentMap = {};\r\ntableComponentMap[requestStates.open] = \"open-office-requests-table\";\r\ntableComponentMap[requestStates.fulfilled] = \"closed-requests-table\";\r\ntableComponentMap[requestStates.cancelled] = \"closed-requests-table\";\r\ntableComponentMap[requestStates.rejected] = \"closed-requests-table\";\r\ntableComponentMap[byServiceTypeKey] = \"requests-by-service-type\";\r\n\r\nexport class OfficeRequestsView {\r\n  constructor() {\r\n    this.RequestsByStatusMap = requestsByStatusMap;\r\n    this.ShowAssignments.subscribe(this.showAssignmentsWatcher);\r\n    // this.init();\r\n    this.ActiveKey(requestStates.open);\r\n  }\r\n\r\n  async init() {\r\n    const openRequests = this.RequestsByStatusMap.get(requestStates.open);\r\n    await openRequests.init();\r\n    await assignmentsStore.init();\r\n\r\n    this.HasLoaded(true);\r\n  }\r\n\r\n  byServiceTypeKey = byServiceTypeKey;\r\n\r\n  HasLoaded = ko.observable(false);\r\n  ShowAssignments = ko.observable(false);\r\n  ActiveKey = ko.observable();\r\n\r\n  ActiveTableComponentName = ko.pureComputed(\r\n    () => tableComponentMap[this.ActiveKey()]\r\n  );\r\n\r\n  ActiveTableParams = ko.pureComputed(() => {\r\n    if (this.RequestsByStatusMap.has(this.ActiveKey())) {\r\n      const activeRequestSet = this.RequestsByStatusMap.get(this.ActiveKey());\r\n      const filteredRequests = ko.pureComputed(() =>\r\n        activeRequestSet\r\n          .List()\r\n          .filter((request) =>\r\n            request.RequestOrgs().find(currentUser().isInRequestOrg)\r\n          )\r\n      );\r\n      return {\r\n        activeRequestSet,\r\n        filteredRequests,\r\n        key: \"office\",\r\n      };\r\n    }\r\n    return {\r\n      key: \"office\",\r\n    };\r\n  });\r\n\r\n  showAssignmentsWatcher = (showAssignments) => {\r\n    console.log(\"assignments toggled\");\r\n  };\r\n\r\n  StatusOptions = ko.pureComputed(() => {\r\n    return [...this.RequestsByStatusMap.keys()];\r\n  });\r\n}\r\n", "import { getUrlParam, setUrlParam } from \"../common/Router.js\";\r\nimport { requestStates } from \"../constants/index.js\";\r\nimport { getAppContext } from \"../infrastructure/ApplicationDbContext.js\";\r\nimport { requestsByStatusMap } from \"../stores/Requests.js\";\r\n\r\nconst byServiceTypeKey = \"By Service Type\";\r\n\r\n// These are all registered component names\r\nconst tableComponentMap = {};\r\ntableComponentMap[requestStates.open] = \"open-requests-table\";\r\ntableComponentMap[requestStates.fulfilled] = \"closed-requests-table\";\r\ntableComponentMap[requestStates.cancelled] = \"closed-requests-table\";\r\ntableComponentMap[requestStates.rejected] = \"closed-requests-table\";\r\ntableComponentMap[byServiceTypeKey] = \"requests-by-service-type\";\r\n\r\nexport class MyRequestsView {\r\n  constructor() {\r\n    this.RequestsByStatusMap = requestsByStatusMap;\r\n    // this.init();\r\n    this.ActiveKey(requestStates.open);\r\n  }\r\n\r\n  async init() {\r\n    const openRequests = this.RequestsByStatusMap.get(requestStates.open);\r\n    await openRequests.init();\r\n    this.HasLoaded(true);\r\n  }\r\n\r\n  HasLoaded = ko.observable(false);\r\n  ActiveKey = ko.observable();\r\n\r\n  ActiveTableComponentName = ko.pureComputed(\r\n    () => tableComponentMap[this.ActiveKey()]\r\n  );\r\n\r\n  ActiveTableParams = ko.pureComputed(() => {\r\n    if (this.RequestsByStatusMap.has(this.ActiveKey())) {\r\n      const activeRequestSet = this.RequestsByStatusMap.get(this.ActiveKey());\r\n      return {\r\n        activeRequestSet,\r\n        filteredRequests: activeRequestSet.List,\r\n        key: \"my\",\r\n      };\r\n    }\r\n    return {\r\n      key: \"my\",\r\n    };\r\n  });\r\n\r\n  StatusOptions = ko.pureComputed(() => {\r\n    return [...this.RequestsByStatusMap.keys()];\r\n  });\r\n}\r\n", "import { People } from \"../entities/People.js\";\r\nimport { ensureUserByKeyAsync } from \"../infrastructure/SAL.js\";\r\nimport { assetsPath } from \"../env.js\";\r\n\r\nko.subscribable.fn.subscribeChanged = function (callback) {\r\n  var oldValue;\r\n  this.subscribe(\r\n    function (_oldValue) {\r\n      oldValue = _oldValue;\r\n    },\r\n    this,\r\n    \"beforeChange\"\r\n  );\r\n\r\n  this.subscribe(function (newValue) {\r\n    callback(newValue, oldValue);\r\n  });\r\n};\r\n\r\nko.observableArray.fn.subscribeAdded = function (callback) {\r\n  this.subscribe(\r\n    function (arrayChanges) {\r\n      const addedValues = arrayChanges\r\n        .filter((value) => value.status == \"added\")\r\n        .map((value) => value.value);\r\n      callback(addedValues);\r\n    },\r\n    this,\r\n    \"arrayChange\"\r\n  );\r\n};\r\n\r\nko.bindingHandlers.dateField = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {},\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {},\r\n};\r\n\r\nko.bindingHandlers.files = {\r\n  init: function (element, valueAccessor) {\r\n    function addFiles(fileList) {\r\n      var value = valueAccessor();\r\n      if (!fileList.length) {\r\n        value.removeAll();\r\n        return;\r\n      }\r\n\r\n      const existingFiles = ko.unwrap(value);\r\n      const newFileList = [];\r\n      for (let file of fileList) {\r\n        if (!existingFiles.find((exFile) => exFile.name == file.name))\r\n          newFileList.push(file);\r\n      }\r\n      ko.utils.arrayPushAll(value, newFileList);\r\n      return;\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", function () {\r\n      addFiles(element.files);\r\n    });\r\n\r\n    const label = element.closest(\"label\");\r\n    if (!label) return;\r\n\r\n    ko.utils.registerEventHandler(label, \"dragover\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragenter\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.add(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragleave\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.remove(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"drop\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let dt = event.originalEvent.dataTransfer;\r\n      let files = dt.files;\r\n      addFiles(files);\r\n    });\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const value = valueAccessor();\r\n    if (!value().length && element.files.length) {\r\n      // clear all files\r\n      element.value = null;\r\n      return;\r\n    }\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggles = {\r\n  init: function (element, valueAccessor) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      value(!value());\r\n    });\r\n  },\r\n};\r\n\r\nko.bindingHandlers.people = {\r\n  init: function (element, valueAccessor, allBindings) {\r\n    const pickerOptions = allBindings.get(\"pickerOptions\") ?? {};\r\n\r\n    if (ko.isObservable(pickerOptions)) {\r\n      pickerOptions.subscribe(initPickerElement);\r\n    }\r\n\r\n    initPickerElement(ko.unwrap(pickerOptions));\r\n\r\n    function initPickerElement(pickerOptions) {\r\n      var schema = {};\r\n      schema[\"PrincipalAccountType\"] = \"User\";\r\n      schema[\"SearchPrincipalSource\"] = 15;\r\n      schema[\"ShowUserPresence\"] = true;\r\n      schema[\"ResolvePrincipalSource\"] = 15;\r\n      schema[\"AllowEmailAddresses\"] = true;\r\n      schema[\"AllowMultipleValues\"] = false;\r\n      schema[\"MaximumEntitySuggestions\"] = 50;\r\n\r\n      Object.assign(schema, pickerOptions);\r\n\r\n      schema[\"OnUserResolvedClientScript\"] = async function (elemId, userKeys) {\r\n        const multiple = schema.AllowMultipleValues;\r\n\r\n        //  get reference of People Picker Control\r\n        var pickerControl =\r\n          SPClientPeoplePicker.SPClientPeoplePickerDict[elemId];\r\n        var observable = valueAccessor();\r\n        var userJSObjects = pickerControl.GetControlValueAsJSObject();\r\n        if (!userJSObjects.length) {\r\n          multiple ? observable.removeAll() : observable(null);\r\n          return;\r\n        }\r\n\r\n        if (!multiple) {\r\n          const userObj = userJSObjects[0];\r\n          if (userObj.IsResolved) {\r\n            if (userObj.Key == observable()?.LoginName) return;\r\n            var user = await ensureUserByKeyAsync(userObj.Key);\r\n            var person = new People(user);\r\n            observable(person);\r\n          }\r\n          return;\r\n        }\r\n\r\n        const currentUserKeys = observable().map((u) => u.LoginName);\r\n\r\n        const people = await Promise.all(\r\n          userJSObjects\r\n            .filter((userObj) => userObj.IsResolved)\r\n            .map(async (userObj) => {\r\n              // If this user is already resolved, return it\r\n              const existingUser = observable().find(\r\n                (u) => u.LoginName == userObj.Key\r\n              );\r\n\r\n              if (existingUser) return existingUser;\r\n\r\n              var user = await ensureUserByKeyAsync(userObj.Key);\r\n              return new People(user);\r\n            })\r\n        );\r\n        observable(people);\r\n      };\r\n\r\n      //  Initialize the Control, MS enforces to pass the Element ID hence we need to provide\r\n      //  ID to our element, no other options\r\n      SPClientPeoplePicker_InitStandaloneControlWrapper(\r\n        element.id,\r\n        null,\r\n        schema\r\n      );\r\n\r\n      // Clear input autocomplete suggestions\r\n      for (const input of element.querySelectorAll(\"input\")) {\r\n        input.setAttribute(\"autocomplete\", \"off\");\r\n        input.setAttribute(\"aria-autocomplete\", \"none\");\r\n      }\r\n    }\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const pickerOptions = ko.unwrap(allBindings.get(\"pickerOptions\") ?? {});\r\n\r\n    var pickerControl =\r\n      SPClientPeoplePicker.SPClientPeoplePickerDict[element.id + \"_TopSpan\"];\r\n\r\n    var userValue = ko.unwrap(valueAccessor());\r\n\r\n    if (!pickerOptions.AllowMultipleValues) {\r\n      // This control supports a single user\r\n      if (!userValue) {\r\n        // Clear the form\r\n        pickerControl?.DeleteProcessedUser();\r\n        return;\r\n      }\r\n\r\n      if (\r\n        userValue &&\r\n        !pickerControl\r\n          .GetAllUserInfo()\r\n          .find((pickerUser) => pickerUser.DisplayText == userValue.LookupValue)\r\n      ) {\r\n        pickerControl.AddUserKeys(\r\n          userValue.LoginName ?? userValue.LookupValue ?? userValue.Title\r\n        );\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // This control supports multiple users\r\n    if (!userValue.length) {\r\n      pickerControl?.DeleteProcessedUser();\r\n      return;\r\n    }\r\n\r\n    // Add new users\r\n    userValue.map((u) => {\r\n      if (\r\n        !pickerControl\r\n          .GetAllUserInfo()\r\n          .find((pickerUser) => pickerUser.DisplayText == u.LookupValue)\r\n      ) {\r\n        pickerControl.AddUserKeys(u.LoginName ?? u.LookupValue ?? u.Title);\r\n      }\r\n    });\r\n\r\n    // Remove Existing users\r\n    pickerControl.GetAllUserInfo().map((pickerUser) => {\r\n      if (!userValue.find((u) => u.LookupValue == pickerUser.DisplayText)) {\r\n        // TODO:\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nconst fromPathTemplateLoader = {\r\n  loadTemplate: function (name, templateConfig, callback) {\r\n    if (templateConfig.fromPath) {\r\n      // TODO: Minor - fix error catching and fallback flow\r\n      fetch(assetsPath + templateConfig.fromPath)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\r\n              `Error Fetching HTML Template - ${response.statusText}`\r\n            );\r\n          }\r\n          return response.text();\r\n        })\r\n        .catch((error) => {\r\n          if (!templateConfig.fallback) return;\r\n          console.warn(\r\n            \"Primary template not found, attempting fallback\",\r\n            templateConfig\r\n          );\r\n          fetch(assetsPath + templateConfig.fallback)\r\n            .then((response) => {\r\n              if (!response.ok) {\r\n                throw new Error(\r\n                  `Error Fetching fallback HTML Template - ${response.statusText}`\r\n                );\r\n              }\r\n              return response.text();\r\n            })\r\n            .then((text) =>\r\n              ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            );\r\n        })\r\n        .then((text) =>\r\n          text\r\n            ? ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            : null\r\n        );\r\n    } else {\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathTemplateLoader);\r\n\r\nconst fromPathViewModelLoader = {\r\n  loadViewModel: function (name, viewModelConfig, callback) {\r\n    if (viewModelConfig.viaLoader) {\r\n      // console.log(\"loading module\", name);\r\n      const module = import(assetsPath + viewModelConfig.viaLoader).then(\r\n        (module) => {\r\n          // console.log(\"imported module\", name);\r\n          const viewModelConstructor = module.default;\r\n          // We need a createViewModel function, not a plain constructor.\r\n          // We can use the default loader to convert to the\r\n          // required format.\r\n          ko.components.defaultLoader.loadViewModel(\r\n            name,\r\n            viewModelConstructor,\r\n            callback\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      // Unrecognized config format. Let another loader handle it.\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathViewModelLoader);\r\n", "import { assignmentsStore } from \"../stores/Assignments.js\";\r\n\r\nexport default class MyAssignmentsView {\r\n  constructor() {\r\n    this.init();\r\n    this.IsLoading = assignmentsStore.IsLoading;\r\n  }\r\n\r\n  HasLoaded = ko.observable(false);\r\n\r\n  init = async () => {\r\n    await assignmentsStore.init();\r\n    this.HasLoaded(true);\r\n  };\r\n}\r\n", "import { RegisterComponents } from \"./infrastructure/RegisterComponents.js\";\r\nimport { RequestDetailView, DisplayModes } from \"./views/RequestDetailView.js\";\r\nimport { NewRequestView } from \"./views/NewRequestView.js\";\r\nimport { OfficeRequestsView } from \"./views/OfficeRequestsView.js\";\r\nimport { MyRequestsView } from \"./views/MyRequestsView.js\";\r\n\r\nimport { RequestEntity } from \"./entities/Request.js\";\r\nimport { requestOrgStore } from \"./entities/RequestOrg.js\";\r\nimport { pipelineStageStore } from \"./entities/PipelineStage.js\";\r\nimport { serviceTypeStore } from \"./entities/ServiceType.js\";\r\nimport { holidayStore } from \"./entities/Holiday.js\";\r\n\r\nimport \"./common/KnockoutExtensions.js\";\r\nimport { sortByTitle } from \"./common/EntityUtilities.js\";\r\nimport { getUrlParam, setUrlParam } from \"./common/Router.js\";\r\n\r\nimport { assignmentsStore } from \"./stores/Assignments.js\";\r\n\r\nimport {\r\n  User,\r\n  currentUser,\r\n  systemRoles,\r\n} from \"./infrastructure/Authorization.js\";\r\nimport {\r\n  getAppContext,\r\n  CreateAppContext,\r\n} from \"./infrastructure/ApplicationDbContext.js\";\r\nimport { InitSal } from \"./infrastructure/SAL.js\";\r\n\r\nimport MyAssignmentsView from \"./views/MyAssignmentsView.js\";\r\nimport { blockingTasks, runningTasks } from \"./stores/Tasks.js\";\r\n\r\nimport { Tabs } from \"./env.js\";\r\nimport { requestsByStatusMap, requestIngests } from \"./stores/Requests.js\";\r\n\r\nwindow.WorkOrder = window.WorkOrder || {};\r\n\r\nasync function CreateApp() {\r\n  ko.options.deferUpdates = true;\r\n  await InitSal();\r\n  RegisterComponents();\r\n  CreateAppContext();\r\n  window.WorkOrder.App = await App.Create();\r\n  ko.applyBindings(window.WorkOrder.App);\r\n}\r\n\r\nclass App {\r\n  constructor() {\r\n    this.Tab.subscribe(tabWatcher);\r\n    window.addEventListener(\"popstate\", this.popStateHandler);\r\n  }\r\n\r\n  RunningTasks = runningTasks;\r\n  BlockingTasks = blockingTasks;\r\n\r\n  ToggleActionOfficeFeatures = ko.observable(true);\r\n  ShowActionOfficeFeatures = ko.pureComputed(\r\n    () =>\r\n      this.CurrentUser()?.IsActionOffice() && this.ToggleActionOfficeFeatures()\r\n  );\r\n  HasLoaded = ko.observable(false);\r\n\r\n  CurrentUser = currentUser;\r\n  context = getAppContext();\r\n\r\n  Tab = ko.observable();\r\n  TabClicked = (data, e) => this.Tab(e.target.getAttribute(\"id\"));\r\n\r\n  popStateHandler = (event) => {\r\n    if (event.state) {\r\n      if (event.state.tab) this.Tab(event.state.tab);\r\n    }\r\n  };\r\n\r\n  MyActiveAssignments = assignmentsStore.MyActiveAssignments;\r\n  //   MyOpenAssignments = ko.pureComputed(() =>\r\n  //   this.CurrentUser()\r\n  //     ? assignmentsStore.getOpenByUser(this.CurrentUser())()\r\n  //     : []\r\n  // );\r\n\r\n  Config = {\r\n    pipelineStageStore,\r\n    requestOrgStore,\r\n    serviceTypeStore,\r\n    holidayStore,\r\n  };\r\n\r\n  // Views\r\n  OfficeRequestsView = new OfficeRequestsView();\r\n  MyRequestsView = new MyRequestsView();\r\n  MyAssignmentsView = new MyAssignmentsView();\r\n  NewRequestView = new NewRequestView();\r\n  RequestDetailView = new RequestDetailView();\r\n  // RequestDetailView = ko.observable();\r\n\r\n  Authorization = {\r\n    currentUserIsAdmin: ko.pureComputed(() => {\r\n      return currentUser()?.hasSystemRole(systemRoles.Admin);\r\n    }),\r\n  };\r\n\r\n  Init = async function () {\r\n    configLists: {\r\n      var pipelinesPromise = this.context.ConfigPipelines.ToList().then(\r\n        this.Config.pipelineStageStore\r\n      );\r\n\r\n      var requestOrgsPromise = this.context.ConfigRequestOrgs.ToList().then(\r\n        (arr) => this.Config.requestOrgStore(arr.sort(sortByTitle))\r\n      );\r\n\r\n      var serviceTypePromise = this.context.ConfigServiceTypes.ToList().then(\r\n        async (arr) => {\r\n          await Promise.all(\r\n            arr.map(async (service) => service.initializeEntity())\r\n          );\r\n          this.Config.serviceTypeStore(arr.sort(sortByTitle));\r\n        }\r\n      );\r\n\r\n      const holidaysPromise = this.context.ConfigHolidays.ToList().then(\r\n        this.Config.holidayStore\r\n      );\r\n\r\n      const configResults = await Promise.all([\r\n        requestOrgsPromise,\r\n        pipelinesPromise,\r\n        serviceTypePromise,\r\n        holidaysPromise,\r\n      ]);\r\n    }\r\n\r\n    user: {\r\n      this.CurrentUser(await User.Create());\r\n    }\r\n\r\n    routing: {\r\n      var startTab = getUrlParam(\"tab\") || Tabs.MyRequests;\r\n      var reqId = getUrlParam(\"reqId\");\r\n      if (reqId && startTab == Tabs.RequestDetail) {\r\n        this.viewRequestByTitle(reqId);\r\n      } else if (startTab == Tabs.RequestDetail) {\r\n        startTab = Tabs.NewRequest;\r\n      }\r\n      this.Tab(startTab);\r\n    }\r\n    // Fetch any requests that are ready for ingest\r\n\r\n    requestIngests(await this.context.RequestIngests.ToList());\r\n\r\n    this.HasLoaded(true);\r\n    // Kick off the initial data load\r\n    // this.InitData();\r\n  };\r\n\r\n  SelectNewRequest = (data, e) => {\r\n    this.Tab(Tabs.NewRequest);\r\n  };\r\n\r\n  NewRequest = ({ request = null, serviceType = null }) => {\r\n    const props = {\r\n      request: request ?? new RequestEntity({}),\r\n      displayMode: DisplayModes.New,\r\n    };\r\n    setUrlParam(\"reqId\", \"\");\r\n    this.RequestDetailView.createNewRequest(props);\r\n    this.Tab(Tabs.RequestDetail);\r\n  };\r\n\r\n  viewRequestByTitle = async (title) => {\r\n    const results = await this.context.Requests.FindByColumnValue(\r\n      [{ column: \"Title\", value: title }],\r\n      {},\r\n      {},\r\n      RequestEntity.Views.All,\r\n      false\r\n    );\r\n    if (!results.results.length) {\r\n      console.warn(\"Request not found: \", title);\r\n      return;\r\n    }\r\n    this.ViewRequest(results.results[0]);\r\n  };\r\n\r\n  ViewRequest = async (request) => {\r\n    //var title = \"230330-6165\";\r\n    // request = {\r\n    //   ID: 539,\r\n    //   Title: \"230330-6165\",\r\n    // };\r\n    setUrlParam(\"reqId\", request.Title);\r\n    this.RequestDetailView.viewRequest({\r\n      request,\r\n    });\r\n    this.Tab(Tabs.RequestDetail);\r\n  };\r\n\r\n  static Create = async function () {\r\n    const report = new App();\r\n    await report.Init();\r\n    return report;\r\n  };\r\n}\r\n\r\nconst tabWatcher = (newTab) => {\r\n  if (!newTab) {\r\n    return;\r\n  }\r\n  var tabTriggerElement = document.getElementById(newTab);\r\n  var tab = new bootstrap.Tab(tabTriggerElement);\r\n  setUrlParam(\"tab\", newTab);\r\n  tab.show();\r\n};\r\n\r\nif (document.readyState === \"ready\" || document.readyState === \"complete\") {\r\n  CreateApp();\r\n} else {\r\n  document.onreadystatechange = () => {\r\n    if (document.readyState === \"complete\" || document.readyState === \"ready\") {\r\n      ExecuteOrDelayUntilScriptLoaded(function () {\r\n        SP.SOD.executeFunc(\"sp.js\", \"SP.ClientContext\", CreateApp);\r\n      }, \"sp.js\");\r\n    }\r\n  };\r\n}\r\n\r\n// try {\r\n//   SP.SOD.executeFunc(\"sp.js\", \"SP.ClientContext\", () => {});\r\n// } catch (e) {\r\n//   console.warn(\"SP.SOD SP.ClientContext Error\", e);\r\n// }\r\n", "import \"../lib/webcomponents/searchselect/searchselect.js\";\r\nimport appTemplate from \"./app.txt\";\r\nimport \"./app.js\";\r\n\r\ndocument.getElementById(\"app\").innerHTML = appTemplate;\r\n"],
  "mappings": "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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;A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",
  "names": ["html", "ValidationError", "OrgTypes", "requestOrgStore", "RequestOrg", "PipelineStage", "request", "oRoleDefinitions", "oRoleDefinition", "roles", "siteGroups", "permissions", "oRoleDefinition", "data", "oGroup", "context", "group", "context", "data", "currCtx", "web", "self", "roles", "principal", "bindings", "oListItem", "folderArr", "idx", "folderUrl", "success", "args", "copyFileAsync", "error", "requestOrgStore", "OrgTypes", "request", "html", "html", "html", "request", "html", "html", "html", "html", "Entity", "ValidationError", "data", "request", "html", "request", "context", "request", "html", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "editTemplate", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "data", "editTemplate", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "request", "request", "BlobField", "ValidationError", "newAssignment", "ServiceType", "BlobField", "html", "BlobField", "request", "html", "html", "html", "ValidationError", "html", "ValidationError", "errorSource", "requestOrgStore", "request", "html", "html", "components", "html", "components", "html", "html", "html", "html", "components", "html", "html", "components", "getApmOrg", "requestOrgStore", "set", "request", "BlobField", "entity", "html", "context", "request", "html", "html", "html", "request", "html", "html", "request", "supplement", "html", "html", "html", "request", "html", "request", "html", "request", "data", "html", "html", "html", "html", "data", "request", "byServiceTypeKey", "tableComponentMap", "pickerOptions", "user", "error", "module", "data", "requestOrgStore", "request"]
}
